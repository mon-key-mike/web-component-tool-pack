{"version":3,"file":"w-package-tools.umd.js","sources":["../src/cleanFolder.mjs","../src/deleteFolder.mjs","../src/getFiles.mjs","../src/getPks.mjs","../src/getReadme.mjs","../src/setPks.mjs","../src/pmSeries.mjs"],"sourcesContent":["import fs from 'fs'\r\n\r\n\r\nfunction core(path) {\r\n    fs.readdirSync(path).forEach(function(file, index) {\r\n        var curPath = path + '/' + file\r\n        if (fs.lstatSync(curPath).isDirectory()) { // recurse\r\n            core(curPath)\r\n        }\r\n        else { // delete file\r\n            fs.unlinkSync(curPath)\r\n        }\r\n    })\r\n    fs.rmdirSync(path)\r\n}\r\n\r\n\r\n/**\r\n * 清空資料夾\r\n *\r\n * @param {String} path 輸入欲清空資料夾路徑字串\r\n */\r\nfunction cleanFolder(path) {\r\n    if (fs.existsSync(path)) {\r\n        fs.readdirSync(path).forEach(function(file, index) {\r\n            var curPath = path + '/' + file\r\n            if (fs.lstatSync(curPath).isDirectory()) { // recurse\r\n                core(curPath)\r\n            }\r\n            else {\r\n                fs.unlinkSync(curPath)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default cleanFolder\r\n","import fs from 'fs'\r\n\r\n\r\n/**\r\n * 刪除資料牙\r\n *\r\n * @param {Str} path 輸入欲刪除資料夾路徑字串\r\n */\r\nfunction deleteFolder(path) {\r\n    if (fs.existsSync(path)) {\r\n        //console.log('in: ', path)\r\n        fs.readdirSync(path).forEach(function(file, index) {\r\n            var curPath = path + '/' + file\r\n            if (fs.lstatSync(curPath).isDirectory()) { // recurse\r\n                deleteFolder(curPath)\r\n            }\r\n            else { // delete file\r\n                //console.log('delete file: ', curPath)\r\n                fs.unlinkSync(curPath)\r\n            }\r\n        })\r\n        //console.log('delete folder: ', path)\r\n        fs.rmdirSync(path)\r\n    }\r\n}\r\n\r\n\r\nexport default deleteFolder\r\n","import fs from 'fs'\r\n\r\n\r\n/**\r\n * 取得資料夾下所有檔案\r\n *\r\n * @param {String} fd 輸入資料夾路徑字串\r\n * @returns {Array} 回傳檔案字串陣列\r\n */\r\nfunction getFiles(fd) {\r\n\r\n    //check\r\n    if (!fs.existsSync(fd)) {\r\n        return []\r\n    }\r\n\r\n    //readdir\r\n    let ltfs = fs.readdirSync(fd, { withFileTypes: true })\r\n\r\n    //filter\r\n    ltfs = ltfs.filter((v) => {\r\n        let b = !v.isDirectory()\r\n        return b\r\n    })\r\n\r\n    //map\r\n    ltfs = ltfs.map((v) => {\r\n        return v.name\r\n    })\r\n\r\n    return ltfs\r\n}\r\n\r\n\r\nexport default getFiles\r\n","import fs from 'fs'\r\n\r\n\r\n/**\r\n * 取得package.json資料物件\r\n *\r\n * @param {string} [fn='./package.json'] 輸入package.json路徑字串\r\n * @returns {Object} 回傳資料物件\r\n */\r\nfunction getPks(fn = './package.json') {\r\n    let c = fs.readFileSync(fn, 'utf8')\r\n    return JSON.parse(c)\r\n}\r\n\r\n\r\nexport default getPks\r\n","import fs from 'fs'\r\nimport _ from 'lodash'\r\n\r\n\r\n/**\r\n * 讀取readme資料物件\r\n *\r\n * @param {string} [fn='./README.md'] 輸入readme檔案路徑字串\r\n * @returns {Object} 回傳readme資料物件\r\n */\r\nfunction getReadme(fn = './README.md') {\r\n    let c = fs.readFileSync(fn, 'utf8')\r\n    return {\r\n        content: c,\r\n        lines: _.split(c, '\\r\\n')\r\n    }\r\n}\r\n\r\n\r\nexport default getReadme\r\n","import fs from 'fs'\r\n\r\n\r\n/**\r\n * 儲存資料至package.json\r\n *\r\n * @param {Object} pks 輸入package.json資料物件\r\n * @param {string} [fn='./package.json'] 輸入package.json路徑字串\r\n */\r\nfunction setPks(pks, fn = './package.json') {\r\n    let c = JSON.stringify(pks, null, 2)\r\n    fs.writeFileSync(fn, c, 'utf8')\r\n}\r\n\r\n\r\nexport default setPks\r\n","/**\r\n * 輸入數據陣列並循序執行\r\n *\r\n * @param {Array} pms 輸入數據陣列\r\n * @param {Function} fn 輸入執行函數，需return Promise\r\n * @returns {Promise} 回傳Promise，resolve為成功，reject為失敗並提供錯誤訊息\r\n */\r\nfunction pmSeries(pms, fn) {\r\n    return new Promise((resolve, reject) => {\r\n        pms.reduce(function(pmm, v) {\r\n            return pmm.then(function(t) {\r\n                return fn(v)\r\n            })\r\n        }, Promise.resolve())\r\n            .then(function() {\r\n                resolve()\r\n            }).catch(function(err) {\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n\r\nexport default pmSeries\r\n"],"names":["core","path","fs","readdirSync","forEach","file","curPath","lstatSync","isDirectory","unlinkSync","rmdirSync","cleanFolder","existsSync","deleteFolder","getFiles","fd","ltfs","withFileTypes","filter","v","b","map","name","getPks","fn","c","readFileSync","JSON","parse","getReadme","content","lines","_","split","setPks","pks","stringify","writeFileSync","pms","Promise","resolve","reject","reduce","pmm","then","err"],"mappings":"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"}