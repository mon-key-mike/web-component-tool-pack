!function(U,F){"object"==typeof exports&&"undefined"!=typeof module?module.exports=F(require("worker_threads")):"function"==typeof define&&define.amd?define(["worker_threads"],F):(U="undefined"!=typeof globalThis?globalThis:U||self).gWorker5_FunAsm=F(U.worker_threads)}(this,(function(U){"use strict";"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;var F={};!function(F,Q){F.exports=function(U){var F={};!function(U){var F=Object.prototype.hasOwnProperty,Q="~";function B(){}function V(U,F,Q){this.fn=U,this.context=F,this.once=Q||!1}function l(U,F,B,l,R){if("function"!=typeof B)throw new TypeError("The listener must be a function");var d=new V(B,l||U,R),Z=Q?Q+F:F;return U._events[Z]?U._events[Z].fn?U._events[Z]=[U._events[Z],d]:U._events[Z].push(d):(U._events[Z]=d,U._eventsCount++),U}function R(U,F){0==--U._eventsCount?U._events=new B:delete U._events[F]}function d(){this._events=new B,this._eventsCount=0}Object.create&&(B.prototype=Object.create(null),(new B).__proto__||(Q=!1)),d.prototype.eventNames=function(){var U,B,V=[];if(0===this._eventsCount)return V;for(B in U=this._events)F.call(U,B)&&V.push(Q?B.slice(1):B);return Object.getOwnPropertySymbols?V.concat(Object.getOwnPropertySymbols(U)):V},d.prototype.listeners=function(U){var F=Q?Q+U:U,B=this._events[F];if(!B)return[];if(B.fn)return[B.fn];for(var V=0,l=B.length,R=new Array(l);V<l;V++)R[V]=B[V].fn;return R},d.prototype.listenerCount=function(U){var F=Q?Q+U:U,B=this._events[F];return B?B.fn?1:B.length:0},d.prototype.emit=function(U,F,B,V,l,R){var d=Q?Q+U:U;if(!this._events[d])return!1;var Z,J,W=this._events[d],S=arguments.length;if(W.fn){switch(W.once&&this.removeListener(U,W.fn,void 0,!0),S){case 1:return W.fn.call(W.context),!0;case 2:return W.fn.call(W.context,F),!0;case 3:return W.fn.call(W.context,F,B),!0;case 4:return W.fn.call(W.context,F,B,V),!0;case 5:return W.fn.call(W.context,F,B,V,l),!0;case 6:return W.fn.call(W.context,F,B,V,l,R),!0}for(J=1,Z=new Array(S-1);J<S;J++)Z[J-1]=arguments[J];W.fn.apply(W.context,Z)}else{var E,c=W.length;for(J=0;J<c;J++)switch(W[J].once&&this.removeListener(U,W[J].fn,void 0,!0),S){case 1:W[J].fn.call(W[J].context);break;case 2:W[J].fn.call(W[J].context,F);break;case 3:W[J].fn.call(W[J].context,F,B);break;case 4:W[J].fn.call(W[J].context,F,B,V);break;default:if(!Z)for(E=1,Z=new Array(S-1);E<S;E++)Z[E-1]=arguments[E];W[J].fn.apply(W[J].context,Z)}}return!0},d.prototype.on=function(U,F,Q){return l(this,U,F,Q,!1)},d.prototype.once=function(U,F,Q){return l(this,U,F,Q,!0)},d.prototype.removeListener=function(U,F,B,V){var l=Q?Q+U:U;if(!this._events[l])return this;if(!F)return R(this,l),this;var d=this._events[l];if(d.fn)d.fn!==F||V&&!d.once||B&&d.context!==B||R(this,l);else{for(var Z=0,J=[],W=d.length;Z<W;Z++)(d[Z].fn!==F||V&&!d[Z].once||B&&d[Z].context!==B)&&J.push(d[Z]);J.length?this._events[l]=1===J.length?J[0]:J:R(this,l)}return this},d.prototype.removeAllListeners=function(U){var F;return U?(F=Q?Q+U:U,this._events[F]&&R(this,F)):(this._events=new B,this._eventsCount=0),this},d.prototype.off=d.prototype.removeListener,d.prototype.addListener=d.prototype.on,d.prefixed=Q,d.EventEmitter=d,U.exports=d}({get exports(){return F},set exports(U){F=U}});var Q=F;let B;return function(){if("nodejs"!=("undefined"!=typeof window&&void 0!==window.document?"browser":"nodejs"))return null;function F(){let U,F,Q=new Promise((function(){U=arguments[0],F=arguments[1]}));return Q.resolve=U,Q.reject=F,Q}function V(){let U=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,F=[],Q="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),B=Q.length;for(let V=0;V<U;V++)F[V]=Q[0|Math.random()*B];return F.join("")}let l=(R="",Buffer.from(R,"base64").toString("utf8"));var R;B=function(){let B=new Q,R=function(F){try{return new U.Worker(F,{eval:!0})}catch(U){d(U)}}(l);if(!R)return d("invalid worker"),null;function d(U){B.emit("error",U)}return R.on("message",(function(U){let F=U,Q=F.mode;"emit"!==Q&&"return"!==Q||("emit"===Q&&B.emit(F.evName,F.msg),"return"===Q&&B.emit(F.id,F))})),R.on("error",d),function(){let U={mode:"init",type:"function",input:[...arguments]};R.postMessage(U)}([...arguments]),B.aaa=function(){let U=F(),Q=V(),l={mode:"call",id:Q,fun:"aaa",input:[...arguments]};return R.postMessage(l),B.once(Q,(F=>{"success"===F.state?U.resolve(F.msg):U.reject(F.msg)})),U},B.bbb=function(){let U=F(),Q=V(),l={mode:"call",id:Q,fun:"bbb",input:[...arguments]};return R.postMessage(l),B.once(Q,(F=>{"success"===F.state?U.resolve(F.msg):U.reject(F.msg)})),U},B.ccc=function(){let U=F(),Q=V(),l={mode:"call",id:Q,fun:"ccc",input:[...arguments]};return R.postMessage(l),B.once(Q,(F=>{"success"===F.state?U.resolve(F.msg):U.reject(F.msg)})),U},B.ddd=function(){let U=F(),Q=V(),l={mode:"call",id:Q,fun:"ddd",input:[...arguments]};return R.postMessage(l),B.once(Q,(F=>{"success"===F.state?U.resolve(F.msg):U.reject(F.msg)})),U},B.eee=function(){let U=F(),Q=V(),l={mode:"call",id:Q,fun:"eee",input:[...arguments]};return R.postMessage(l),B.once(Q,(F=>{"success"===F.state?U.resolve(F.msg):U.reject(F.msg)})),U},B.terminate=function(){R?(R.terminate(),R=void 0):d("worker has been terminated")},B}}(),B}(U)}({get exports(){return F},set exports(U){F=U}});var Q=F,B={};!function(U,F){U.exports=function(){const U="function"==typeof atob,F="function"==typeof Buffer,Q="function"==typeof TextDecoder?new TextDecoder:void 0,B=(U=>{let F={};return U.forEach(((U,Q)=>F[U]=Q)),F})(("function"==typeof TextEncoder&&new TextEncoder,Array.prototype.slice.call("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="))),V=/^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/,l=String.fromCharCode.bind(String),R="function"==typeof Uint8Array.from?Uint8Array.from.bind(Uint8Array):U=>new Uint8Array(Array.prototype.slice.call(U,0)),d=U=>U.replace(/[^A-Za-z0-9\+\/]/g,""),Z=/[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g,J=U=>{switch(U.length){case 4:var F=((7&U.charCodeAt(0))<<18|(63&U.charCodeAt(1))<<12|(63&U.charCodeAt(2))<<6|63&U.charCodeAt(3))-65536;return l(55296+(F>>>10))+l(56320+(1023&F));case 3:return l((15&U.charCodeAt(0))<<12|(63&U.charCodeAt(1))<<6|63&U.charCodeAt(2));default:return l((31&U.charCodeAt(0))<<6|63&U.charCodeAt(1))}},W=U=>U.replace(Z,J),S=U=>{if(U=U.replace(/\s+/g,""),!V.test(U))throw new TypeError("malformed base64.");U+="==".slice(2-(3&U.length));let F,Q,R,d="";for(let V=0;V<U.length;)F=B[U.charAt(V++)]<<18|B[U.charAt(V++)]<<12|(Q=B[U.charAt(V++)])<<6|(R=B[U.charAt(V++)]),d+=64===Q?l(F>>16&255):64===R?l(F>>16&255,F>>8&255):l(F>>16&255,F>>8&255,255&F);return d},E=U?U=>atob(d(U)):F?U=>Buffer.from(U,"base64").toString("binary"):S,c=F?U=>R(Buffer.from(U,"base64")):U=>R(E(U).split("").map((U=>U.charCodeAt(0)))),m=F?U=>Buffer.from(U,"base64").toString("utf8"):Q?U=>Q.decode(c(U)):U=>W(E(U)),N=U=>d(U.replace(/[-_]/g,(U=>"-"==U?"+":"/"))),I=U=>m(N(U)),X=I;var b={};!function(U){var F=Object.prototype.hasOwnProperty,Q="~";function B(){}function V(U,F,Q){this.fn=U,this.context=F,this.once=Q||!1}function l(U,F,B,l,R){if("function"!=typeof B)throw new TypeError("The listener must be a function");var d=new V(B,l||U,R),Z=Q?Q+F:F;return U._events[Z]?U._events[Z].fn?U._events[Z]=[U._events[Z],d]:U._events[Z].push(d):(U._events[Z]=d,U._eventsCount++),U}function R(U,F){0==--U._eventsCount?U._events=new B:delete U._events[F]}function d(){this._events=new B,this._eventsCount=0}Object.create&&(B.prototype=Object.create(null),(new B).__proto__||(Q=!1)),d.prototype.eventNames=function(){var U,B,V=[];if(0===this._eventsCount)return V;for(B in U=this._events)F.call(U,B)&&V.push(Q?B.slice(1):B);return Object.getOwnPropertySymbols?V.concat(Object.getOwnPropertySymbols(U)):V},d.prototype.listeners=function(U){var F=Q?Q+U:U,B=this._events[F];if(!B)return[];if(B.fn)return[B.fn];for(var V=0,l=B.length,R=new Array(l);V<l;V++)R[V]=B[V].fn;return R},d.prototype.listenerCount=function(U){var F=Q?Q+U:U,B=this._events[F];return B?B.fn?1:B.length:0},d.prototype.emit=function(U,F,B,V,l,R){var d=Q?Q+U:U;if(!this._events[d])return!1;var Z,J,W=this._events[d],S=arguments.length;if(W.fn){switch(W.once&&this.removeListener(U,W.fn,void 0,!0),S){case 1:return W.fn.call(W.context),!0;case 2:return W.fn.call(W.context,F),!0;case 3:return W.fn.call(W.context,F,B),!0;case 4:return W.fn.call(W.context,F,B,V),!0;case 5:return W.fn.call(W.context,F,B,V,l),!0;case 6:return W.fn.call(W.context,F,B,V,l,R),!0}for(J=1,Z=new Array(S-1);J<S;J++)Z[J-1]=arguments[J];W.fn.apply(W.context,Z)}else{var E,c=W.length;for(J=0;J<c;J++)switch(W[J].once&&this.removeListener(U,W[J].fn,void 0,!0),S){case 1:W[J].fn.call(W[J].context);break;case 2:W[J].fn.call(W[J].context,F);break;case 3:W[J].fn.call(W[J].context,F,B);break;case 4:W[J].fn.call(W[J].context,F,B,V);break;default:if(!Z)for(E=1,Z=new Array(S-1);E<S;E++)Z[E-1]=arguments[E];W[J].fn.apply(W[J].context,Z)}}return!0},d.prototype.on=function(U,F,Q){return l(this,U,F,Q,!1)},d.prototype.once=function(U,F,Q){return l(this,U,F,Q,!0)},d.prototype.removeListener=function(U,F,B,V){var l=Q?Q+U:U;if(!this._events[l])return this;if(!F)return R(this,l),this;var d=this._events[l];if(d.fn)d.fn!==F||V&&!d.once||B&&d.context!==B||R(this,l);else{for(var Z=0,J=[],W=d.length;Z<W;Z++)(d[Z].fn!==F||V&&!d[Z].once||B&&d[Z].context!==B)&&J.push(d[Z]);J.length?this._events[l]=1===J.length?J[0]:J:R(this,l)}return this},d.prototype.removeAllListeners=function(U){var F;return U?(F=Q?Q+U:U,this._events[F]&&R(this,F)):(this._events=new B,this._eventsCount=0),this},d.prototype.off=d.prototype.removeListener,d.prototype.addListener=d.prototype.on,d.prefixed=Q,d.EventEmitter=d,U.exports=d}({get exports(){return b},set exports(U){b=U}});var G=b;let k;return function(){if("browser"!=("undefined"!=typeof window&&void 0!==window.document?"browser":"nodejs"))return null;function U(){let U,F,Q=new Promise((function(){U=arguments[0],F=arguments[1]}));return Q.resolve=U,Q.reject=F,Q}function F(){let U=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,F=[],Q="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),B=Q.length;for(let V=0;V<U;V++)F[V]=Q[0|Math.random()*B];return F.join("")}let Q=X("");k=function(){let B=new G,V=function(U){try{let F=new Blob([U]),Q=window.URL||window.webkitURL;return new Worker(Q.createObjectURL(F))}catch(U){l(U)}}(Q);if(!V)return l("invalid worker"),null;function l(U){B.emit("error",U)}return V.onmessage=function(U){!function(U){let F=U,Q=F.mode;"emit"!==Q&&"return"!==Q||("emit"===Q&&B.emit(F.evName,F.msg),"return"===Q&&B.emit(F.id,F))}(U.data)},V.onerror=l,function(){let U={mode:"init",type:"function",input:[...arguments]};V.postMessage(U)}([...arguments]),B.aaa=function(){let Q=U(),l=F(),R={mode:"call",id:l,fun:"aaa",input:[...arguments]};return V.postMessage(R),B.once(l,(U=>{"success"===U.state?Q.resolve(U.msg):Q.reject(U.msg)})),Q},B.bbb=function(){let Q=U(),l=F(),R={mode:"call",id:l,fun:"bbb",input:[...arguments]};return V.postMessage(R),B.once(l,(U=>{"success"===U.state?Q.resolve(U.msg):Q.reject(U.msg)})),Q},B.ccc=function(){let Q=U(),l=F(),R={mode:"call",id:l,fun:"ccc",input:[...arguments]};return V.postMessage(R),B.once(l,(U=>{"success"===U.state?Q.resolve(U.msg):Q.reject(U.msg)})),Q},B.ddd=function(){let Q=U(),l=F(),R={mode:"call",id:l,fun:"ddd",input:[...arguments]};return V.postMessage(R),B.once(l,(U=>{"success"===U.state?Q.resolve(U.msg):Q.reject(U.msg)})),Q},B.eee=function(){let Q=U(),l=F(),R={mode:"call",id:l,fun:"eee",input:[...arguments]};return V.postMessage(R),B.once(l,(U=>{"success"===U.state?Q.resolve(U.msg):Q.reject(U.msg)})),Q},B.terminate=function(){V?(V.terminate(),V=void 0):l("worker has been terminated")},B}}(),k}()}({get exports(){return B},set exports(U){B=U}});var V=B;let l;return l="undefined"!=typeof window&&void 0!==window.document?V:Q,l}));
