!function(l,Z){"object"==typeof exports&&"undefined"!=typeof module?module.exports=Z():"function"==typeof define&&define.amd?define(Z):(l="undefined"!=typeof globalThis?globalThis:l||self).gWebWorker5_ObjStream=Z()}(this,(function(){"use strict";function l(l,Z){(null==Z||Z>l.length)&&(Z=l.length);for(var m=0,d=new Array(Z);m<Z;m++)d[m]=l[m];return d}function Z(Z){return function(Z){if(Array.isArray(Z))return l(Z)}(Z)||function(l){if("undefined"!=typeof Symbol&&null!=l[Symbol.iterator]||null!=l["@@iterator"])return Array.from(l)}(Z)||function(Z,m){if(Z){if("string"==typeof Z)return l(Z,m);var d=Object.prototype.toString.call(Z).slice(8,-1);return"Object"===d&&Z.constructor&&(d=Z.constructor.name),"Map"===d||"Set"===d?Array.from(Z):"Arguments"===d||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(d)?l(Z,m):void 0}}(Z)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function m(l,Z,m,d,b,c,G){try{var X=l[c](G),W=X.value}catch(l){return void m(l)}X.done?Z(W):Promise.resolve(W).then(d,b)}function d(l){return function(){var Z=this,d=arguments;return new Promise((function(b,c){var G=l.apply(Z,d);function X(l){m(G,b,c,X,W,"next",l)}function W(l){m(G,b,c,X,W,"throw",l)}X(void 0)}))}}function b(l){return(b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(l){return typeof l}:function(l){return l&&"function"==typeof Symbol&&l.constructor===Symbol&&l!==Symbol.prototype?"symbol":typeof l})(l)}function c(l){var Z={exports:{}};return l(Z,Z.exports),Z.exports}var G=c((function(l){var Z=function(l){var Z,m=Object.prototype,d=m.hasOwnProperty,c="function"==typeof Symbol?Symbol:{},G=c.iterator||"@@iterator",X=c.asyncIterator||"@@asyncIterator",W=c.toStringTag||"@@toStringTag";function i(l,Z,m){return Object.defineProperty(l,Z,{value:m,enumerable:!0,configurable:!0,writable:!0}),l[Z]}try{i({},"")}catch(l){i=function(l,Z,m){return l[Z]=m}}function y(l,Z,m,d){var b=Z&&Z.prototype instanceof K?Z:K,c=Object.create(b.prototype),G=new T(d||[]);return c._invoke=function(l,Z,m){var d=V;return function(b,c){if(d===h)throw new Error("Generator is already running");if(d===I){if("throw"===b)throw c;return N()}for(m.method=b,m.arg=c;;){var G=m.delegate;if(G){var X=x(G,m);if(X){if(X===Y)continue;return X}}if("next"===m.method)m.sent=m._sent=m.arg;else if("throw"===m.method){if(d===V)throw d=I,m.arg;m.dispatchException(m.arg)}else"return"===m.method&&m.abrupt("return",m.arg);d=h;var W=p(l,Z,m);if("normal"===W.type){if(d=m.done?I:u,W.arg===Y)continue;return{value:W.arg,done:m.done}}"throw"===W.type&&(d=I,m.method="throw",m.arg=W.arg)}}}(l,m,G),c}function p(l,Z,m){try{return{type:"normal",arg:l.call(Z,m)}}catch(l){return{type:"throw",arg:l}}}l.wrap=y;var V="suspendedStart",u="suspendedYield",h="executing",I="completed",Y={};function K(){}function a(){}function R(){}var L={};L[G]=function(){return this};var J=Object.getPrototypeOf,s=J&&J(J(t([])));s&&s!==m&&d.call(s,G)&&(L=s);var H=R.prototype=K.prototype=Object.create(L);function S(l){["next","throw","return"].forEach((function(Z){i(l,Z,(function(l){return this._invoke(Z,l)}))}))}function o(l,Z){function m(c,G,X,W){var i=p(l[c],l,G);if("throw"!==i.type){var y=i.arg,V=y.value;return V&&"object"===b(V)&&d.call(V,"__await")?Z.resolve(V.__await).then((function(l){m("next",l,X,W)}),(function(l){m("throw",l,X,W)})):Z.resolve(V).then((function(l){y.value=l,X(y)}),(function(l){return m("throw",l,X,W)}))}W(i.arg)}var c;this._invoke=function(l,d){function b(){return new Z((function(Z,b){m(l,d,Z,b)}))}return c=c?c.then(b,b):b()}}function x(l,m){var d=l.iterator[m.method];if(d===Z){if(m.delegate=null,"throw"===m.method){if(l.iterator.return&&(m.method="return",m.arg=Z,x(l,m),"throw"===m.method))return Y;m.method="throw",m.arg=new TypeError("The iterator does not provide a 'throw' method")}return Y}var b=p(d,l.iterator,m.arg);if("throw"===b.type)return m.method="throw",m.arg=b.arg,m.delegate=null,Y;var c=b.arg;return c?c.done?(m[l.resultName]=c.value,m.next=l.nextLoc,"return"!==m.method&&(m.method="next",m.arg=Z),m.delegate=null,Y):c:(m.method="throw",m.arg=new TypeError("iterator result is not an object"),m.delegate=null,Y)}function n(l){var Z={tryLoc:l[0]};1 in l&&(Z.catchLoc=l[1]),2 in l&&(Z.finallyLoc=l[2],Z.afterLoc=l[3]),this.tryEntries.push(Z)}function C(l){var Z=l.completion||{};Z.type="normal",delete Z.arg,l.completion=Z}function T(l){this.tryEntries=[{tryLoc:"root"}],l.forEach(n,this),this.reset(!0)}function t(l){if(l){var m=l[G];if(m)return m.call(l);if("function"==typeof l.next)return l;if(!isNaN(l.length)){var b=-1,c=function m(){for(;++b<l.length;)if(d.call(l,b))return m.value=l[b],m.done=!1,m;return m.value=Z,m.done=!0,m};return c.next=c}}return{next:N}}function N(){return{value:Z,done:!0}}return a.prototype=H.constructor=R,R.constructor=a,a.displayName=i(R,W,"GeneratorFunction"),l.isGeneratorFunction=function(l){var Z="function"==typeof l&&l.constructor;return!!Z&&(Z===a||"GeneratorFunction"===(Z.displayName||Z.name))},l.mark=function(l){return Object.setPrototypeOf?Object.setPrototypeOf(l,R):(l.__proto__=R,i(l,W,"GeneratorFunction")),l.prototype=Object.create(H),l},l.awrap=function(l){return{__await:l}},S(o.prototype),o.prototype[X]=function(){return this},l.AsyncIterator=o,l.async=function(Z,m,d,b,c){void 0===c&&(c=Promise);var G=new o(y(Z,m,d,b),c);return l.isGeneratorFunction(m)?G:G.next().then((function(l){return l.done?l.value:G.next()}))},S(H),i(H,W,"Generator"),H[G]=function(){return this},H.toString=function(){return"[object Generator]"},l.keys=function(l){var Z=[];for(var m in l)Z.push(m);return Z.reverse(),function m(){for(;Z.length;){var d=Z.pop();if(d in l)return m.value=d,m.done=!1,m}return m.done=!0,m}},l.values=t,T.prototype={constructor:T,reset:function(l){if(this.prev=0,this.next=0,this.sent=this._sent=Z,this.done=!1,this.delegate=null,this.method="next",this.arg=Z,this.tryEntries.forEach(C),!l)for(var m in this)"t"===m.charAt(0)&&d.call(this,m)&&!isNaN(+m.slice(1))&&(this[m]=Z)},stop:function(){this.done=!0;var l=this.tryEntries[0].completion;if("throw"===l.type)throw l.arg;return this.rval},dispatchException:function(l){if(this.done)throw l;var m=this;function b(d,b){return X.type="throw",X.arg=l,m.next=d,b&&(m.method="next",m.arg=Z),!!b}for(var c=this.tryEntries.length-1;c>=0;--c){var G=this.tryEntries[c],X=G.completion;if("root"===G.tryLoc)return b("end");if(G.tryLoc<=this.prev){var W=d.call(G,"catchLoc"),i=d.call(G,"finallyLoc");if(W&&i){if(this.prev<G.catchLoc)return b(G.catchLoc,!0);if(this.prev<G.finallyLoc)return b(G.finallyLoc)}else if(W){if(this.prev<G.catchLoc)return b(G.catchLoc,!0)}else{if(!i)throw new Error("try statement without catch or finally");if(this.prev<G.finallyLoc)return b(G.finallyLoc)}}}},abrupt:function(l,Z){for(var m=this.tryEntries.length-1;m>=0;--m){var b=this.tryEntries[m];if(b.tryLoc<=this.prev&&d.call(b,"finallyLoc")&&this.prev<b.finallyLoc){var c=b;break}}c&&("break"===l||"continue"===l)&&c.tryLoc<=Z&&Z<=c.finallyLoc&&(c=null);var G=c?c.completion:{};return G.type=l,G.arg=Z,c?(this.method="next",this.next=c.finallyLoc,Y):this.complete(G)},complete:function(l,Z){if("throw"===l.type)throw l.arg;return"break"===l.type||"continue"===l.type?this.next=l.arg:"return"===l.type?(this.rval=this.arg=l.arg,this.method="return",this.next="end"):"normal"===l.type&&Z&&(this.next=Z),Y},finish:function(l){for(var Z=this.tryEntries.length-1;Z>=0;--Z){var m=this.tryEntries[Z];if(m.finallyLoc===l)return this.complete(m.completion,m.afterLoc),C(m),Y}},catch:function(l){for(var Z=this.tryEntries.length-1;Z>=0;--Z){var m=this.tryEntries[Z];if(m.tryLoc===l){var d=m.completion;if("throw"===d.type){var b=d.arg;C(m)}return b}}throw new Error("illegal catch attempt")},delegateYield:function(l,m,d){return this.delegate={iterator:t(l),resultName:m,nextLoc:d},"next"===this.method&&(this.arg=Z),Y}},l}(l.exports);try{regeneratorRuntime=Z}catch(l){Function("r","regeneratorRuntime = r")(Z)}})),X=c((function(l){var Z=Object.prototype.hasOwnProperty,m="~";function d(){}function b(l,Z,m){this.fn=l,this.context=Z,this.once=m||!1}function c(l,Z,d,c,G){if("function"!=typeof d)throw new TypeError("The listener must be a function");var X=new b(d,c||l,G),W=m?m+Z:Z;return l._events[W]?l._events[W].fn?l._events[W]=[l._events[W],X]:l._events[W].push(X):(l._events[W]=X,l._eventsCount++),l}function G(l,Z){0==--l._eventsCount?l._events=new d:delete l._events[Z]}function X(){this._events=new d,this._eventsCount=0}Object.create&&(d.prototype=Object.create(null),(new d).__proto__||(m=!1)),X.prototype.eventNames=function(){var l,d,b=[];if(0===this._eventsCount)return b;for(d in l=this._events)Z.call(l,d)&&b.push(m?d.slice(1):d);return Object.getOwnPropertySymbols?b.concat(Object.getOwnPropertySymbols(l)):b},X.prototype.listeners=function(l){var Z=m?m+l:l,d=this._events[Z];if(!d)return[];if(d.fn)return[d.fn];for(var b=0,c=d.length,G=new Array(c);b<c;b++)G[b]=d[b].fn;return G},X.prototype.listenerCount=function(l){var Z=m?m+l:l,d=this._events[Z];return d?d.fn?1:d.length:0},X.prototype.emit=function(l,Z,d,b,c,G){var X=m?m+l:l;if(!this._events[X])return!1;var W,i,y=this._events[X],p=arguments.length;if(y.fn){switch(y.once&&this.removeListener(l,y.fn,void 0,!0),p){case 1:return y.fn.call(y.context),!0;case 2:return y.fn.call(y.context,Z),!0;case 3:return y.fn.call(y.context,Z,d),!0;case 4:return y.fn.call(y.context,Z,d,b),!0;case 5:return y.fn.call(y.context,Z,d,b,c),!0;case 6:return y.fn.call(y.context,Z,d,b,c,G),!0}for(i=1,W=new Array(p-1);i<p;i++)W[i-1]=arguments[i];y.fn.apply(y.context,W)}else{var V,u=y.length;for(i=0;i<u;i++)switch(y[i].once&&this.removeListener(l,y[i].fn,void 0,!0),p){case 1:y[i].fn.call(y[i].context);break;case 2:y[i].fn.call(y[i].context,Z);break;case 3:y[i].fn.call(y[i].context,Z,d);break;case 4:y[i].fn.call(y[i].context,Z,d,b);break;default:if(!W)for(V=1,W=new Array(p-1);V<p;V++)W[V-1]=arguments[V];y[i].fn.apply(y[i].context,W)}}return!0},X.prototype.on=function(l,Z,m){return c(this,l,Z,m,!1)},X.prototype.once=function(l,Z,m){return c(this,l,Z,m,!0)},X.prototype.removeListener=function(l,Z,d,b){var c=m?m+l:l;if(!this._events[c])return this;if(!Z)return G(this,c),this;var X=this._events[c];if(X.fn)X.fn!==Z||b&&!X.once||d&&X.context!==d||G(this,c);else{for(var W=0,i=[],y=X.length;W<y;W++)(X[W].fn!==Z||b&&!X[W].once||d&&X[W].context!==d)&&i.push(X[W]);i.length?this._events[c]=1===i.length?i[0]:i:G(this,c)}return this},X.prototype.removeAllListeners=function(l){var Z;return l?(Z=m?m+l:l,this._events[Z]&&G(this,Z)):(this._events=new d,this._eventsCount=0),this},X.prototype.off=X.prototype.removeListener,X.prototype.addListener=X.prototype.on,X.prefixed=m,X.EventEmitter=X,l.exports=X}));function W(){return new X}function i(){var l,Z,m=new Promise((function(){l=arguments[0],Z=arguments[1]}));return m.resolve=l,m.reject=Z,m}function y(){for(var l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,Z=[],m="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),d=m.length,b=0;b<l;b++)Z[b]=m[0|Math.random()*d];var c=Z.join("");return c}var p=atob("Cgp2YXIgdD0idW5kZWZpbmVkIiE9dHlwZW9mIGdsb2JhbFRoaXM/Z2xvYmFsVGhpczoidW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6InVuZGVmaW5lZCIhPXR5cGVvZiBnbG9iYWw/Z2xvYmFsOiJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZj9zZWxmOnt9O2Z1bmN0aW9uIGUodCl7cmV0dXJuIHQmJnQuX19lc01vZHVsZSYmT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsImRlZmF1bHQiKT90LmRlZmF1bHQ6dH0KLyohCiAqIHctanNvbiB2MS4wLjAKICogKGMpIDIwMTgtMjAyMSB5dWRhLWx5dShzZW1pc3BoZXJlKQogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuCiAqLwp2YXIgcixuPWUoKGZ1bmN0aW9uKGUscil7ZS5leHBvcnRzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LGUscixuLGksbyxhKXt0cnl7dmFyIHM9dFtvXShhKSx1PXMudmFsdWV9Y2F0Y2godCl7cmV0dXJuIHZvaWQgcih0KX1zLmRvbmU/ZSh1KTpQcm9taXNlLnJlc29sdmUodSkudGhlbihuLGkpfWZ1bmN0aW9uIHIodCl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHI9dGhpcyxuPWFyZ3VtZW50cztyZXR1cm4gbmV3IFByb21pc2UoKGZ1bmN0aW9uKGksbyl7dmFyIGE9dC5hcHBseShyLG4pO2Z1bmN0aW9uIHModCl7ZShhLGksbyxzLHUsIm5leHQiLHQpfWZ1bmN0aW9uIHUodCl7ZShhLGksbyxzLHUsInRocm93Iix0KX1zKHZvaWQgMCl9KSl9fWZ1bmN0aW9uIG4odCl7cmV0dXJuKG49ImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmInN5bWJvbCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiB0fTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6dHlwZW9mIHR9KSh0KX12YXIgaT0idW5kZWZpbmVkIiE9dHlwZW9mIGdsb2JhbFRoaXM/Z2xvYmFsVGhpczoidW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6dm9pZCAwIT09dD90OiJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZj9zZWxmOnt9O2Z1bmN0aW9uIG8odCl7aWYodC5fX2VzTW9kdWxlKXJldHVybiB0O3ZhciBlPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7cmV0dXJuIE9iamVjdC5rZXlzKHQpLmZvckVhY2goKGZ1bmN0aW9uKHIpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCxyKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLG4uZ2V0P246e2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRbcl19fSl9KSksZX1mdW5jdGlvbiBhKHQpe3ZhciBlPXtleHBvcnRzOnt9fTtyZXR1cm4gdChlLGUuZXhwb3J0cyksZS5leHBvcnRzfXZhciBzPWEoKGZ1bmN0aW9uKHQpe3ZhciBlPWZ1bmN0aW9uKHQpe3ZhciBlLHI9T2JqZWN0LnByb3RvdHlwZSxpPXIuaGFzT3duUHJvcGVydHksbz0iZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sP1N5bWJvbDp7fSxhPW8uaXRlcmF0b3J8fCJAQGl0ZXJhdG9yIixzPW8uYXN5bmNJdGVyYXRvcnx8IkBAYXN5bmNJdGVyYXRvciIsdT1vLnRvU3RyaW5nVGFnfHwiQEB0b1N0cmluZ1RhZyI7ZnVuY3Rpb24gZih0LGUscil7cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse3ZhbHVlOnIsZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KSx0W2VdfXRyeXtmKHt9LCIiKX1jYXRjaCh0KXtmPWZ1bmN0aW9uKHQsZSxyKXtyZXR1cm4gdFtlXT1yfX1mdW5jdGlvbiBjKHQsZSxyLG4pe3ZhciBpPWUmJmUucHJvdG90eXBlIGluc3RhbmNlb2YgeT9lOnksbz1PYmplY3QuY3JlYXRlKGkucHJvdG90eXBlKSxhPW5ldyBUKG58fFtdKTtyZXR1cm4gby5faW52b2tlPWZ1bmN0aW9uKHQsZSxyKXt2YXIgbj1oO3JldHVybiBmdW5jdGlvbihpLG8pe2lmKG49PT1wKXRocm93IG5ldyBFcnJvcigiR2VuZXJhdG9yIGlzIGFscmVhZHkgcnVubmluZyIpO2lmKG49PT1nKXtpZigidGhyb3ciPT09aSl0aHJvdyBvO3JldHVybiBMKCl9Zm9yKHIubWV0aG9kPWksci5hcmc9bzs7KXt2YXIgYT1yLmRlbGVnYXRlO2lmKGEpe3ZhciBzPXgoYSxyKTtpZihzKXtpZihzPT09diljb250aW51ZTtyZXR1cm4gc319aWYoIm5leHQiPT09ci5tZXRob2Qpci5zZW50PXIuX3NlbnQ9ci5hcmc7ZWxzZSBpZigidGhyb3ciPT09ci5tZXRob2Qpe2lmKG49PT1oKXRocm93IG49ZyxyLmFyZztyLmRpc3BhdGNoRXhjZXB0aW9uKHIuYXJnKX1lbHNlInJldHVybiI9PT1yLm1ldGhvZCYmci5hYnJ1cHQoInJldHVybiIsci5hcmcpO249cDt2YXIgdT1sKHQsZSxyKTtpZigibm9ybWFsIj09PXUudHlwZSl7aWYobj1yLmRvbmU/ZzpkLHUuYXJnPT09diljb250aW51ZTtyZXR1cm57dmFsdWU6dS5hcmcsZG9uZTpyLmRvbmV9fSJ0aHJvdyI9PT11LnR5cGUmJihuPWcsci5tZXRob2Q9InRocm93IixyLmFyZz11LmFyZyl9fX0odCxyLGEpLG99ZnVuY3Rpb24gbCh0LGUscil7dHJ5e3JldHVybnt0eXBlOiJub3JtYWwiLGFyZzp0LmNhbGwoZSxyKX19Y2F0Y2godCl7cmV0dXJue3R5cGU6InRocm93Iixhcmc6dH19fXQud3JhcD1jO3ZhciBoPSJzdXNwZW5kZWRTdGFydCIsZD0ic3VzcGVuZGVkWWllbGQiLHA9ImV4ZWN1dGluZyIsZz0iY29tcGxldGVkIix2PXt9O2Z1bmN0aW9uIHkoKXt9ZnVuY3Rpb24gYigpe31mdW5jdGlvbiBtKCl7fXZhciB3PXt9O3dbYV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc307dmFyIFM9T2JqZWN0LmdldFByb3RvdHlwZU9mLF89UyYmUyhTKEEoW10pKSk7XyYmXyE9PXImJmkuY2FsbChfLGEpJiYodz1fKTt2YXIgRT1tLnByb3RvdHlwZT15LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHcpO2Z1bmN0aW9uIGsodCl7WyJuZXh0IiwidGhyb3ciLCJyZXR1cm4iXS5mb3JFYWNoKChmdW5jdGlvbihlKXtmKHQsZSwoZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX2ludm9rZShlLHQpfSkpfSkpfWZ1bmN0aW9uIFIodCxlKXtmdW5jdGlvbiByKG8sYSxzLHUpe3ZhciBmPWwodFtvXSx0LGEpO2lmKCJ0aHJvdyIhPT1mLnR5cGUpe3ZhciBjPWYuYXJnLGg9Yy52YWx1ZTtyZXR1cm4gaCYmIm9iamVjdCI9PT1uKGgpJiZpLmNhbGwoaCwiX19hd2FpdCIpP2UucmVzb2x2ZShoLl9fYXdhaXQpLnRoZW4oKGZ1bmN0aW9uKHQpe3IoIm5leHQiLHQscyx1KX0pLChmdW5jdGlvbih0KXtyKCJ0aHJvdyIsdCxzLHUpfSkpOmUucmVzb2x2ZShoKS50aGVuKChmdW5jdGlvbih0KXtjLnZhbHVlPXQscyhjKX0pLChmdW5jdGlvbih0KXtyZXR1cm4gcigidGhyb3ciLHQscyx1KX0pKX11KGYuYXJnKX12YXIgbzt0aGlzLl9pbnZva2U9ZnVuY3Rpb24odCxuKXtmdW5jdGlvbiBpKCl7cmV0dXJuIG5ldyBlKChmdW5jdGlvbihlLGkpe3IodCxuLGUsaSl9KSl9cmV0dXJuIG89bz9vLnRoZW4oaSxpKTppKCl9fWZ1bmN0aW9uIHgodCxyKXt2YXIgbj10Lml0ZXJhdG9yW3IubWV0aG9kXTtpZihuPT09ZSl7aWYoci5kZWxlZ2F0ZT1udWxsLCJ0aHJvdyI9PT1yLm1ldGhvZCl7aWYodC5pdGVyYXRvci5yZXR1cm4mJihyLm1ldGhvZD0icmV0dXJuIixyLmFyZz1lLHgodCxyKSwidGhyb3ciPT09ci5tZXRob2QpKXJldHVybiB2O3IubWV0aG9kPSJ0aHJvdyIsci5hcmc9bmV3IFR5cGVFcnJvcigiVGhlIGl0ZXJhdG9yIGRvZXMgbm90IHByb3ZpZGUgYSAndGhyb3cnIG1ldGhvZCIpfXJldHVybiB2fXZhciBpPWwobix0Lml0ZXJhdG9yLHIuYXJnKTtpZigidGhyb3ciPT09aS50eXBlKXJldHVybiByLm1ldGhvZD0idGhyb3ciLHIuYXJnPWkuYXJnLHIuZGVsZWdhdGU9bnVsbCx2O3ZhciBvPWkuYXJnO3JldHVybiBvP28uZG9uZT8oclt0LnJlc3VsdE5hbWVdPW8udmFsdWUsci5uZXh0PXQubmV4dExvYywicmV0dXJuIiE9PXIubWV0aG9kJiYoci5tZXRob2Q9Im5leHQiLHIuYXJnPWUpLHIuZGVsZWdhdGU9bnVsbCx2KTpvOihyLm1ldGhvZD0idGhyb3ciLHIuYXJnPW5ldyBUeXBlRXJyb3IoIml0ZXJhdG9yIHJlc3VsdCBpcyBub3QgYW4gb2JqZWN0Iiksci5kZWxlZ2F0ZT1udWxsLHYpfWZ1bmN0aW9uIE8odCl7dmFyIGU9e3RyeUxvYzp0WzBdfTsxIGluIHQmJihlLmNhdGNoTG9jPXRbMV0pLDIgaW4gdCYmKGUuZmluYWxseUxvYz10WzJdLGUuYWZ0ZXJMb2M9dFszXSksdGhpcy50cnlFbnRyaWVzLnB1c2goZSl9ZnVuY3Rpb24gaih0KXt2YXIgZT10LmNvbXBsZXRpb258fHt9O2UudHlwZT0ibm9ybWFsIixkZWxldGUgZS5hcmcsdC5jb21wbGV0aW9uPWV9ZnVuY3Rpb24gVCh0KXt0aGlzLnRyeUVudHJpZXM9W3t0cnlMb2M6InJvb3QifV0sdC5mb3JFYWNoKE8sdGhpcyksdGhpcy5yZXNldCghMCl9ZnVuY3Rpb24gQSh0KXtpZih0KXt2YXIgcj10W2FdO2lmKHIpcmV0dXJuIHIuY2FsbCh0KTtpZigiZnVuY3Rpb24iPT10eXBlb2YgdC5uZXh0KXJldHVybiB0O2lmKCFpc05hTih0Lmxlbmd0aCkpe3ZhciBuPS0xLG89ZnVuY3Rpb24gcigpe2Zvcig7KytuPHQubGVuZ3RoOylpZihpLmNhbGwodCxuKSlyZXR1cm4gci52YWx1ZT10W25dLHIuZG9uZT0hMSxyO3JldHVybiByLnZhbHVlPWUsci5kb25lPSEwLHJ9O3JldHVybiBvLm5leHQ9b319cmV0dXJue25leHQ6TH19ZnVuY3Rpb24gTCgpe3JldHVybnt2YWx1ZTplLGRvbmU6ITB9fXJldHVybiBiLnByb3RvdHlwZT1FLmNvbnN0cnVjdG9yPW0sbS5jb25zdHJ1Y3Rvcj1iLGIuZGlzcGxheU5hbWU9ZihtLHUsIkdlbmVyYXRvckZ1bmN0aW9uIiksdC5pc0dlbmVyYXRvckZ1bmN0aW9uPWZ1bmN0aW9uKHQpe3ZhciBlPSJmdW5jdGlvbiI9PXR5cGVvZiB0JiZ0LmNvbnN0cnVjdG9yO3JldHVybiEhZSYmKGU9PT1ifHwiR2VuZXJhdG9yRnVuY3Rpb24iPT09KGUuZGlzcGxheU5hbWV8fGUubmFtZSkpfSx0Lm1hcms9ZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YodCxtKToodC5fX3Byb3RvX189bSxmKHQsdSwiR2VuZXJhdG9yRnVuY3Rpb24iKSksdC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShFKSx0fSx0LmF3cmFwPWZ1bmN0aW9uKHQpe3JldHVybntfX2F3YWl0OnR9fSxrKFIucHJvdG90eXBlKSxSLnByb3RvdHlwZVtzXT1mdW5jdGlvbigpe3JldHVybiB0aGlzfSx0LkFzeW5jSXRlcmF0b3I9Uix0LmFzeW5jPWZ1bmN0aW9uKGUscixuLGksbyl7dm9pZCAwPT09byYmKG89UHJvbWlzZSk7dmFyIGE9bmV3IFIoYyhlLHIsbixpKSxvKTtyZXR1cm4gdC5pc0dlbmVyYXRvckZ1bmN0aW9uKHIpP2E6YS5uZXh0KCkudGhlbigoZnVuY3Rpb24odCl7cmV0dXJuIHQuZG9uZT90LnZhbHVlOmEubmV4dCgpfSkpfSxrKEUpLGYoRSx1LCJHZW5lcmF0b3IiKSxFW2FdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LEUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4iW29iamVjdCBHZW5lcmF0b3JdIn0sdC5rZXlzPWZ1bmN0aW9uKHQpe3ZhciBlPVtdO2Zvcih2YXIgciBpbiB0KWUucHVzaChyKTtyZXR1cm4gZS5yZXZlcnNlKCksZnVuY3Rpb24gcigpe2Zvcig7ZS5sZW5ndGg7KXt2YXIgbj1lLnBvcCgpO2lmKG4gaW4gdClyZXR1cm4gci52YWx1ZT1uLHIuZG9uZT0hMSxyfXJldHVybiByLmRvbmU9ITAscn19LHQudmFsdWVzPUEsVC5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlQscmVzZXQ6ZnVuY3Rpb24odCl7aWYodGhpcy5wcmV2PTAsdGhpcy5uZXh0PTAsdGhpcy5zZW50PXRoaXMuX3NlbnQ9ZSx0aGlzLmRvbmU9ITEsdGhpcy5kZWxlZ2F0ZT1udWxsLHRoaXMubWV0aG9kPSJuZXh0Iix0aGlzLmFyZz1lLHRoaXMudHJ5RW50cmllcy5mb3JFYWNoKGopLCF0KWZvcih2YXIgciBpbiB0aGlzKSJ0Ij09PXIuY2hhckF0KDApJiZpLmNhbGwodGhpcyxyKSYmIWlzTmFOKCtyLnNsaWNlKDEpKSYmKHRoaXNbcl09ZSl9LHN0b3A6ZnVuY3Rpb24oKXt0aGlzLmRvbmU9ITA7dmFyIHQ9dGhpcy50cnlFbnRyaWVzWzBdLmNvbXBsZXRpb247aWYoInRocm93Ij09PXQudHlwZSl0aHJvdyB0LmFyZztyZXR1cm4gdGhpcy5ydmFsfSxkaXNwYXRjaEV4Y2VwdGlvbjpmdW5jdGlvbih0KXtpZih0aGlzLmRvbmUpdGhyb3cgdDt2YXIgcj10aGlzO2Z1bmN0aW9uIG4obixpKXtyZXR1cm4gcy50eXBlPSJ0aHJvdyIscy5hcmc9dCxyLm5leHQ9bixpJiYoci5tZXRob2Q9Im5leHQiLHIuYXJnPWUpLCEhaX1mb3IodmFyIG89dGhpcy50cnlFbnRyaWVzLmxlbmd0aC0xO28+PTA7LS1vKXt2YXIgYT10aGlzLnRyeUVudHJpZXNbb10scz1hLmNvbXBsZXRpb247aWYoInJvb3QiPT09YS50cnlMb2MpcmV0dXJuIG4oImVuZCIpO2lmKGEudHJ5TG9jPD10aGlzLnByZXYpe3ZhciB1PWkuY2FsbChhLCJjYXRjaExvYyIpLGY9aS5jYWxsKGEsImZpbmFsbHlMb2MiKTtpZih1JiZmKXtpZih0aGlzLnByZXY8YS5jYXRjaExvYylyZXR1cm4gbihhLmNhdGNoTG9jLCEwKTtpZih0aGlzLnByZXY8YS5maW5hbGx5TG9jKXJldHVybiBuKGEuZmluYWxseUxvYyl9ZWxzZSBpZih1KXtpZih0aGlzLnByZXY8YS5jYXRjaExvYylyZXR1cm4gbihhLmNhdGNoTG9jLCEwKX1lbHNle2lmKCFmKXRocm93IG5ldyBFcnJvcigidHJ5IHN0YXRlbWVudCB3aXRob3V0IGNhdGNoIG9yIGZpbmFsbHkiKTtpZih0aGlzLnByZXY8YS5maW5hbGx5TG9jKXJldHVybiBuKGEuZmluYWxseUxvYyl9fX19LGFicnVwdDpmdW5jdGlvbih0LGUpe2Zvcih2YXIgcj10aGlzLnRyeUVudHJpZXMubGVuZ3RoLTE7cj49MDstLXIpe3ZhciBuPXRoaXMudHJ5RW50cmllc1tyXTtpZihuLnRyeUxvYzw9dGhpcy5wcmV2JiZpLmNhbGwobiwiZmluYWxseUxvYyIpJiZ0aGlzLnByZXY8bi5maW5hbGx5TG9jKXt2YXIgbz1uO2JyZWFrfX1vJiYoImJyZWFrIj09PXR8fCJjb250aW51ZSI9PT10KSYmby50cnlMb2M8PWUmJmU8PW8uZmluYWxseUxvYyYmKG89bnVsbCk7dmFyIGE9bz9vLmNvbXBsZXRpb246e307cmV0dXJuIGEudHlwZT10LGEuYXJnPWUsbz8odGhpcy5tZXRob2Q9Im5leHQiLHRoaXMubmV4dD1vLmZpbmFsbHlMb2Msdik6dGhpcy5jb21wbGV0ZShhKX0sY29tcGxldGU6ZnVuY3Rpb24odCxlKXtpZigidGhyb3ciPT09dC50eXBlKXRocm93IHQuYXJnO3JldHVybiJicmVhayI9PT10LnR5cGV8fCJjb250aW51ZSI9PT10LnR5cGU/dGhpcy5uZXh0PXQuYXJnOiJyZXR1cm4iPT09dC50eXBlPyh0aGlzLnJ2YWw9dGhpcy5hcmc9dC5hcmcsdGhpcy5tZXRob2Q9InJldHVybiIsdGhpcy5uZXh0PSJlbmQiKToibm9ybWFsIj09PXQudHlwZSYmZSYmKHRoaXMubmV4dD1lKSx2fSxmaW5pc2g6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMudHJ5RW50cmllcy5sZW5ndGgtMTtlPj0wOy0tZSl7dmFyIHI9dGhpcy50cnlFbnRyaWVzW2VdO2lmKHIuZmluYWxseUxvYz09PXQpcmV0dXJuIHRoaXMuY29tcGxldGUoci5jb21wbGV0aW9uLHIuYWZ0ZXJMb2MpLGoociksdn19LGNhdGNoOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLnRyeUVudHJpZXMubGVuZ3RoLTE7ZT49MDstLWUpe3ZhciByPXRoaXMudHJ5RW50cmllc1tlXTtpZihyLnRyeUxvYz09PXQpe3ZhciBuPXIuY29tcGxldGlvbjtpZigidGhyb3ciPT09bi50eXBlKXt2YXIgaT1uLmFyZztqKHIpfXJldHVybiBpfX10aHJvdyBuZXcgRXJyb3IoImlsbGVnYWwgY2F0Y2ggYXR0ZW1wdCIpfSxkZWxlZ2F0ZVlpZWxkOmZ1bmN0aW9uKHQscixuKXtyZXR1cm4gdGhpcy5kZWxlZ2F0ZT17aXRlcmF0b3I6QSh0KSxyZXN1bHROYW1lOnIsbmV4dExvYzpufSwibmV4dCI9PT10aGlzLm1ldGhvZCYmKHRoaXMuYXJnPWUpLHZ9fSx0fSh0LmV4cG9ydHMpO3RyeXtyZWdlbmVyYXRvclJ1bnRpbWU9ZX1jYXRjaCh0KXtGdW5jdGlvbigiciIsInJlZ2VuZXJhdG9yUnVudGltZSA9IHIiKShlKX19KSksdT12b2lkIDAhPT10P3Q6InVuZGVmaW5lZCIhPXR5cGVvZiBzZWxmP3NlbGY6InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3c/d2luZG93Ont9LGY9W10sYz1bXSxsPSJ1bmRlZmluZWQiIT10eXBlb2YgVWludDhBcnJheT9VaW50OEFycmF5OkFycmF5LGg9ITE7ZnVuY3Rpb24gZCgpe2g9ITA7Zm9yKHZhciB0PSJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvIixlPTAscj10Lmxlbmd0aDtlPHI7KytlKWZbZV09dFtlXSxjW3QuY2hhckNvZGVBdChlKV09ZTtjWyItIi5jaGFyQ29kZUF0KDApXT02MixjWyJfIi5jaGFyQ29kZUF0KDApXT02M31mdW5jdGlvbiBwKHQsZSxyKXtmb3IodmFyIG4saSxvPVtdLGE9ZTthPHI7YSs9MyluPSh0W2FdPDwxNikrKHRbYSsxXTw8OCkrdFthKzJdLG8ucHVzaChmWyhpPW4pPj4xOCY2M10rZltpPj4xMiY2M10rZltpPj42JjYzXStmWzYzJmldKTtyZXR1cm4gby5qb2luKCIiKX1mdW5jdGlvbiBnKHQpe3ZhciBlO2h8fGQoKTtmb3IodmFyIHI9dC5sZW5ndGgsbj1yJTMsaT0iIixvPVtdLGE9MTYzODMscz0wLHU9ci1uO3M8dTtzKz1hKW8ucHVzaChwKHQscyxzK2E+dT91OnMrYSkpO3JldHVybiAxPT09bj8oZT10W3ItMV0saSs9ZltlPj4yXSxpKz1mW2U8PDQmNjNdLGkrPSI9PSIpOjI9PT1uJiYoZT0odFtyLTJdPDw4KSt0W3ItMV0saSs9ZltlPj4xMF0saSs9ZltlPj40JjYzXSxpKz1mW2U8PDImNjNdLGkrPSI9Iiksby5wdXNoKGkpLG8uam9pbigiIil9ZnVuY3Rpb24gdih0LGUscixuLGkpe3ZhciBvLGEscz04Kmktbi0xLHU9KDE8PHMpLTEsZj11Pj4xLGM9LTcsbD1yP2ktMTowLGg9cj8tMToxLGQ9dFtlK2xdO2ZvcihsKz1oLG89ZCYoMTw8LWMpLTEsZD4+PS1jLGMrPXM7Yz4wO289MjU2Km8rdFtlK2xdLGwrPWgsYy09OCk7Zm9yKGE9byYoMTw8LWMpLTEsbz4+PS1jLGMrPW47Yz4wO2E9MjU2KmErdFtlK2xdLGwrPWgsYy09OCk7aWYoMD09PW8pbz0xLWY7ZWxzZXtpZihvPT09dSlyZXR1cm4gYT9OYU46MS8wKihkPy0xOjEpO2ErPU1hdGgucG93KDIsbiksby09Zn1yZXR1cm4oZD8tMToxKSphKk1hdGgucG93KDIsby1uKX1mdW5jdGlvbiB5KHQsZSxyLG4saSxvKXt2YXIgYSxzLHUsZj04Km8taS0xLGM9KDE8PGYpLTEsbD1jPj4xLGg9MjM9PT1pP01hdGgucG93KDIsLTI0KS1NYXRoLnBvdygyLC03Nyk6MCxkPW4/MDpvLTEscD1uPzE6LTEsZz1lPDB8fDA9PT1lJiYxL2U8MD8xOjA7Zm9yKGU9TWF0aC5hYnMoZSksaXNOYU4oZSl8fGU9PT0xLzA/KHM9aXNOYU4oZSk/MTowLGE9Yyk6KGE9TWF0aC5mbG9vcihNYXRoLmxvZyhlKS9NYXRoLkxOMiksZSoodT1NYXRoLnBvdygyLC1hKSk8MSYmKGEtLSx1Kj0yKSwoZSs9YStsPj0xP2gvdTpoKk1hdGgucG93KDIsMS1sKSkqdT49MiYmKGErKyx1Lz0yKSxhK2w+PWM/KHM9MCxhPWMpOmErbD49MT8ocz0oZSp1LTEpKk1hdGgucG93KDIsaSksYSs9bCk6KHM9ZSpNYXRoLnBvdygyLGwtMSkqTWF0aC5wb3coMixpKSxhPTApKTtpPj04O3RbcitkXT0yNTUmcyxkKz1wLHMvPTI1NixpLT04KTtmb3IoYT1hPDxpfHMsZis9aTtmPjA7dFtyK2RdPTI1NSZhLGQrPXAsYS89MjU2LGYtPTgpO3RbcitkLXBdfD0xMjgqZ312YXIgYj17fS50b1N0cmluZyxtPUFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKHQpe3JldHVybiJbb2JqZWN0IEFycmF5XSI9PWIuY2FsbCh0KX07RS5UWVBFRF9BUlJBWV9TVVBQT1JUPXZvaWQgMD09PXUuVFlQRURfQVJSQVlfU1VQUE9SVHx8dS5UWVBFRF9BUlJBWV9TVVBQT1JUO3ZhciB3PVMoKTtmdW5jdGlvbiBTKCl7cmV0dXJuIEUuVFlQRURfQVJSQVlfU1VQUE9SVD8yMTQ3NDgzNjQ3OjEwNzM3NDE4MjN9ZnVuY3Rpb24gXyh0LGUpe2lmKFMoKTxlKXRocm93IG5ldyBSYW5nZUVycm9yKCJJbnZhbGlkIHR5cGVkIGFycmF5IGxlbmd0aCIpO3JldHVybiBFLlRZUEVEX0FSUkFZX1NVUFBPUlQ/KHQ9bmV3IFVpbnQ4QXJyYXkoZSkpLl9fcHJvdG9fXz1FLnByb3RvdHlwZToobnVsbD09PXQmJih0PW5ldyBFKGUpKSx0Lmxlbmd0aD1lKSx0fWZ1bmN0aW9uIEUodCxlLHIpe2lmKCEoRS5UWVBFRF9BUlJBWV9TVVBQT1JUfHx0aGlzIGluc3RhbmNlb2YgRSkpcmV0dXJuIG5ldyBFKHQsZSxyKTtpZigibnVtYmVyIj09dHlwZW9mIHQpe2lmKCJzdHJpbmciPT10eXBlb2YgZSl0aHJvdyBuZXcgRXJyb3IoIklmIGVuY29kaW5nIGlzIHNwZWNpZmllZCB0aGVuIHRoZSBmaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nIik7cmV0dXJuIHgodGhpcyx0KX1yZXR1cm4gayh0aGlzLHQsZSxyKX1mdW5jdGlvbiBrKHQsZSxyLG4pe2lmKCJudW1iZXIiPT10eXBlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yKCcidmFsdWUiIGFyZ3VtZW50IG11c3Qgbm90IGJlIGEgbnVtYmVyJyk7cmV0dXJuInVuZGVmaW5lZCIhPXR5cGVvZiBBcnJheUJ1ZmZlciYmZSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyP2Z1bmN0aW9uKHQsZSxyLG4pe2lmKGUuYnl0ZUxlbmd0aCxyPDB8fGUuYnl0ZUxlbmd0aDxyKXRocm93IG5ldyBSYW5nZUVycm9yKCInb2Zmc2V0JyBpcyBvdXQgb2YgYm91bmRzIik7aWYoZS5ieXRlTGVuZ3RoPHIrKG58fDApKXRocm93IG5ldyBSYW5nZUVycm9yKCInbGVuZ3RoJyBpcyBvdXQgb2YgYm91bmRzIik7cmV0dXJuIGU9dm9pZCAwPT09ciYmdm9pZCAwPT09bj9uZXcgVWludDhBcnJheShlKTp2b2lkIDA9PT1uP25ldyBVaW50OEFycmF5KGUscik6bmV3IFVpbnQ4QXJyYXkoZSxyLG4pLEUuVFlQRURfQVJSQVlfU1VQUE9SVD8odD1lKS5fX3Byb3RvX189RS5wcm90b3R5cGU6dD1PKHQsZSksdH0odCxlLHIsbik6InN0cmluZyI9PXR5cGVvZiBlP2Z1bmN0aW9uKHQsZSxyKXtpZigic3RyaW5nIj09dHlwZW9mIHImJiIiIT09cnx8KHI9InV0ZjgiKSwhRS5pc0VuY29kaW5nKHIpKXRocm93IG5ldyBUeXBlRXJyb3IoJyJlbmNvZGluZyIgbXVzdCBiZSBhIHZhbGlkIHN0cmluZyBlbmNvZGluZycpO3ZhciBuPTB8QShlLHIpLGk9KHQ9Xyh0LG4pKS53cml0ZShlLHIpO3JldHVybiBpIT09biYmKHQ9dC5zbGljZSgwLGkpKSx0fSh0LGUscik6ZnVuY3Rpb24odCxlKXtpZihUKGUpKXt2YXIgcj0wfGooZS5sZW5ndGgpO3JldHVybiAwPT09KHQ9Xyh0LHIpKS5sZW5ndGh8fGUuY29weSh0LDAsMCxyKSx0fWlmKGUpe2lmKCJ1bmRlZmluZWQiIT10eXBlb2YgQXJyYXlCdWZmZXImJmUuYnVmZmVyIGluc3RhbmNlb2YgQXJyYXlCdWZmZXJ8fCJsZW5ndGgiaW4gZSlyZXR1cm4ibnVtYmVyIiE9dHlwZW9mIGUubGVuZ3RofHwobj1lLmxlbmd0aCkhPW4/Xyh0LDApOk8odCxlKTtpZigiQnVmZmVyIj09PWUudHlwZSYmbShlLmRhdGEpKXJldHVybiBPKHQsZS5kYXRhKX12YXIgbjt0aHJvdyBuZXcgVHlwZUVycm9yKCJGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nLCBCdWZmZXIsIEFycmF5QnVmZmVyLCBBcnJheSwgb3IgYXJyYXktbGlrZSBvYmplY3QuIil9KHQsZSl9ZnVuY3Rpb24gUih0KXtpZigibnVtYmVyIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcignInNpemUiIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXInKTtpZih0PDApdGhyb3cgbmV3IFJhbmdlRXJyb3IoJyJzaXplIiBhcmd1bWVudCBtdXN0IG5vdCBiZSBuZWdhdGl2ZScpfWZ1bmN0aW9uIHgodCxlKXtpZihSKGUpLHQ9Xyh0LGU8MD8wOjB8aihlKSksIUUuVFlQRURfQVJSQVlfU1VQUE9SVClmb3IodmFyIHI9MDtyPGU7KytyKXRbcl09MDtyZXR1cm4gdH1mdW5jdGlvbiBPKHQsZSl7dmFyIHI9ZS5sZW5ndGg8MD8wOjB8aihlLmxlbmd0aCk7dD1fKHQscik7Zm9yKHZhciBuPTA7bjxyO24rPTEpdFtuXT0yNTUmZVtuXTtyZXR1cm4gdH1mdW5jdGlvbiBqKHQpe2lmKHQ+PVMoKSl0aHJvdyBuZXcgUmFuZ2VFcnJvcigiQXR0ZW1wdCB0byBhbGxvY2F0ZSBCdWZmZXIgbGFyZ2VyIHRoYW4gbWF4aW11bSBzaXplOiAweCIrUygpLnRvU3RyaW5nKDE2KSsiIGJ5dGVzIik7cmV0dXJuIDB8dH1mdW5jdGlvbiBUKHQpe3JldHVybiEobnVsbD09dHx8IXQuX2lzQnVmZmVyKX1mdW5jdGlvbiBBKHQsZSl7aWYoVCh0KSlyZXR1cm4gdC5sZW5ndGg7aWYoInVuZGVmaW5lZCIhPXR5cGVvZiBBcnJheUJ1ZmZlciYmImZ1bmN0aW9uIj09dHlwZW9mIEFycmF5QnVmZmVyLmlzVmlldyYmKEFycmF5QnVmZmVyLmlzVmlldyh0KXx8dCBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSlyZXR1cm4gdC5ieXRlTGVuZ3RoOyJzdHJpbmciIT10eXBlb2YgdCYmKHQ9IiIrdCk7dmFyIHI9dC5sZW5ndGg7aWYoMD09PXIpcmV0dXJuIDA7Zm9yKHZhciBuPSExOzspc3dpdGNoKGUpe2Nhc2UiYXNjaWkiOmNhc2UibGF0aW4xIjpjYXNlImJpbmFyeSI6cmV0dXJuIHI7Y2FzZSJ1dGY4IjpjYXNlInV0Zi04IjpjYXNlIHZvaWQgMDpyZXR1cm4gbnQodCkubGVuZ3RoO2Nhc2UidWNzMiI6Y2FzZSJ1Y3MtMiI6Y2FzZSJ1dGYxNmxlIjpjYXNlInV0Zi0xNmxlIjpyZXR1cm4gMipyO2Nhc2UiaGV4IjpyZXR1cm4gcj4+PjE7Y2FzZSJiYXNlNjQiOnJldHVybiBpdCh0KS5sZW5ndGg7ZGVmYXVsdDppZihuKXJldHVybiBudCh0KS5sZW5ndGg7ZT0oIiIrZSkudG9Mb3dlckNhc2UoKSxuPSEwfX1mdW5jdGlvbiBMKHQsZSxyKXt2YXIgbj0hMTtpZigodm9pZCAwPT09ZXx8ZTwwKSYmKGU9MCksZT50aGlzLmxlbmd0aClyZXR1cm4iIjtpZigodm9pZCAwPT09cnx8cj50aGlzLmxlbmd0aCkmJihyPXRoaXMubGVuZ3RoKSxyPD0wKXJldHVybiIiO2lmKChyPj4+PTApPD0oZT4+Pj0wKSlyZXR1cm4iIjtmb3IodHx8KHQ9InV0ZjgiKTs7KXN3aXRjaCh0KXtjYXNlImhleCI6cmV0dXJuICQodGhpcyxlLHIpO2Nhc2UidXRmOCI6Y2FzZSJ1dGYtOCI6cmV0dXJuIHoodGhpcyxlLHIpO2Nhc2UiYXNjaWkiOnJldHVybiBZKHRoaXMsZSxyKTtjYXNlImxhdGluMSI6Y2FzZSJiaW5hcnkiOnJldHVybiBHKHRoaXMsZSxyKTtjYXNlImJhc2U2NCI6cmV0dXJuIHEodGhpcyxlLHIpO2Nhc2UidWNzMiI6Y2FzZSJ1Y3MtMiI6Y2FzZSJ1dGYxNmxlIjpjYXNlInV0Zi0xNmxlIjpyZXR1cm4gSCh0aGlzLGUscik7ZGVmYXVsdDppZihuKXRocm93IG5ldyBUeXBlRXJyb3IoIlVua25vd24gZW5jb2Rpbmc6ICIrdCk7dD0odCsiIikudG9Mb3dlckNhc2UoKSxuPSEwfX1mdW5jdGlvbiBNKHQsZSxyKXt2YXIgbj10W2VdO3RbZV09dFtyXSx0W3JdPW59ZnVuY3Rpb24gQyh0LGUscixuLGkpe2lmKDA9PT10Lmxlbmd0aClyZXR1cm4tMTtpZigic3RyaW5nIj09dHlwZW9mIHI/KG49cixyPTApOnI+MjE0NzQ4MzY0Nz9yPTIxNDc0ODM2NDc6cjwtMjE0NzQ4MzY0OCYmKHI9LTIxNDc0ODM2NDgpLHI9K3IsaXNOYU4ocikmJihyPWk/MDp0Lmxlbmd0aC0xKSxyPDAmJihyPXQubGVuZ3RoK3IpLHI+PXQubGVuZ3RoKXtpZihpKXJldHVybi0xO3I9dC5sZW5ndGgtMX1lbHNlIGlmKHI8MCl7aWYoIWkpcmV0dXJuLTE7cj0wfWlmKCJzdHJpbmciPT10eXBlb2YgZSYmKGU9RS5mcm9tKGUsbikpLFQoZSkpcmV0dXJuIDA9PT1lLmxlbmd0aD8tMTpQKHQsZSxyLG4saSk7aWYoIm51bWJlciI9PXR5cGVvZiBlKXJldHVybiBlJj0yNTUsRS5UWVBFRF9BUlJBWV9TVVBQT1JUJiYiZnVuY3Rpb24iPT10eXBlb2YgVWludDhBcnJheS5wcm90b3R5cGUuaW5kZXhPZj9pP1VpbnQ4QXJyYXkucHJvdG90eXBlLmluZGV4T2YuY2FsbCh0LGUscik6VWludDhBcnJheS5wcm90b3R5cGUubGFzdEluZGV4T2YuY2FsbCh0LGUscik6UCh0LFtlXSxyLG4saSk7dGhyb3cgbmV3IFR5cGVFcnJvcigidmFsIG11c3QgYmUgc3RyaW5nLCBudW1iZXIgb3IgQnVmZmVyIil9ZnVuY3Rpb24gUCh0LGUscixuLGkpe3ZhciBvLGE9MSxzPXQubGVuZ3RoLHU9ZS5sZW5ndGg7aWYodm9pZCAwIT09biYmKCJ1Y3MyIj09PShuPVN0cmluZyhuKS50b0xvd2VyQ2FzZSgpKXx8InVjcy0yIj09PW58fCJ1dGYxNmxlIj09PW58fCJ1dGYtMTZsZSI9PT1uKSl7aWYodC5sZW5ndGg8Mnx8ZS5sZW5ndGg8MilyZXR1cm4tMTthPTIscy89Mix1Lz0yLHIvPTJ9ZnVuY3Rpb24gZih0LGUpe3JldHVybiAxPT09YT90W2VdOnQucmVhZFVJbnQxNkJFKGUqYSl9aWYoaSl7dmFyIGM9LTE7Zm9yKG89cjtvPHM7bysrKWlmKGYodCxvKT09PWYoZSwtMT09PWM/MDpvLWMpKXtpZigtMT09PWMmJihjPW8pLG8tYysxPT09dSlyZXR1cm4gYyphfWVsc2UtMSE9PWMmJihvLT1vLWMpLGM9LTF9ZWxzZSBmb3Iocit1PnMmJihyPXMtdSksbz1yO28+PTA7by0tKXtmb3IodmFyIGw9ITAsaD0wO2g8dTtoKyspaWYoZih0LG8raCkhPT1mKGUsaCkpe2w9ITE7YnJlYWt9aWYobClyZXR1cm4gb31yZXR1cm4tMX1mdW5jdGlvbiBJKHQsZSxyLG4pe3I9TnVtYmVyKHIpfHwwO3ZhciBpPXQubGVuZ3RoLXI7bj8obj1OdW1iZXIobikpPmkmJihuPWkpOm49aTt2YXIgbz1lLmxlbmd0aDtpZihvJTIhPTApdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBoZXggc3RyaW5nIik7bj5vLzImJihuPW8vMik7Zm9yKHZhciBhPTA7YTxuOysrYSl7dmFyIHM9cGFyc2VJbnQoZS5zdWJzdHIoMiphLDIpLDE2KTtpZihpc05hTihzKSlyZXR1cm4gYTt0W3IrYV09c31yZXR1cm4gYX1mdW5jdGlvbiBOKHQsZSxyLG4pe3JldHVybiBvdChudChlLHQubGVuZ3RoLXIpLHQscixuKX1mdW5jdGlvbiBCKHQsZSxyLG4pe3JldHVybiBvdChmdW5jdGlvbih0KXtmb3IodmFyIGU9W10scj0wO3I8dC5sZW5ndGg7KytyKWUucHVzaCgyNTUmdC5jaGFyQ29kZUF0KHIpKTtyZXR1cm4gZX0oZSksdCxyLG4pfWZ1bmN0aW9uIFUodCxlLHIsbil7cmV0dXJuIEIodCxlLHIsbil9ZnVuY3Rpb24gRCh0LGUscixuKXtyZXR1cm4gb3QoaXQoZSksdCxyLG4pfWZ1bmN0aW9uIEYodCxlLHIsbil7cmV0dXJuIG90KGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciByLG4saSxvPVtdLGE9MDthPHQubGVuZ3RoJiYhKChlLT0yKTwwKTsrK2Epbj0ocj10LmNoYXJDb2RlQXQoYSkpPj44LGk9ciUyNTYsby5wdXNoKGkpLG8ucHVzaChuKTtyZXR1cm4gb30oZSx0Lmxlbmd0aC1yKSx0LHIsbil9ZnVuY3Rpb24gcSh0LGUscil7cmV0dXJuIDA9PT1lJiZyPT09dC5sZW5ndGg/Zyh0KTpnKHQuc2xpY2UoZSxyKSl9ZnVuY3Rpb24geih0LGUscil7cj1NYXRoLm1pbih0Lmxlbmd0aCxyKTtmb3IodmFyIG49W10saT1lO2k8cjspe3ZhciBvLGEscyx1LGY9dFtpXSxjPW51bGwsbD1mPjIzOT80OmY+MjIzPzM6Zj4xOTE/MjoxO2lmKGkrbDw9cilzd2l0Y2gobCl7Y2FzZSAxOmY8MTI4JiYoYz1mKTticmVhaztjYXNlIDI6MTI4PT0oMTkyJihvPXRbaSsxXSkpJiYodT0oMzEmZik8PDZ8NjMmbyk+MTI3JiYoYz11KTticmVhaztjYXNlIDM6bz10W2krMV0sYT10W2krMl0sMTI4PT0oMTkyJm8pJiYxMjg9PSgxOTImYSkmJih1PSgxNSZmKTw8MTJ8KDYzJm8pPDw2fDYzJmEpPjIwNDcmJih1PDU1Mjk2fHx1PjU3MzQzKSYmKGM9dSk7YnJlYWs7Y2FzZSA0Om89dFtpKzFdLGE9dFtpKzJdLHM9dFtpKzNdLDEyOD09KDE5MiZvKSYmMTI4PT0oMTkyJmEpJiYxMjg9PSgxOTImcykmJih1PSgxNSZmKTw8MTh8KDYzJm8pPDwxMnwoNjMmYSk8PDZ8NjMmcyk+NjU1MzUmJnU8MTExNDExMiYmKGM9dSl9bnVsbD09PWM/KGM9NjU1MzMsbD0xKTpjPjY1NTM1JiYoYy09NjU1MzYsbi5wdXNoKGM+Pj4xMCYxMDIzfDU1Mjk2KSxjPTU2MzIwfDEwMjMmYyksbi5wdXNoKGMpLGkrPWx9cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPXQubGVuZ3RoO2lmKGU8PVcpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLHQpO2Zvcih2YXIgcj0iIixuPTA7bjxlOylyKz1TdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFN0cmluZyx0LnNsaWNlKG4sbis9VykpO3JldHVybiByfShuKX1FLnBvb2xTaXplPTgxOTIsRS5fYXVnbWVudD1mdW5jdGlvbih0KXtyZXR1cm4gdC5fX3Byb3RvX189RS5wcm90b3R5cGUsdH0sRS5mcm9tPWZ1bmN0aW9uKHQsZSxyKXtyZXR1cm4gayhudWxsLHQsZSxyKX0sRS5UWVBFRF9BUlJBWV9TVVBQT1JUJiYoRS5wcm90b3R5cGUuX19wcm90b19fPVVpbnQ4QXJyYXkucHJvdG90eXBlLEUuX19wcm90b19fPVVpbnQ4QXJyYXkpLEUuYWxsb2M9ZnVuY3Rpb24odCxlLHIpe3JldHVybiBmdW5jdGlvbih0LGUscixuKXtyZXR1cm4gUihlKSxlPD0wP18odCxlKTp2b2lkIDAhPT1yPyJzdHJpbmciPT10eXBlb2Ygbj9fKHQsZSkuZmlsbChyLG4pOl8odCxlKS5maWxsKHIpOl8odCxlKX0obnVsbCx0LGUscil9LEUuYWxsb2NVbnNhZmU9ZnVuY3Rpb24odCl7cmV0dXJuIHgobnVsbCx0KX0sRS5hbGxvY1Vuc2FmZVNsb3c9ZnVuY3Rpb24odCl7cmV0dXJuIHgobnVsbCx0KX0sRS5pc0J1ZmZlcj1hdCxFLmNvbXBhcmU9ZnVuY3Rpb24odCxlKXtpZighVCh0KXx8IVQoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcigiQXJndW1lbnRzIG11c3QgYmUgQnVmZmVycyIpO2lmKHQ9PT1lKXJldHVybiAwO2Zvcih2YXIgcj10Lmxlbmd0aCxuPWUubGVuZ3RoLGk9MCxvPU1hdGgubWluKHIsbik7aTxvOysraSlpZih0W2ldIT09ZVtpXSl7cj10W2ldLG49ZVtpXTticmVha31yZXR1cm4gcjxuPy0xOm48cj8xOjB9LEUuaXNFbmNvZGluZz1mdW5jdGlvbih0KXtzd2l0Y2goU3RyaW5nKHQpLnRvTG93ZXJDYXNlKCkpe2Nhc2UiaGV4IjpjYXNlInV0ZjgiOmNhc2UidXRmLTgiOmNhc2UiYXNjaWkiOmNhc2UibGF0aW4xIjpjYXNlImJpbmFyeSI6Y2FzZSJiYXNlNjQiOmNhc2UidWNzMiI6Y2FzZSJ1Y3MtMiI6Y2FzZSJ1dGYxNmxlIjpjYXNlInV0Zi0xNmxlIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX0sRS5jb25jYXQ9ZnVuY3Rpb24odCxlKXtpZighbSh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCcibGlzdCIgYXJndW1lbnQgbXVzdCBiZSBhbiBBcnJheSBvZiBCdWZmZXJzJyk7aWYoMD09PXQubGVuZ3RoKXJldHVybiBFLmFsbG9jKDApO3ZhciByO2lmKHZvaWQgMD09PWUpZm9yKGU9MCxyPTA7cjx0Lmxlbmd0aDsrK3IpZSs9dFtyXS5sZW5ndGg7dmFyIG49RS5hbGxvY1Vuc2FmZShlKSxpPTA7Zm9yKHI9MDtyPHQubGVuZ3RoOysrcil7dmFyIG89dFtyXTtpZighVChvKSl0aHJvdyBuZXcgVHlwZUVycm9yKCcibGlzdCIgYXJndW1lbnQgbXVzdCBiZSBhbiBBcnJheSBvZiBCdWZmZXJzJyk7by5jb3B5KG4saSksaSs9by5sZW5ndGh9cmV0dXJuIG59LEUuYnl0ZUxlbmd0aD1BLEUucHJvdG90eXBlLl9pc0J1ZmZlcj0hMCxFLnByb3RvdHlwZS5zd2FwMTY9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmxlbmd0aDtpZih0JTIhPTApdGhyb3cgbmV3IFJhbmdlRXJyb3IoIkJ1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAxNi1iaXRzIik7Zm9yKHZhciBlPTA7ZTx0O2UrPTIpTSh0aGlzLGUsZSsxKTtyZXR1cm4gdGhpc30sRS5wcm90b3R5cGUuc3dhcDMyPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5sZW5ndGg7aWYodCU0IT0wKXRocm93IG5ldyBSYW5nZUVycm9yKCJCdWZmZXIgc2l6ZSBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgMzItYml0cyIpO2Zvcih2YXIgZT0wO2U8dDtlKz00KU0odGhpcyxlLGUrMyksTSh0aGlzLGUrMSxlKzIpO3JldHVybiB0aGlzfSxFLnByb3RvdHlwZS5zd2FwNjQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmxlbmd0aDtpZih0JTghPTApdGhyb3cgbmV3IFJhbmdlRXJyb3IoIkJ1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA2NC1iaXRzIik7Zm9yKHZhciBlPTA7ZTx0O2UrPTgpTSh0aGlzLGUsZSs3KSxNKHRoaXMsZSsxLGUrNiksTSh0aGlzLGUrMixlKzUpLE0odGhpcyxlKzMsZSs0KTtyZXR1cm4gdGhpc30sRS5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXt2YXIgdD0wfHRoaXMubGVuZ3RoO3JldHVybiAwPT09dD8iIjowPT09YXJndW1lbnRzLmxlbmd0aD96KHRoaXMsMCx0KTpMLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sRS5wcm90b3R5cGUuZXF1YWxzPWZ1bmN0aW9uKHQpe2lmKCFUKHQpKXRocm93IG5ldyBUeXBlRXJyb3IoIkFyZ3VtZW50IG11c3QgYmUgYSBCdWZmZXIiKTtyZXR1cm4gdGhpcz09PXR8fDA9PT1FLmNvbXBhcmUodGhpcyx0KX0sRS5wcm90b3R5cGUuaW5zcGVjdD1mdW5jdGlvbigpe3ZhciB0PSIiO3JldHVybiB0aGlzLmxlbmd0aD4wJiYodD10aGlzLnRvU3RyaW5nKCJoZXgiLDAsNTApLm1hdGNoKC8uezJ9L2cpLmpvaW4oIiAiKSx0aGlzLmxlbmd0aD41MCYmKHQrPSIgLi4uICIpKSwiPEJ1ZmZlciAiK3QrIj4ifSxFLnByb3RvdHlwZS5jb21wYXJlPWZ1bmN0aW9uKHQsZSxyLG4saSl7aWYoIVQodCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiQXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlciIpO2lmKHZvaWQgMD09PWUmJihlPTApLHZvaWQgMD09PXImJihyPXQ/dC5sZW5ndGg6MCksdm9pZCAwPT09biYmKG49MCksdm9pZCAwPT09aSYmKGk9dGhpcy5sZW5ndGgpLGU8MHx8cj50Lmxlbmd0aHx8bjwwfHxpPnRoaXMubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKCJvdXQgb2YgcmFuZ2UgaW5kZXgiKTtpZihuPj1pJiZlPj1yKXJldHVybiAwO2lmKG4+PWkpcmV0dXJuLTE7aWYoZT49cilyZXR1cm4gMTtpZih0aGlzPT09dClyZXR1cm4gMDtmb3IodmFyIG89KGk+Pj49MCktKG4+Pj49MCksYT0ocj4+Pj0wKS0oZT4+Pj0wKSxzPU1hdGgubWluKG8sYSksdT10aGlzLnNsaWNlKG4saSksZj10LnNsaWNlKGUsciksYz0wO2M8czsrK2MpaWYodVtjXSE9PWZbY10pe289dVtjXSxhPWZbY107YnJlYWt9cmV0dXJuIG88YT8tMTphPG8/MTowfSxFLnByb3RvdHlwZS5pbmNsdWRlcz1mdW5jdGlvbih0LGUscil7cmV0dXJuLTEhPT10aGlzLmluZGV4T2YodCxlLHIpfSxFLnByb3RvdHlwZS5pbmRleE9mPWZ1bmN0aW9uKHQsZSxyKXtyZXR1cm4gQyh0aGlzLHQsZSxyLCEwKX0sRS5wcm90b3R5cGUubGFzdEluZGV4T2Y9ZnVuY3Rpb24odCxlLHIpe3JldHVybiBDKHRoaXMsdCxlLHIsITEpfSxFLnByb3RvdHlwZS53cml0ZT1mdW5jdGlvbih0LGUscixuKXtpZih2b2lkIDA9PT1lKW49InV0ZjgiLHI9dGhpcy5sZW5ndGgsZT0wO2Vsc2UgaWYodm9pZCAwPT09ciYmInN0cmluZyI9PXR5cGVvZiBlKW49ZSxyPXRoaXMubGVuZ3RoLGU9MDtlbHNle2lmKCFpc0Zpbml0ZShlKSl0aHJvdyBuZXcgRXJyb3IoIkJ1ZmZlci53cml0ZShzdHJpbmcsIGVuY29kaW5nLCBvZmZzZXRbLCBsZW5ndGhdKSBpcyBubyBsb25nZXIgc3VwcG9ydGVkIik7ZXw9MCxpc0Zpbml0ZShyKT8ocnw9MCx2b2lkIDA9PT1uJiYobj0idXRmOCIpKToobj1yLHI9dm9pZCAwKX12YXIgaT10aGlzLmxlbmd0aC1lO2lmKCh2b2lkIDA9PT1yfHxyPmkpJiYocj1pKSx0Lmxlbmd0aD4wJiYocjwwfHxlPDApfHxlPnRoaXMubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKCJBdHRlbXB0IHRvIHdyaXRlIG91dHNpZGUgYnVmZmVyIGJvdW5kcyIpO258fChuPSJ1dGY4Iik7Zm9yKHZhciBvPSExOzspc3dpdGNoKG4pe2Nhc2UiaGV4IjpyZXR1cm4gSSh0aGlzLHQsZSxyKTtjYXNlInV0ZjgiOmNhc2UidXRmLTgiOnJldHVybiBOKHRoaXMsdCxlLHIpO2Nhc2UiYXNjaWkiOnJldHVybiBCKHRoaXMsdCxlLHIpO2Nhc2UibGF0aW4xIjpjYXNlImJpbmFyeSI6cmV0dXJuIFUodGhpcyx0LGUscik7Y2FzZSJiYXNlNjQiOnJldHVybiBEKHRoaXMsdCxlLHIpO2Nhc2UidWNzMiI6Y2FzZSJ1Y3MtMiI6Y2FzZSJ1dGYxNmxlIjpjYXNlInV0Zi0xNmxlIjpyZXR1cm4gRih0aGlzLHQsZSxyKTtkZWZhdWx0OmlmKG8pdGhyb3cgbmV3IFR5cGVFcnJvcigiVW5rbm93biBlbmNvZGluZzogIituKTtuPSgiIituKS50b0xvd2VyQ2FzZSgpLG89ITB9fSxFLnByb3RvdHlwZS50b0pTT049ZnVuY3Rpb24oKXtyZXR1cm57dHlwZToiQnVmZmVyIixkYXRhOkFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHRoaXMuX2Fycnx8dGhpcywwKX19O3ZhciBXPTQwOTY7ZnVuY3Rpb24gWSh0LGUscil7dmFyIG49IiI7cj1NYXRoLm1pbih0Lmxlbmd0aCxyKTtmb3IodmFyIGk9ZTtpPHI7KytpKW4rPVN0cmluZy5mcm9tQ2hhckNvZGUoMTI3JnRbaV0pO3JldHVybiBufWZ1bmN0aW9uIEcodCxlLHIpe3ZhciBuPSIiO3I9TWF0aC5taW4odC5sZW5ndGgscik7Zm9yKHZhciBpPWU7aTxyOysraSluKz1TdHJpbmcuZnJvbUNoYXJDb2RlKHRbaV0pO3JldHVybiBufWZ1bmN0aW9uICQodCxlLHIpe3ZhciBuPXQubGVuZ3RoOyghZXx8ZTwwKSYmKGU9MCksKCFyfHxyPDB8fHI+bikmJihyPW4pO2Zvcih2YXIgaT0iIixvPWU7bzxyOysrbylpKz1ydCh0W29dKTtyZXR1cm4gaX1mdW5jdGlvbiBIKHQsZSxyKXtmb3IodmFyIG49dC5zbGljZShlLHIpLGk9IiIsbz0wO288bi5sZW5ndGg7bys9MilpKz1TdHJpbmcuZnJvbUNoYXJDb2RlKG5bb10rMjU2Km5bbysxXSk7cmV0dXJuIGl9ZnVuY3Rpb24gVih0LGUscil7aWYodCUxIT0wfHx0PDApdGhyb3cgbmV3IFJhbmdlRXJyb3IoIm9mZnNldCBpcyBub3QgdWludCIpO2lmKHQrZT5yKXRocm93IG5ldyBSYW5nZUVycm9yKCJUcnlpbmcgdG8gYWNjZXNzIGJleW9uZCBidWZmZXIgbGVuZ3RoIil9ZnVuY3Rpb24gSih0LGUscixuLGksbyl7aWYoIVQodCkpdGhyb3cgbmV3IFR5cGVFcnJvcignImJ1ZmZlciIgYXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlciBpbnN0YW5jZScpO2lmKGU+aXx8ZTxvKXRocm93IG5ldyBSYW5nZUVycm9yKCcidmFsdWUiIGFyZ3VtZW50IGlzIG91dCBvZiBib3VuZHMnKTtpZihyK24+dC5sZW5ndGgpdGhyb3cgbmV3IFJhbmdlRXJyb3IoIkluZGV4IG91dCBvZiByYW5nZSIpfWZ1bmN0aW9uIEsodCxlLHIsbil7ZTwwJiYoZT02NTUzNStlKzEpO2Zvcih2YXIgaT0wLG89TWF0aC5taW4odC5sZW5ndGgtciwyKTtpPG87KytpKXRbcitpXT0oZSYyNTU8PDgqKG4/aToxLWkpKT4+PjgqKG4/aToxLWkpfWZ1bmN0aW9uIFgodCxlLHIsbil7ZTwwJiYoZT00Mjk0OTY3Mjk1K2UrMSk7Zm9yKHZhciBpPTAsbz1NYXRoLm1pbih0Lmxlbmd0aC1yLDQpO2k8bzsrK2kpdFtyK2ldPWU+Pj44KihuP2k6My1pKSYyNTV9ZnVuY3Rpb24gUSh0LGUscixuLGksbyl7aWYocituPnQubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKCJJbmRleCBvdXQgb2YgcmFuZ2UiKTtpZihyPDApdGhyb3cgbmV3IFJhbmdlRXJyb3IoIkluZGV4IG91dCBvZiByYW5nZSIpfWZ1bmN0aW9uIFoodCxlLHIsbixpKXtyZXR1cm4gaXx8USh0LDAsciw0KSx5KHQsZSxyLG4sMjMsNCkscis0fWZ1bmN0aW9uIHR0KHQsZSxyLG4saSl7cmV0dXJuIGl8fFEodCwwLHIsOCkseSh0LGUscixuLDUyLDgpLHIrOH1FLnByb3RvdHlwZS5zbGljZT1mdW5jdGlvbih0LGUpe3ZhciByLG49dGhpcy5sZW5ndGg7aWYoKHQ9fn50KTwwPyh0Kz1uKTwwJiYodD0wKTp0Pm4mJih0PW4pLChlPXZvaWQgMD09PWU/bjp+fmUpPDA/KGUrPW4pPDAmJihlPTApOmU+biYmKGU9biksZTx0JiYoZT10KSxFLlRZUEVEX0FSUkFZX1NVUFBPUlQpKHI9dGhpcy5zdWJhcnJheSh0LGUpKS5fX3Byb3RvX189RS5wcm90b3R5cGU7ZWxzZXt2YXIgaT1lLXQ7cj1uZXcgRShpLHZvaWQgMCk7Zm9yKHZhciBvPTA7bzxpOysrbylyW29dPXRoaXNbbyt0XX1yZXR1cm4gcn0sRS5wcm90b3R5cGUucmVhZFVJbnRMRT1mdW5jdGlvbih0LGUscil7dHw9MCxlfD0wLHJ8fFYodCxlLHRoaXMubGVuZ3RoKTtmb3IodmFyIG49dGhpc1t0XSxpPTEsbz0wOysrbzxlJiYoaSo9MjU2KTspbis9dGhpc1t0K29dKmk7cmV0dXJuIG59LEUucHJvdG90eXBlLnJlYWRVSW50QkU9ZnVuY3Rpb24odCxlLHIpe3R8PTAsZXw9MCxyfHxWKHQsZSx0aGlzLmxlbmd0aCk7Zm9yKHZhciBuPXRoaXNbdCstLWVdLGk9MTtlPjAmJihpKj0yNTYpOyluKz10aGlzW3QrLS1lXSppO3JldHVybiBufSxFLnByb3RvdHlwZS5yZWFkVUludDg9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8Vih0LDEsdGhpcy5sZW5ndGgpLHRoaXNbdF19LEUucHJvdG90eXBlLnJlYWRVSW50MTZMRT1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxWKHQsMix0aGlzLmxlbmd0aCksdGhpc1t0XXx0aGlzW3QrMV08PDh9LEUucHJvdG90eXBlLnJlYWRVSW50MTZCRT1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxWKHQsMix0aGlzLmxlbmd0aCksdGhpc1t0XTw8OHx0aGlzW3QrMV19LEUucHJvdG90eXBlLnJlYWRVSW50MzJMRT1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxWKHQsNCx0aGlzLmxlbmd0aCksKHRoaXNbdF18dGhpc1t0KzFdPDw4fHRoaXNbdCsyXTw8MTYpKzE2Nzc3MjE2KnRoaXNbdCszXX0sRS5wcm90b3R5cGUucmVhZFVJbnQzMkJFPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGV8fFYodCw0LHRoaXMubGVuZ3RoKSwxNjc3NzIxNip0aGlzW3RdKyh0aGlzW3QrMV08PDE2fHRoaXNbdCsyXTw8OHx0aGlzW3QrM10pfSxFLnByb3RvdHlwZS5yZWFkSW50TEU9ZnVuY3Rpb24odCxlLHIpe3R8PTAsZXw9MCxyfHxWKHQsZSx0aGlzLmxlbmd0aCk7Zm9yKHZhciBuPXRoaXNbdF0saT0xLG89MDsrK288ZSYmKGkqPTI1Nik7KW4rPXRoaXNbdCtvXSppO3JldHVybiBuPj0oaSo9MTI4KSYmKG4tPU1hdGgucG93KDIsOCplKSksbn0sRS5wcm90b3R5cGUucmVhZEludEJFPWZ1bmN0aW9uKHQsZSxyKXt0fD0wLGV8PTAscnx8Vih0LGUsdGhpcy5sZW5ndGgpO2Zvcih2YXIgbj1lLGk9MSxvPXRoaXNbdCstLW5dO24+MCYmKGkqPTI1Nik7KW8rPXRoaXNbdCstLW5dKmk7cmV0dXJuIG8+PShpKj0xMjgpJiYoby09TWF0aC5wb3coMiw4KmUpKSxvfSxFLnByb3RvdHlwZS5yZWFkSW50OD1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxWKHQsMSx0aGlzLmxlbmd0aCksMTI4JnRoaXNbdF0/LTEqKDI1NS10aGlzW3RdKzEpOnRoaXNbdF19LEUucHJvdG90eXBlLnJlYWRJbnQxNkxFPWZ1bmN0aW9uKHQsZSl7ZXx8Vih0LDIsdGhpcy5sZW5ndGgpO3ZhciByPXRoaXNbdF18dGhpc1t0KzFdPDw4O3JldHVybiAzMjc2OCZyPzQyOTQ5MDE3NjB8cjpyfSxFLnByb3RvdHlwZS5yZWFkSW50MTZCRT1mdW5jdGlvbih0LGUpe2V8fFYodCwyLHRoaXMubGVuZ3RoKTt2YXIgcj10aGlzW3QrMV18dGhpc1t0XTw8ODtyZXR1cm4gMzI3Njgmcj80Mjk0OTAxNzYwfHI6cn0sRS5wcm90b3R5cGUucmVhZEludDMyTEU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8Vih0LDQsdGhpcy5sZW5ndGgpLHRoaXNbdF18dGhpc1t0KzFdPDw4fHRoaXNbdCsyXTw8MTZ8dGhpc1t0KzNdPDwyNH0sRS5wcm90b3R5cGUucmVhZEludDMyQkU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8Vih0LDQsdGhpcy5sZW5ndGgpLHRoaXNbdF08PDI0fHRoaXNbdCsxXTw8MTZ8dGhpc1t0KzJdPDw4fHRoaXNbdCszXX0sRS5wcm90b3R5cGUucmVhZEZsb2F0TEU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8Vih0LDQsdGhpcy5sZW5ndGgpLHYodGhpcyx0LCEwLDIzLDQpfSxFLnByb3RvdHlwZS5yZWFkRmxvYXRCRT1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxWKHQsNCx0aGlzLmxlbmd0aCksdih0aGlzLHQsITEsMjMsNCl9LEUucHJvdG90eXBlLnJlYWREb3VibGVMRT1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxWKHQsOCx0aGlzLmxlbmd0aCksdih0aGlzLHQsITAsNTIsOCl9LEUucHJvdG90eXBlLnJlYWREb3VibGVCRT1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxWKHQsOCx0aGlzLmxlbmd0aCksdih0aGlzLHQsITEsNTIsOCl9LEUucHJvdG90eXBlLndyaXRlVUludExFPWZ1bmN0aW9uKHQsZSxyLG4pe3Q9K3QsZXw9MCxyfD0wLG58fEoodGhpcyx0LGUscixNYXRoLnBvdygyLDgqciktMSwwKTt2YXIgaT0xLG89MDtmb3IodGhpc1tlXT0yNTUmdDsrK288ciYmKGkqPTI1Nik7KXRoaXNbZStvXT10L2kmMjU1O3JldHVybiBlK3J9LEUucHJvdG90eXBlLndyaXRlVUludEJFPWZ1bmN0aW9uKHQsZSxyLG4pe3Q9K3QsZXw9MCxyfD0wLG58fEoodGhpcyx0LGUscixNYXRoLnBvdygyLDgqciktMSwwKTt2YXIgaT1yLTEsbz0xO2Zvcih0aGlzW2UraV09MjU1JnQ7LS1pPj0wJiYobyo9MjU2KTspdGhpc1tlK2ldPXQvbyYyNTU7cmV0dXJuIGUrcn0sRS5wcm90b3R5cGUud3JpdGVVSW50OD1mdW5jdGlvbih0LGUscil7cmV0dXJuIHQ9K3QsZXw9MCxyfHxKKHRoaXMsdCxlLDEsMjU1LDApLEUuVFlQRURfQVJSQVlfU1VQUE9SVHx8KHQ9TWF0aC5mbG9vcih0KSksdGhpc1tlXT0yNTUmdCxlKzF9LEUucHJvdG90eXBlLndyaXRlVUludDE2TEU9ZnVuY3Rpb24odCxlLHIpe3JldHVybiB0PSt0LGV8PTAscnx8Sih0aGlzLHQsZSwyLDY1NTM1LDApLEUuVFlQRURfQVJSQVlfU1VQUE9SVD8odGhpc1tlXT0yNTUmdCx0aGlzW2UrMV09dD4+PjgpOksodGhpcyx0LGUsITApLGUrMn0sRS5wcm90b3R5cGUud3JpdGVVSW50MTZCRT1mdW5jdGlvbih0LGUscil7cmV0dXJuIHQ9K3QsZXw9MCxyfHxKKHRoaXMsdCxlLDIsNjU1MzUsMCksRS5UWVBFRF9BUlJBWV9TVVBQT1JUPyh0aGlzW2VdPXQ+Pj44LHRoaXNbZSsxXT0yNTUmdCk6Syh0aGlzLHQsZSwhMSksZSsyfSxFLnByb3RvdHlwZS53cml0ZVVJbnQzMkxFPWZ1bmN0aW9uKHQsZSxyKXtyZXR1cm4gdD0rdCxlfD0wLHJ8fEoodGhpcyx0LGUsNCw0Mjk0OTY3Mjk1LDApLEUuVFlQRURfQVJSQVlfU1VQUE9SVD8odGhpc1tlKzNdPXQ+Pj4yNCx0aGlzW2UrMl09dD4+PjE2LHRoaXNbZSsxXT10Pj4+OCx0aGlzW2VdPTI1NSZ0KTpYKHRoaXMsdCxlLCEwKSxlKzR9LEUucHJvdG90eXBlLndyaXRlVUludDMyQkU9ZnVuY3Rpb24odCxlLHIpe3JldHVybiB0PSt0LGV8PTAscnx8Sih0aGlzLHQsZSw0LDQyOTQ5NjcyOTUsMCksRS5UWVBFRF9BUlJBWV9TVVBQT1JUPyh0aGlzW2VdPXQ+Pj4yNCx0aGlzW2UrMV09dD4+PjE2LHRoaXNbZSsyXT10Pj4+OCx0aGlzW2UrM109MjU1JnQpOlgodGhpcyx0LGUsITEpLGUrNH0sRS5wcm90b3R5cGUud3JpdGVJbnRMRT1mdW5jdGlvbih0LGUscixuKXtpZih0PSt0LGV8PTAsIW4pe3ZhciBpPU1hdGgucG93KDIsOCpyLTEpO0oodGhpcyx0LGUscixpLTEsLWkpfXZhciBvPTAsYT0xLHM9MDtmb3IodGhpc1tlXT0yNTUmdDsrK288ciYmKGEqPTI1Nik7KXQ8MCYmMD09PXMmJjAhPT10aGlzW2Urby0xXSYmKHM9MSksdGhpc1tlK29dPSh0L2E+PjApLXMmMjU1O3JldHVybiBlK3J9LEUucHJvdG90eXBlLndyaXRlSW50QkU9ZnVuY3Rpb24odCxlLHIsbil7aWYodD0rdCxlfD0wLCFuKXt2YXIgaT1NYXRoLnBvdygyLDgqci0xKTtKKHRoaXMsdCxlLHIsaS0xLC1pKX12YXIgbz1yLTEsYT0xLHM9MDtmb3IodGhpc1tlK29dPTI1NSZ0Oy0tbz49MCYmKGEqPTI1Nik7KXQ8MCYmMD09PXMmJjAhPT10aGlzW2UrbysxXSYmKHM9MSksdGhpc1tlK29dPSh0L2E+PjApLXMmMjU1O3JldHVybiBlK3J9LEUucHJvdG90eXBlLndyaXRlSW50OD1mdW5jdGlvbih0LGUscil7cmV0dXJuIHQ9K3QsZXw9MCxyfHxKKHRoaXMsdCxlLDEsMTI3LC0xMjgpLEUuVFlQRURfQVJSQVlfU1VQUE9SVHx8KHQ9TWF0aC5mbG9vcih0KSksdDwwJiYodD0yNTUrdCsxKSx0aGlzW2VdPTI1NSZ0LGUrMX0sRS5wcm90b3R5cGUud3JpdGVJbnQxNkxFPWZ1bmN0aW9uKHQsZSxyKXtyZXR1cm4gdD0rdCxlfD0wLHJ8fEoodGhpcyx0LGUsMiwzMjc2NywtMzI3NjgpLEUuVFlQRURfQVJSQVlfU1VQUE9SVD8odGhpc1tlXT0yNTUmdCx0aGlzW2UrMV09dD4+PjgpOksodGhpcyx0LGUsITApLGUrMn0sRS5wcm90b3R5cGUud3JpdGVJbnQxNkJFPWZ1bmN0aW9uKHQsZSxyKXtyZXR1cm4gdD0rdCxlfD0wLHJ8fEoodGhpcyx0LGUsMiwzMjc2NywtMzI3NjgpLEUuVFlQRURfQVJSQVlfU1VQUE9SVD8odGhpc1tlXT10Pj4+OCx0aGlzW2UrMV09MjU1JnQpOksodGhpcyx0LGUsITEpLGUrMn0sRS5wcm90b3R5cGUud3JpdGVJbnQzMkxFPWZ1bmN0aW9uKHQsZSxyKXtyZXR1cm4gdD0rdCxlfD0wLHJ8fEoodGhpcyx0LGUsNCwyMTQ3NDgzNjQ3LC0yMTQ3NDgzNjQ4KSxFLlRZUEVEX0FSUkFZX1NVUFBPUlQ/KHRoaXNbZV09MjU1JnQsdGhpc1tlKzFdPXQ+Pj44LHRoaXNbZSsyXT10Pj4+MTYsdGhpc1tlKzNdPXQ+Pj4yNCk6WCh0aGlzLHQsZSwhMCksZSs0fSxFLnByb3RvdHlwZS53cml0ZUludDMyQkU9ZnVuY3Rpb24odCxlLHIpe3JldHVybiB0PSt0LGV8PTAscnx8Sih0aGlzLHQsZSw0LDIxNDc0ODM2NDcsLTIxNDc0ODM2NDgpLHQ8MCYmKHQ9NDI5NDk2NzI5NSt0KzEpLEUuVFlQRURfQVJSQVlfU1VQUE9SVD8odGhpc1tlXT10Pj4+MjQsdGhpc1tlKzFdPXQ+Pj4xNix0aGlzW2UrMl09dD4+PjgsdGhpc1tlKzNdPTI1NSZ0KTpYKHRoaXMsdCxlLCExKSxlKzR9LEUucHJvdG90eXBlLndyaXRlRmxvYXRMRT1mdW5jdGlvbih0LGUscil7cmV0dXJuIFoodGhpcyx0LGUsITAscil9LEUucHJvdG90eXBlLndyaXRlRmxvYXRCRT1mdW5jdGlvbih0LGUscil7cmV0dXJuIFoodGhpcyx0LGUsITEscil9LEUucHJvdG90eXBlLndyaXRlRG91YmxlTEU9ZnVuY3Rpb24odCxlLHIpe3JldHVybiB0dCh0aGlzLHQsZSwhMCxyKX0sRS5wcm90b3R5cGUud3JpdGVEb3VibGVCRT1mdW5jdGlvbih0LGUscil7cmV0dXJuIHR0KHRoaXMsdCxlLCExLHIpfSxFLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKHQsZSxyLG4pe2lmKHJ8fChyPTApLG58fDA9PT1ufHwobj10aGlzLmxlbmd0aCksZT49dC5sZW5ndGgmJihlPXQubGVuZ3RoKSxlfHwoZT0wKSxuPjAmJm48ciYmKG49ciksbj09PXIpcmV0dXJuIDA7aWYoMD09PXQubGVuZ3RofHwwPT09dGhpcy5sZW5ndGgpcmV0dXJuIDA7aWYoZTwwKXRocm93IG5ldyBSYW5nZUVycm9yKCJ0YXJnZXRTdGFydCBvdXQgb2YgYm91bmRzIik7aWYocjwwfHxyPj10aGlzLmxlbmd0aCl0aHJvdyBuZXcgUmFuZ2VFcnJvcigic291cmNlU3RhcnQgb3V0IG9mIGJvdW5kcyIpO2lmKG48MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcigic291cmNlRW5kIG91dCBvZiBib3VuZHMiKTtuPnRoaXMubGVuZ3RoJiYobj10aGlzLmxlbmd0aCksdC5sZW5ndGgtZTxuLXImJihuPXQubGVuZ3RoLWUrcik7dmFyIGksbz1uLXI7aWYodGhpcz09PXQmJnI8ZSYmZTxuKWZvcihpPW8tMTtpPj0wOy0taSl0W2krZV09dGhpc1tpK3JdO2Vsc2UgaWYobzwxZTN8fCFFLlRZUEVEX0FSUkFZX1NVUFBPUlQpZm9yKGk9MDtpPG87KytpKXRbaStlXT10aGlzW2krcl07ZWxzZSBVaW50OEFycmF5LnByb3RvdHlwZS5zZXQuY2FsbCh0LHRoaXMuc3ViYXJyYXkocixyK28pLGUpO3JldHVybiBvfSxFLnByb3RvdHlwZS5maWxsPWZ1bmN0aW9uKHQsZSxyLG4pe2lmKCJzdHJpbmciPT10eXBlb2YgdCl7aWYoInN0cmluZyI9PXR5cGVvZiBlPyhuPWUsZT0wLHI9dGhpcy5sZW5ndGgpOiJzdHJpbmciPT10eXBlb2YgciYmKG49cixyPXRoaXMubGVuZ3RoKSwxPT09dC5sZW5ndGgpe3ZhciBpPXQuY2hhckNvZGVBdCgwKTtpPDI1NiYmKHQ9aSl9aWYodm9pZCAwIT09biYmInN0cmluZyIhPXR5cGVvZiBuKXRocm93IG5ldyBUeXBlRXJyb3IoImVuY29kaW5nIG11c3QgYmUgYSBzdHJpbmciKTtpZigic3RyaW5nIj09dHlwZW9mIG4mJiFFLmlzRW5jb2RpbmcobikpdGhyb3cgbmV3IFR5cGVFcnJvcigiVW5rbm93biBlbmNvZGluZzogIituKX1lbHNlIm51bWJlciI9PXR5cGVvZiB0JiYodCY9MjU1KTtpZihlPDB8fHRoaXMubGVuZ3RoPGV8fHRoaXMubGVuZ3RoPHIpdGhyb3cgbmV3IFJhbmdlRXJyb3IoIk91dCBvZiByYW5nZSBpbmRleCIpO2lmKHI8PWUpcmV0dXJuIHRoaXM7dmFyIG87aWYoZT4+Pj0wLHI9dm9pZCAwPT09cj90aGlzLmxlbmd0aDpyPj4+MCx0fHwodD0wKSwibnVtYmVyIj09dHlwZW9mIHQpZm9yKG89ZTtvPHI7KytvKXRoaXNbb109dDtlbHNle3ZhciBhPVQodCk/dDpudChuZXcgRSh0LG4pLnRvU3RyaW5nKCkpLHM9YS5sZW5ndGg7Zm9yKG89MDtvPHItZTsrK28pdGhpc1tvK2VdPWFbbyVzXX1yZXR1cm4gdGhpc307dmFyIGV0PS9bXitcLzAtOUEtWmEtei1fXS9nO2Z1bmN0aW9uIHJ0KHQpe3JldHVybiB0PDE2PyIwIit0LnRvU3RyaW5nKDE2KTp0LnRvU3RyaW5nKDE2KX1mdW5jdGlvbiBudCh0LGUpe3ZhciByO2U9ZXx8MS8wO2Zvcih2YXIgbj10Lmxlbmd0aCxpPW51bGwsbz1bXSxhPTA7YTxuOysrYSl7aWYoKHI9dC5jaGFyQ29kZUF0KGEpKT41NTI5NSYmcjw1NzM0NCl7aWYoIWkpe2lmKHI+NTYzMTkpeyhlLT0zKT4tMSYmby5wdXNoKDIzOSwxOTEsMTg5KTtjb250aW51ZX1pZihhKzE9PT1uKXsoZS09Myk+LTEmJm8ucHVzaCgyMzksMTkxLDE4OSk7Y29udGludWV9aT1yO2NvbnRpbnVlfWlmKHI8NTYzMjApeyhlLT0zKT4tMSYmby5wdXNoKDIzOSwxOTEsMTg5KSxpPXI7Y29udGludWV9cj02NTUzNisoaS01NTI5Njw8MTB8ci01NjMyMCl9ZWxzZSBpJiYoZS09Myk+LTEmJm8ucHVzaCgyMzksMTkxLDE4OSk7aWYoaT1udWxsLHI8MTI4KXtpZigoZS09MSk8MClicmVhaztvLnB1c2gocil9ZWxzZSBpZihyPDIwNDgpe2lmKChlLT0yKTwwKWJyZWFrO28ucHVzaChyPj42fDE5Miw2MyZyfDEyOCl9ZWxzZSBpZihyPDY1NTM2KXtpZigoZS09Myk8MClicmVhaztvLnB1c2gocj4+MTJ8MjI0LHI+PjYmNjN8MTI4LDYzJnJ8MTI4KX1lbHNle2lmKCEocjwxMTE0MTEyKSl0aHJvdyBuZXcgRXJyb3IoIkludmFsaWQgY29kZSBwb2ludCIpO2lmKChlLT00KTwwKWJyZWFrO28ucHVzaChyPj4xOHwyNDAscj4+MTImNjN8MTI4LHI+PjYmNjN8MTI4LDYzJnJ8MTI4KX19cmV0dXJuIG99ZnVuY3Rpb24gaXQodCl7cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlLHIsbixpLG8sYTtofHxkKCk7dmFyIHM9dC5sZW5ndGg7aWYocyU0PjApdGhyb3cgbmV3IEVycm9yKCJJbnZhbGlkIHN0cmluZy4gTGVuZ3RoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA0Iik7bz0iPSI9PT10W3MtMl0/MjoiPSI9PT10W3MtMV0/MTowLGE9bmV3IGwoMypzLzQtbyksbj1vPjA/cy00OnM7dmFyIHU9MDtmb3IoZT0wLHI9MDtlPG47ZSs9NCxyKz0zKWk9Y1t0LmNoYXJDb2RlQXQoZSldPDwxOHxjW3QuY2hhckNvZGVBdChlKzEpXTw8MTJ8Y1t0LmNoYXJDb2RlQXQoZSsyKV08PDZ8Y1t0LmNoYXJDb2RlQXQoZSszKV0sYVt1KytdPWk+PjE2JjI1NSxhW3UrK109aT4+OCYyNTUsYVt1KytdPTI1NSZpO3JldHVybiAyPT09bz8oaT1jW3QuY2hhckNvZGVBdChlKV08PDJ8Y1t0LmNoYXJDb2RlQXQoZSsxKV0+PjQsYVt1KytdPTI1NSZpKToxPT09byYmKGk9Y1t0LmNoYXJDb2RlQXQoZSldPDwxMHxjW3QuY2hhckNvZGVBdChlKzEpXTw8NHxjW3QuY2hhckNvZGVBdChlKzIpXT4+MixhW3UrK109aT4+OCYyNTUsYVt1KytdPTI1NSZpKSxhfShmdW5jdGlvbih0KXtpZigodD1mdW5jdGlvbih0KXtyZXR1cm4gdC50cmltP3QudHJpbSgpOnQucmVwbGFjZSgvXlxzK3xccyskL2csIiIpfSh0KS5yZXBsYWNlKGV0LCIiKSkubGVuZ3RoPDIpcmV0dXJuIiI7Zm9yKDt0Lmxlbmd0aCU0IT0wOyl0Kz0iPSI7cmV0dXJuIHR9KHQpKX1mdW5jdGlvbiBvdCh0LGUscixuKXtmb3IodmFyIGk9MDtpPG4mJiEoaStyPj1lLmxlbmd0aHx8aT49dC5sZW5ndGgpOysraSllW2krcl09dFtpXTtyZXR1cm4gaX1mdW5jdGlvbiBhdCh0KXtyZXR1cm4gbnVsbCE9dCYmKCEhdC5faXNCdWZmZXJ8fHN0KHQpfHxmdW5jdGlvbih0KXtyZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgdC5yZWFkRmxvYXRMRSYmImZ1bmN0aW9uIj09dHlwZW9mIHQuc2xpY2UmJnN0KHQuc2xpY2UoMCwwKSl9KHQpKX1mdW5jdGlvbiBzdCh0KXtyZXR1cm4hIXQuY29uc3RydWN0b3ImJiJmdW5jdGlvbiI9PXR5cGVvZiB0LmNvbnN0cnVjdG9yLmlzQnVmZmVyJiZ0LmNvbnN0cnVjdG9yLmlzQnVmZmVyKHQpfXZhciB1dD1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxCdWZmZXI6RSxJTlNQRUNUX01BWF9CWVRFUzo1MCxTbG93QnVmZmVyOmZ1bmN0aW9uKHQpe3JldHVybit0IT10JiYodD0wKSxFLmFsbG9jKCt0KX0saXNCdWZmZXI6YXQsa01heExlbmd0aDp3fSk7ZnVuY3Rpb24gZnQoKXt0aHJvdyBuZXcgRXJyb3IoInNldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQiKX1mdW5jdGlvbiBjdCgpe3Rocm93IG5ldyBFcnJvcigiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkIil9dmFyIGx0PWZ0LGh0PWN0O2Z1bmN0aW9uIGR0KHQpe2lmKGx0PT09c2V0VGltZW91dClyZXR1cm4gc2V0VGltZW91dCh0LDApO2lmKChsdD09PWZ0fHwhbHQpJiZzZXRUaW1lb3V0KXJldHVybiBsdD1zZXRUaW1lb3V0LHNldFRpbWVvdXQodCwwKTt0cnl7cmV0dXJuIGx0KHQsMCl9Y2F0Y2goZSl7dHJ5e3JldHVybiBsdC5jYWxsKG51bGwsdCwwKX1jYXRjaChlKXtyZXR1cm4gbHQuY2FsbCh0aGlzLHQsMCl9fX0iZnVuY3Rpb24iPT10eXBlb2YgdS5zZXRUaW1lb3V0JiYobHQ9c2V0VGltZW91dCksImZ1bmN0aW9uIj09dHlwZW9mIHUuY2xlYXJUaW1lb3V0JiYoaHQ9Y2xlYXJUaW1lb3V0KTt2YXIgcHQsZ3Q9W10sdnQ9ITEseXQ9LTE7ZnVuY3Rpb24gYnQoKXt2dCYmcHQmJih2dD0hMSxwdC5sZW5ndGg/Z3Q9cHQuY29uY2F0KGd0KTp5dD0tMSxndC5sZW5ndGgmJm10KCkpfWZ1bmN0aW9uIG10KCl7aWYoIXZ0KXt2YXIgdD1kdChidCk7dnQ9ITA7Zm9yKHZhciBlPWd0Lmxlbmd0aDtlOyl7Zm9yKHB0PWd0LGd0PVtdOysreXQ8ZTspcHQmJnB0W3l0XS5ydW4oKTt5dD0tMSxlPWd0Lmxlbmd0aH1wdD1udWxsLHZ0PSExLGZ1bmN0aW9uKHQpe2lmKGh0PT09Y2xlYXJUaW1lb3V0KXJldHVybiBjbGVhclRpbWVvdXQodCk7aWYoKGh0PT09Y3R8fCFodCkmJmNsZWFyVGltZW91dClyZXR1cm4gaHQ9Y2xlYXJUaW1lb3V0LGNsZWFyVGltZW91dCh0KTt0cnl7aHQodCl9Y2F0Y2goZSl7dHJ5e3JldHVybiBodC5jYWxsKG51bGwsdCl9Y2F0Y2goZSl7cmV0dXJuIGh0LmNhbGwodGhpcyx0KX19fSh0KX19ZnVuY3Rpb24gd3QodCl7dmFyIGU9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMSk7aWYoYXJndW1lbnRzLmxlbmd0aD4xKWZvcih2YXIgcj0xO3I8YXJndW1lbnRzLmxlbmd0aDtyKyspZVtyLTFdPWFyZ3VtZW50c1tyXTtndC5wdXNoKG5ldyBTdCh0LGUpKSwxIT09Z3QubGVuZ3RofHx2dHx8ZHQobXQpfWZ1bmN0aW9uIFN0KHQsZSl7dGhpcy5mdW49dCx0aGlzLmFycmF5PWV9ZnVuY3Rpb24gX3QoKXt9U3QucHJvdG90eXBlLnJ1bj1mdW5jdGlvbigpe3RoaXMuZnVuLmFwcGx5KG51bGwsdGhpcy5hcnJheSl9O3ZhciBFdD1fdCxrdD1fdCxSdD1fdCx4dD1fdCxPdD1fdCxqdD1fdCxUdD1fdCxBdD11LnBlcmZvcm1hbmNlfHx7fSxMdD1BdC5ub3d8fEF0Lm1vek5vd3x8QXQubXNOb3d8fEF0Lm9Ob3d8fEF0LndlYmtpdE5vd3x8ZnVuY3Rpb24oKXtyZXR1cm4obmV3IERhdGUpLmdldFRpbWUoKX0sTXQ9bmV3IERhdGUsQ3Q9e25leHRUaWNrOnd0LHRpdGxlOiJicm93c2VyIixicm93c2VyOiEwLGVudjp7fSxhcmd2OltdLHZlcnNpb246IiIsdmVyc2lvbnM6e30sb246RXQsYWRkTGlzdGVuZXI6a3Qsb25jZTpSdCxvZmY6eHQscmVtb3ZlTGlzdGVuZXI6T3QscmVtb3ZlQWxsTGlzdGVuZXJzOmp0LGVtaXQ6VHQsYmluZGluZzpmdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IoInByb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkIil9LGN3ZDpmdW5jdGlvbigpe3JldHVybiIvIn0sY2hkaXI6ZnVuY3Rpb24odCl7dGhyb3cgbmV3IEVycm9yKCJwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQiKX0sdW1hc2s6ZnVuY3Rpb24oKXtyZXR1cm4gMH0saHJ0aW1lOmZ1bmN0aW9uKHQpe3ZhciBlPS4wMDEqTHQuY2FsbChBdCkscj1NYXRoLmZsb29yKGUpLG49TWF0aC5mbG9vcihlJTEqMWU5KTtyZXR1cm4gdCYmKHItPXRbMF0sKG4tPXRbMV0pPDAmJihyLS0sbis9MWU5KSksW3Isbl19LHBsYXRmb3JtOiJicm93c2VyIixyZWxlYXNlOnt9LGNvbmZpZzp7fSx1cHRpbWU6ZnVuY3Rpb24oKXtyZXR1cm4obmV3IERhdGUtTXQpLzFlM319LFB0PWEoKGZ1bmN0aW9uKHQpe3ZvaWQgMD09PUN0fHwhQ3QudmVyc2lvbnx8MD09PUN0LnZlcnNpb24uaW5kZXhPZigidjAuIil8fDA9PT1DdC52ZXJzaW9uLmluZGV4T2YoInYxLiIpJiYwIT09Q3QudmVyc2lvbi5pbmRleE9mKCJ2MS44LiIpP3QuZXhwb3J0cz17bmV4dFRpY2s6ZnVuY3Rpb24odCxlLHIsbil7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcignImNhbGxiYWNrIiBhcmd1bWVudCBtdXN0IGJlIGEgZnVuY3Rpb24nKTt2YXIgaSxvLGE9YXJndW1lbnRzLmxlbmd0aDtzd2l0Y2goYSl7Y2FzZSAwOmNhc2UgMTpyZXR1cm4gQ3QubmV4dFRpY2sodCk7Y2FzZSAyOnJldHVybiBDdC5uZXh0VGljaygoZnVuY3Rpb24oKXt0LmNhbGwobnVsbCxlKX0pKTtjYXNlIDM6cmV0dXJuIEN0Lm5leHRUaWNrKChmdW5jdGlvbigpe3QuY2FsbChudWxsLGUscil9KSk7Y2FzZSA0OnJldHVybiBDdC5uZXh0VGljaygoZnVuY3Rpb24oKXt0LmNhbGwobnVsbCxlLHIsbil9KSk7ZGVmYXVsdDpmb3IoaT1uZXcgQXJyYXkoYS0xKSxvPTA7bzxpLmxlbmd0aDspaVtvKytdPWFyZ3VtZW50c1tvXTtyZXR1cm4gQ3QubmV4dFRpY2soKGZ1bmN0aW9uKCl7dC5hcHBseShudWxsLGkpfSkpfX19OnQuZXhwb3J0cz1DdH0pKSxJdD17fS50b1N0cmluZyxOdD1BcnJheS5pc0FycmF5fHxmdW5jdGlvbih0KXtyZXR1cm4iW29iamVjdCBBcnJheV0iPT1JdC5jYWxsKHQpfTtmdW5jdGlvbiBCdCgpe31mdW5jdGlvbiBVdCgpe1V0LmluaXQuY2FsbCh0aGlzKX1mdW5jdGlvbiBEdCh0KXtyZXR1cm4gdm9pZCAwPT09dC5fbWF4TGlzdGVuZXJzP1V0LmRlZmF1bHRNYXhMaXN0ZW5lcnM6dC5fbWF4TGlzdGVuZXJzfWZ1bmN0aW9uIEZ0KHQsZSxyKXtpZihlKXQuY2FsbChyKTtlbHNlIGZvcih2YXIgbj10Lmxlbmd0aCxpPVZ0KHQsbiksbz0wO288bjsrK28paVtvXS5jYWxsKHIpfWZ1bmN0aW9uIHF0KHQsZSxyLG4pe2lmKGUpdC5jYWxsKHIsbik7ZWxzZSBmb3IodmFyIGk9dC5sZW5ndGgsbz1WdCh0LGkpLGE9MDthPGk7KythKW9bYV0uY2FsbChyLG4pfWZ1bmN0aW9uIHp0KHQsZSxyLG4saSl7aWYoZSl0LmNhbGwocixuLGkpO2Vsc2UgZm9yKHZhciBvPXQubGVuZ3RoLGE9VnQodCxvKSxzPTA7czxvOysrcylhW3NdLmNhbGwocixuLGkpfWZ1bmN0aW9uIFd0KHQsZSxyLG4saSxvKXtpZihlKXQuY2FsbChyLG4saSxvKTtlbHNlIGZvcih2YXIgYT10Lmxlbmd0aCxzPVZ0KHQsYSksdT0wO3U8YTsrK3Upc1t1XS5jYWxsKHIsbixpLG8pfWZ1bmN0aW9uIFl0KHQsZSxyLG4pe2lmKGUpdC5hcHBseShyLG4pO2Vsc2UgZm9yKHZhciBpPXQubGVuZ3RoLG89VnQodCxpKSxhPTA7YTxpOysrYSlvW2FdLmFwcGx5KHIsbil9ZnVuY3Rpb24gR3QodCxlLHIsbil7dmFyIGksbyxhLHM7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHIpdGhyb3cgbmV3IFR5cGVFcnJvcignImxpc3RlbmVyIiBhcmd1bWVudCBtdXN0IGJlIGEgZnVuY3Rpb24nKTtpZigobz10Ll9ldmVudHMpPyhvLm5ld0xpc3RlbmVyJiYodC5lbWl0KCJuZXdMaXN0ZW5lciIsZSxyLmxpc3RlbmVyP3IubGlzdGVuZXI6ciksbz10Ll9ldmVudHMpLGE9b1tlXSk6KG89dC5fZXZlbnRzPW5ldyBCdCx0Ll9ldmVudHNDb3VudD0wKSxhKXtpZigiZnVuY3Rpb24iPT10eXBlb2YgYT9hPW9bZV09bj9bcixhXTpbYSxyXTpuP2EudW5zaGlmdChyKTphLnB1c2gociksIWEud2FybmVkJiYoaT1EdCh0KSkmJmk+MCYmYS5sZW5ndGg+aSl7YS53YXJuZWQ9ITA7dmFyIHU9bmV3IEVycm9yKCJQb3NzaWJsZSBFdmVudEVtaXR0ZXIgbWVtb3J5IGxlYWsgZGV0ZWN0ZWQuICIrYS5sZW5ndGgrIiAiK2UrIiBsaXN0ZW5lcnMgYWRkZWQuIFVzZSBlbWl0dGVyLnNldE1heExpc3RlbmVycygpIHRvIGluY3JlYXNlIGxpbWl0Iik7dS5uYW1lPSJNYXhMaXN0ZW5lcnNFeGNlZWRlZFdhcm5pbmciLHUuZW1pdHRlcj10LHUudHlwZT1lLHUuY291bnQ9YS5sZW5ndGgscz11LCJmdW5jdGlvbiI9PXR5cGVvZiBjb25zb2xlLndhcm4/Y29uc29sZS53YXJuKHMpOmNvbnNvbGUubG9nKHMpfX1lbHNlIGE9b1tlXT1yLCsrdC5fZXZlbnRzQ291bnQ7cmV0dXJuIHR9ZnVuY3Rpb24gJHQodCxlLHIpe3ZhciBuPSExO2Z1bmN0aW9uIGkoKXt0LnJlbW92ZUxpc3RlbmVyKGUsaSksbnx8KG49ITAsci5hcHBseSh0LGFyZ3VtZW50cykpfXJldHVybiBpLmxpc3RlbmVyPXIsaX1mdW5jdGlvbiBIdCh0KXt2YXIgZT10aGlzLl9ldmVudHM7aWYoZSl7dmFyIHI9ZVt0XTtpZigiZnVuY3Rpb24iPT10eXBlb2YgcilyZXR1cm4gMTtpZihyKXJldHVybiByLmxlbmd0aH1yZXR1cm4gMH1mdW5jdGlvbiBWdCh0LGUpe2Zvcih2YXIgcj1uZXcgQXJyYXkoZSk7ZS0tOylyW2VdPXRbZV07cmV0dXJuIHJ9QnQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUobnVsbCksVXQuRXZlbnRFbWl0dGVyPVV0LFV0LnVzaW5nRG9tYWlucz0hMSxVdC5wcm90b3R5cGUuZG9tYWluPXZvaWQgMCxVdC5wcm90b3R5cGUuX2V2ZW50cz12b2lkIDAsVXQucHJvdG90eXBlLl9tYXhMaXN0ZW5lcnM9dm9pZCAwLFV0LmRlZmF1bHRNYXhMaXN0ZW5lcnM9MTAsVXQuaW5pdD1mdW5jdGlvbigpe3RoaXMuZG9tYWluPW51bGwsVXQudXNpbmdEb21haW5zJiYodm9pZCAwKS5hY3RpdmUsdGhpcy5fZXZlbnRzJiZ0aGlzLl9ldmVudHMhPT1PYmplY3QuZ2V0UHJvdG90eXBlT2YodGhpcykuX2V2ZW50c3x8KHRoaXMuX2V2ZW50cz1uZXcgQnQsdGhpcy5fZXZlbnRzQ291bnQ9MCksdGhpcy5fbWF4TGlzdGVuZXJzPXRoaXMuX21heExpc3RlbmVyc3x8dm9pZCAwfSxVdC5wcm90b3R5cGUuc2V0TWF4TGlzdGVuZXJzPWZ1bmN0aW9uKHQpe2lmKCJudW1iZXIiIT10eXBlb2YgdHx8dDwwfHxpc05hTih0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCcibiIgYXJndW1lbnQgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlcicpO3JldHVybiB0aGlzLl9tYXhMaXN0ZW5lcnM9dCx0aGlzfSxVdC5wcm90b3R5cGUuZ2V0TWF4TGlzdGVuZXJzPWZ1bmN0aW9uKCl7cmV0dXJuIER0KHRoaXMpfSxVdC5wcm90b3R5cGUuZW1pdD1mdW5jdGlvbih0KXt2YXIgZSxyLG4saSxvLGEscyx1PSJlcnJvciI9PT10O2lmKGE9dGhpcy5fZXZlbnRzKXU9dSYmbnVsbD09YS5lcnJvcjtlbHNlIGlmKCF1KXJldHVybiExO2lmKHM9dGhpcy5kb21haW4sdSl7aWYoZT1hcmd1bWVudHNbMV0sIXMpe2lmKGUgaW5zdGFuY2VvZiBFcnJvcil0aHJvdyBlO3ZhciBmPW5ldyBFcnJvcignVW5jYXVnaHQsIHVuc3BlY2lmaWVkICJlcnJvciIgZXZlbnQuICgnK2UrIikiKTt0aHJvdyBmLmNvbnRleHQ9ZSxmfXJldHVybiBlfHwoZT1uZXcgRXJyb3IoJ1VuY2F1Z2h0LCB1bnNwZWNpZmllZCAiZXJyb3IiIGV2ZW50JykpLGUuZG9tYWluRW1pdHRlcj10aGlzLGUuZG9tYWluPXMsZS5kb21haW5UaHJvd249ITEscy5lbWl0KCJlcnJvciIsZSksITF9aWYoIShyPWFbdF0pKXJldHVybiExO3ZhciBjPSJmdW5jdGlvbiI9PXR5cGVvZiByO3N3aXRjaChuPWFyZ3VtZW50cy5sZW5ndGgpe2Nhc2UgMTpGdChyLGMsdGhpcyk7YnJlYWs7Y2FzZSAyOnF0KHIsYyx0aGlzLGFyZ3VtZW50c1sxXSk7YnJlYWs7Y2FzZSAzOnp0KHIsYyx0aGlzLGFyZ3VtZW50c1sxXSxhcmd1bWVudHNbMl0pO2JyZWFrO2Nhc2UgNDpXdChyLGMsdGhpcyxhcmd1bWVudHNbMV0sYXJndW1lbnRzWzJdLGFyZ3VtZW50c1szXSk7YnJlYWs7ZGVmYXVsdDpmb3IoaT1uZXcgQXJyYXkobi0xKSxvPTE7bzxuO28rKylpW28tMV09YXJndW1lbnRzW29dO1l0KHIsYyx0aGlzLGkpfXJldHVybiEwfSxVdC5wcm90b3R5cGUuYWRkTGlzdGVuZXI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gR3QodGhpcyx0LGUsITEpfSxVdC5wcm90b3R5cGUub249VXQucHJvdG90eXBlLmFkZExpc3RlbmVyLFV0LnByb3RvdHlwZS5wcmVwZW5kTGlzdGVuZXI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gR3QodGhpcyx0LGUsITApfSxVdC5wcm90b3R5cGUub25jZT1mdW5jdGlvbih0LGUpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoJyJsaXN0ZW5lciIgYXJndW1lbnQgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7cmV0dXJuIHRoaXMub24odCwkdCh0aGlzLHQsZSkpLHRoaXN9LFV0LnByb3RvdHlwZS5wcmVwZW5kT25jZUxpc3RlbmVyPWZ1bmN0aW9uKHQsZSl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcignImxpc3RlbmVyIiBhcmd1bWVudCBtdXN0IGJlIGEgZnVuY3Rpb24nKTtyZXR1cm4gdGhpcy5wcmVwZW5kTGlzdGVuZXIodCwkdCh0aGlzLHQsZSkpLHRoaXN9LFV0LnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lcj1mdW5jdGlvbih0LGUpe3ZhciByLG4saSxvLGE7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcignImxpc3RlbmVyIiBhcmd1bWVudCBtdXN0IGJlIGEgZnVuY3Rpb24nKTtpZighKG49dGhpcy5fZXZlbnRzKSlyZXR1cm4gdGhpcztpZighKHI9blt0XSkpcmV0dXJuIHRoaXM7aWYocj09PWV8fHIubGlzdGVuZXImJnIubGlzdGVuZXI9PT1lKTA9PS0tdGhpcy5fZXZlbnRzQ291bnQ/dGhpcy5fZXZlbnRzPW5ldyBCdDooZGVsZXRlIG5bdF0sbi5yZW1vdmVMaXN0ZW5lciYmdGhpcy5lbWl0KCJyZW1vdmVMaXN0ZW5lciIsdCxyLmxpc3RlbmVyfHxlKSk7ZWxzZSBpZigiZnVuY3Rpb24iIT10eXBlb2Ygcil7Zm9yKGk9LTEsbz1yLmxlbmd0aDtvLS0gPjA7KWlmKHJbb109PT1lfHxyW29dLmxpc3RlbmVyJiZyW29dLmxpc3RlbmVyPT09ZSl7YT1yW29dLmxpc3RlbmVyLGk9bzticmVha31pZihpPDApcmV0dXJuIHRoaXM7aWYoMT09PXIubGVuZ3RoKXtpZihyWzBdPXZvaWQgMCwwPT0tLXRoaXMuX2V2ZW50c0NvdW50KXJldHVybiB0aGlzLl9ldmVudHM9bmV3IEJ0LHRoaXM7ZGVsZXRlIG5bdF19ZWxzZSFmdW5jdGlvbih0LGUpe2Zvcih2YXIgcj1lLG49cisxLGk9dC5sZW5ndGg7bjxpO3IrPTEsbis9MSl0W3JdPXRbbl07dC5wb3AoKX0ocixpKTtuLnJlbW92ZUxpc3RlbmVyJiZ0aGlzLmVtaXQoInJlbW92ZUxpc3RlbmVyIix0LGF8fGUpfXJldHVybiB0aGlzfSxVdC5wcm90b3R5cGUucmVtb3ZlQWxsTGlzdGVuZXJzPWZ1bmN0aW9uKHQpe3ZhciBlLHI7aWYoIShyPXRoaXMuX2V2ZW50cykpcmV0dXJuIHRoaXM7aWYoIXIucmVtb3ZlTGlzdGVuZXIpcmV0dXJuIDA9PT1hcmd1bWVudHMubGVuZ3RoPyh0aGlzLl9ldmVudHM9bmV3IEJ0LHRoaXMuX2V2ZW50c0NvdW50PTApOnJbdF0mJigwPT0tLXRoaXMuX2V2ZW50c0NvdW50P3RoaXMuX2V2ZW50cz1uZXcgQnQ6ZGVsZXRlIHJbdF0pLHRoaXM7aWYoMD09PWFyZ3VtZW50cy5sZW5ndGgpe2Zvcih2YXIgbixpPU9iamVjdC5rZXlzKHIpLG89MDtvPGkubGVuZ3RoOysrbykicmVtb3ZlTGlzdGVuZXIiIT09KG49aVtvXSkmJnRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKG4pO3JldHVybiB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygicmVtb3ZlTGlzdGVuZXIiKSx0aGlzLl9ldmVudHM9bmV3IEJ0LHRoaXMuX2V2ZW50c0NvdW50PTAsdGhpc31pZigiZnVuY3Rpb24iPT10eXBlb2YoZT1yW3RdKSl0aGlzLnJlbW92ZUxpc3RlbmVyKHQsZSk7ZWxzZSBpZihlKWRve3RoaXMucmVtb3ZlTGlzdGVuZXIodCxlW2UubGVuZ3RoLTFdKX13aGlsZShlWzBdKTtyZXR1cm4gdGhpc30sVXQucHJvdG90eXBlLmxpc3RlbmVycz1mdW5jdGlvbih0KXt2YXIgZSxyPXRoaXMuX2V2ZW50cztyZXR1cm4gciYmKGU9clt0XSk/ImZ1bmN0aW9uIj09dHlwZW9mIGU/W2UubGlzdGVuZXJ8fGVdOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1uZXcgQXJyYXkodC5sZW5ndGgpLHI9MDtyPGUubGVuZ3RoOysrcillW3JdPXRbcl0ubGlzdGVuZXJ8fHRbcl07cmV0dXJuIGV9KGUpOltdfSxVdC5saXN0ZW5lckNvdW50PWZ1bmN0aW9uKHQsZSl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIHQubGlzdGVuZXJDb3VudD90Lmxpc3RlbmVyQ291bnQoZSk6SHQuY2FsbCh0LGUpfSxVdC5wcm90b3R5cGUubGlzdGVuZXJDb3VudD1IdCxVdC5wcm90b3R5cGUuZXZlbnROYW1lcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9ldmVudHNDb3VudD4wP1JlZmxlY3Qub3duS2V5cyh0aGlzLl9ldmVudHMpOltdfTt2YXIgSnQ9byhPYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxkZWZhdWx0OlV0LEV2ZW50RW1pdHRlcjpVdH0pKSxLdD1KdC5FdmVudEVtaXR0ZXIsWHQ9byh1dCksUXQ9YSgoZnVuY3Rpb24odCxlKXt2YXIgcj1YdC5CdWZmZXI7ZnVuY3Rpb24gbih0LGUpe2Zvcih2YXIgciBpbiB0KWVbcl09dFtyXX1mdW5jdGlvbiBpKHQsZSxuKXtyZXR1cm4gcih0LGUsbil9ci5mcm9tJiZyLmFsbG9jJiZyLmFsbG9jVW5zYWZlJiZyLmFsbG9jVW5zYWZlU2xvdz90LmV4cG9ydHM9WHQ6KG4oWHQsZSksZS5CdWZmZXI9aSksbihyLGkpLGkuZnJvbT1mdW5jdGlvbih0LGUsbil7aWYoIm51bWJlciI9PXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoIkFyZ3VtZW50IG11c3Qgbm90IGJlIGEgbnVtYmVyIik7cmV0dXJuIHIodCxlLG4pfSxpLmFsbG9jPWZ1bmN0aW9uKHQsZSxuKXtpZigibnVtYmVyIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcigiQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlciIpO3ZhciBpPXIodCk7cmV0dXJuIHZvaWQgMCE9PWU/InN0cmluZyI9PXR5cGVvZiBuP2kuZmlsbChlLG4pOmkuZmlsbChlKTppLmZpbGwoMCksaX0saS5hbGxvY1Vuc2FmZT1mdW5jdGlvbih0KXtpZigibnVtYmVyIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcigiQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlciIpO3JldHVybiByKHQpfSxpLmFsbG9jVW5zYWZlU2xvdz1mdW5jdGlvbih0KXtpZigibnVtYmVyIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcigiQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlciIpO3JldHVybiBYdC5TbG93QnVmZmVyKHQpfX0pKTtmdW5jdGlvbiBadCh0KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfXZhciB0ZT17aXNBcnJheTpmdW5jdGlvbih0KXtyZXR1cm4gQXJyYXkuaXNBcnJheT9BcnJheS5pc0FycmF5KHQpOiJbb2JqZWN0IEFycmF5XSI9PT1adCh0KX0saXNCb29sZWFuOmZ1bmN0aW9uKHQpe3JldHVybiJib29sZWFuIj09dHlwZW9mIHR9LGlzTnVsbDpmdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09PXR9LGlzTnVsbE9yVW5kZWZpbmVkOmZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT10fSxpc051bWJlcjpmdW5jdGlvbih0KXtyZXR1cm4ibnVtYmVyIj09dHlwZW9mIHR9LGlzU3RyaW5nOmZ1bmN0aW9uKHQpe3JldHVybiJzdHJpbmciPT10eXBlb2YgdH0saXNTeW1ib2w6ZnVuY3Rpb24odCl7cmV0dXJuInN5bWJvbCI9PT1uKHQpfSxpc1VuZGVmaW5lZDpmdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dH0saXNSZWdFeHA6ZnVuY3Rpb24odCl7cmV0dXJuIltvYmplY3QgUmVnRXhwXSI9PT1adCh0KX0saXNPYmplY3Q6ZnVuY3Rpb24odCl7cmV0dXJuIm9iamVjdCI9PT1uKHQpJiZudWxsIT09dH0saXNEYXRlOmZ1bmN0aW9uKHQpe3JldHVybiJbb2JqZWN0IERhdGVdIj09PVp0KHQpfSxpc0Vycm9yOmZ1bmN0aW9uKHQpe3JldHVybiJbb2JqZWN0IEVycm9yXSI9PT1adCh0KXx8dCBpbnN0YW5jZW9mIEVycm9yfSxpc0Z1bmN0aW9uOmZ1bmN0aW9uKHQpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiB0fSxpc1ByaW1pdGl2ZTpmdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09PXR8fCJib29sZWFuIj09dHlwZW9mIHR8fCJudW1iZXIiPT10eXBlb2YgdHx8InN0cmluZyI9PXR5cGVvZiB0fHwic3ltYm9sIj09PW4odCl8fHZvaWQgMD09PXR9LGlzQnVmZmVyOkUuaXNCdWZmZXJ9LGVlPWEoKGZ1bmN0aW9uKHQpeyJmdW5jdGlvbiI9PXR5cGVvZiBPYmplY3QuY3JlYXRlP3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpe2UmJih0LnN1cGVyXz1lLHQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZS5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTp0LGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pKX06dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7aWYoZSl7dC5zdXBlcl89ZTt2YXIgcj1mdW5jdGlvbigpe307ci5wcm90b3R5cGU9ZS5wcm90b3R5cGUsdC5wcm90b3R5cGU9bmV3IHIsdC5wcm90b3R5cGUuY29uc3RydWN0b3I9dH19fSkpLHJlPSJmdW5jdGlvbiI9PXR5cGVvZiBPYmplY3QuY3JlYXRlP2Z1bmN0aW9uKHQsZSl7dC5zdXBlcl89ZSx0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6dCxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KX06ZnVuY3Rpb24odCxlKXt0LnN1cGVyXz1lO3ZhciByPWZ1bmN0aW9uKCl7fTtyLnByb3RvdHlwZT1lLnByb3RvdHlwZSx0LnByb3RvdHlwZT1uZXcgcix0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj10fSxuZT0vJVtzZGolXS9nO2Z1bmN0aW9uIGllKHQpe2lmKCF3ZSh0KSl7Zm9yKHZhciBlPVtdLHI9MDtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKWUucHVzaChmZShhcmd1bWVudHNbcl0pKTtyZXR1cm4gZS5qb2luKCIgIil9cj0xO2Zvcih2YXIgbj1hcmd1bWVudHMsaT1uLmxlbmd0aCxvPVN0cmluZyh0KS5yZXBsYWNlKG5lLChmdW5jdGlvbih0KXtpZigiJSUiPT09dClyZXR1cm4iJSI7aWYocj49aSlyZXR1cm4gdDtzd2l0Y2godCl7Y2FzZSIlcyI6cmV0dXJuIFN0cmluZyhuW3IrK10pO2Nhc2UiJWQiOnJldHVybiBOdW1iZXIobltyKytdKTtjYXNlIiVqIjp0cnl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KG5bcisrXSl9Y2F0Y2godCl7cmV0dXJuIltDaXJjdWxhcl0ifWRlZmF1bHQ6cmV0dXJuIHR9fSkpLGE9bltyXTtyPGk7YT1uWysrcl0peWUoYSl8fCFrZShhKT9vKz0iICIrYTpvKz0iICIrZmUoYSk7cmV0dXJuIG99ZnVuY3Rpb24gb2UodCxlKXtpZihfZSh1LnByb2Nlc3MpKXJldHVybiBmdW5jdGlvbigpe3JldHVybiBvZSh0LGUpLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07aWYoITA9PT1DdC5ub0RlcHJlY2F0aW9uKXJldHVybiB0O3ZhciByPSExO3JldHVybiBmdW5jdGlvbigpe2lmKCFyKXtpZihDdC50aHJvd0RlcHJlY2F0aW9uKXRocm93IG5ldyBFcnJvcihlKTtDdC50cmFjZURlcHJlY2F0aW9uP2NvbnNvbGUudHJhY2UoZSk6Y29uc29sZS5lcnJvcihlKSxyPSEwfXJldHVybiB0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX19dmFyIGFlLHNlPXt9O2Z1bmN0aW9uIHVlKHQpe3JldHVybiBfZShhZSkmJihhZT1DdC5lbnYuTk9ERV9ERUJVR3x8IiIpLHQ9dC50b1VwcGVyQ2FzZSgpLHNlW3RdfHwobmV3IFJlZ0V4cCgiXFxiIit0KyJcXGIiLCJpIikudGVzdChhZSk/c2VbdF09ZnVuY3Rpb24oKXt2YXIgZT1pZS5hcHBseShudWxsLGFyZ3VtZW50cyk7Y29uc29sZS5lcnJvcigiJXMgJWQ6ICVzIix0LDAsZSl9OnNlW3RdPWZ1bmN0aW9uKCl7fSksc2VbdF19ZnVuY3Rpb24gZmUodCxlKXt2YXIgcj17c2VlbjpbXSxzdHlsaXplOmxlfTtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD49MyYmKHIuZGVwdGg9YXJndW1lbnRzWzJdKSxhcmd1bWVudHMubGVuZ3RoPj00JiYoci5jb2xvcnM9YXJndW1lbnRzWzNdKSx2ZShlKT9yLnNob3dIaWRkZW49ZTplJiZJZShyLGUpLF9lKHIuc2hvd0hpZGRlbikmJihyLnNob3dIaWRkZW49ITEpLF9lKHIuZGVwdGgpJiYoci5kZXB0aD0yKSxfZShyLmNvbG9ycykmJihyLmNvbG9ycz0hMSksX2Uoci5jdXN0b21JbnNwZWN0KSYmKHIuY3VzdG9tSW5zcGVjdD0hMCksci5jb2xvcnMmJihyLnN0eWxpemU9Y2UpLGhlKHIsdCxyLmRlcHRoKX1mdW5jdGlvbiBjZSh0LGUpe3ZhciByPWZlLnN0eWxlc1tlXTtyZXR1cm4gcj8iG1siK2ZlLmNvbG9yc1tyXVswXSsibSIrdCsiG1siK2ZlLmNvbG9yc1tyXVsxXSsibSI6dH1mdW5jdGlvbiBsZSh0LGUpe3JldHVybiB0fWZ1bmN0aW9uIGhlKHQsZSxyKXtpZih0LmN1c3RvbUluc3BlY3QmJmUmJk9lKGUuaW5zcGVjdCkmJmUuaW5zcGVjdCE9PWZlJiYoIWUuY29uc3RydWN0b3J8fGUuY29uc3RydWN0b3IucHJvdG90eXBlIT09ZSkpe3ZhciBuPWUuaW5zcGVjdChyLHQpO3JldHVybiB3ZShuKXx8KG49aGUodCxuLHIpKSxufXZhciBpPWZ1bmN0aW9uKHQsZSl7aWYoX2UoZSkpcmV0dXJuIHQuc3R5bGl6ZSgidW5kZWZpbmVkIiwidW5kZWZpbmVkIik7aWYod2UoZSkpe3ZhciByPSInIitKU09OLnN0cmluZ2lmeShlKS5yZXBsYWNlKC9eInwiJC9nLCIiKS5yZXBsYWNlKC8nL2csIlxcJyIpLnJlcGxhY2UoL1xcIi9nLCciJykrIiciO3JldHVybiB0LnN0eWxpemUociwic3RyaW5nIil9cmV0dXJuIG1lKGUpP3Quc3R5bGl6ZSgiIitlLCJudW1iZXIiKTp2ZShlKT90LnN0eWxpemUoIiIrZSwiYm9vbGVhbiIpOnllKGUpP3Quc3R5bGl6ZSgibnVsbCIsIm51bGwiKTp2b2lkIDB9KHQsZSk7aWYoaSlyZXR1cm4gaTt2YXIgbz1PYmplY3Qua2V5cyhlKSxhPWZ1bmN0aW9uKHQpe3ZhciBlPXt9O3JldHVybiB0LmZvckVhY2goKGZ1bmN0aW9uKHQscil7ZVt0XT0hMH0pKSxlfShvKTtpZih0LnNob3dIaWRkZW4mJihvPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGUpKSx4ZShlKSYmKG8uaW5kZXhPZigibWVzc2FnZSIpPj0wfHxvLmluZGV4T2YoImRlc2NyaXB0aW9uIik+PTApKXJldHVybiBkZShlKTtpZigwPT09by5sZW5ndGgpe2lmKE9lKGUpKXt2YXIgcz1lLm5hbWU/IjogIitlLm5hbWU6IiI7cmV0dXJuIHQuc3R5bGl6ZSgiW0Z1bmN0aW9uIitzKyJdIiwic3BlY2lhbCIpfWlmKEVlKGUpKXJldHVybiB0LnN0eWxpemUoUmVnRXhwLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpLCJyZWdleHAiKTtpZihSZShlKSlyZXR1cm4gdC5zdHlsaXplKERhdGUucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSksImRhdGUiKTtpZih4ZShlKSlyZXR1cm4gZGUoZSl9dmFyIHUsZj0iIixjPSExLGw9WyJ7IiwifSJdO3JldHVybiBnZShlKSYmKGM9ITAsbD1bIlsiLCJdIl0pLE9lKGUpJiYoZj0iIFtGdW5jdGlvbiIrKGUubmFtZT8iOiAiK2UubmFtZToiIikrIl0iKSxFZShlKSYmKGY9IiAiK1JlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKSksUmUoZSkmJihmPSIgIitEYXRlLnByb3RvdHlwZS50b1VUQ1N0cmluZy5jYWxsKGUpKSx4ZShlKSYmKGY9IiAiK2RlKGUpKSwwIT09by5sZW5ndGh8fGMmJjAhPWUubGVuZ3RoP3I8MD9FZShlKT90LnN0eWxpemUoUmVnRXhwLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpLCJyZWdleHAiKTp0LnN0eWxpemUoIltPYmplY3RdIiwic3BlY2lhbCIpOih0LnNlZW4ucHVzaChlKSx1PWM/ZnVuY3Rpb24odCxlLHIsbixpKXtmb3IodmFyIG89W10sYT0wLHM9ZS5sZW5ndGg7YTxzOysrYSlOZShlLFN0cmluZyhhKSk/by5wdXNoKHBlKHQsZSxyLG4sU3RyaW5nKGEpLCEwKSk6by5wdXNoKCIiKTtyZXR1cm4gaS5mb3JFYWNoKChmdW5jdGlvbihpKXtpLm1hdGNoKC9eXGQrJC8pfHxvLnB1c2gocGUodCxlLHIsbixpLCEwKSl9KSksb30odCxlLHIsYSxvKTpvLm1hcCgoZnVuY3Rpb24obil7cmV0dXJuIHBlKHQsZSxyLGEsbixjKX0pKSx0LnNlZW4ucG9wKCksZnVuY3Rpb24odCxlLHIpe3JldHVybiB0LnJlZHVjZSgoZnVuY3Rpb24odCxlKXtyZXR1cm4gZS5pbmRleE9mKCJcbiIpLHQrZS5yZXBsYWNlKC9cdTAwMWJcW1xkXGQ/bS9nLCIiKS5sZW5ndGgrMX0pLDApPjYwP3JbMF0rKCIiPT09ZT8iIjplKyJcbiAiKSsiICIrdC5qb2luKCIsXG4gICIpKyIgIityWzFdOnJbMF0rZSsiICIrdC5qb2luKCIsICIpKyIgIityWzFdfSh1LGYsbCkpOmxbMF0rZitsWzFdfWZ1bmN0aW9uIGRlKHQpe3JldHVybiJbIitFcnJvci5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSsiXSJ9ZnVuY3Rpb24gcGUodCxlLHIsbixpLG8pe3ZhciBhLHMsdTtpZigodT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsaSl8fHt2YWx1ZTplW2ldfSkuZ2V0P3M9dS5zZXQ/dC5zdHlsaXplKCJbR2V0dGVyL1NldHRlcl0iLCJzcGVjaWFsIik6dC5zdHlsaXplKCJbR2V0dGVyXSIsInNwZWNpYWwiKTp1LnNldCYmKHM9dC5zdHlsaXplKCJbU2V0dGVyXSIsInNwZWNpYWwiKSksTmUobixpKXx8KGE9IlsiK2krIl0iKSxzfHwodC5zZWVuLmluZGV4T2YodS52YWx1ZSk8MD8ocz15ZShyKT9oZSh0LHUudmFsdWUsbnVsbCk6aGUodCx1LnZhbHVlLHItMSkpLmluZGV4T2YoIlxuIik+LTEmJihzPW8/cy5zcGxpdCgiXG4iKS5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiIgICIrdH0pKS5qb2luKCJcbiIpLnN1YnN0cigyKToiXG4iK3Muc3BsaXQoIlxuIikubWFwKChmdW5jdGlvbih0KXtyZXR1cm4iICAgIit0fSkpLmpvaW4oIlxuIikpOnM9dC5zdHlsaXplKCJbQ2lyY3VsYXJdIiwic3BlY2lhbCIpKSxfZShhKSl7aWYobyYmaS5tYXRjaCgvXlxkKyQvKSlyZXR1cm4gczsoYT1KU09OLnN0cmluZ2lmeSgiIitpKSkubWF0Y2goL14iKFthLXpBLVpfXVthLXpBLVpfMC05XSopIiQvKT8oYT1hLnN1YnN0cigxLGEubGVuZ3RoLTIpLGE9dC5zdHlsaXplKGEsIm5hbWUiKSk6KGE9YS5yZXBsYWNlKC8nL2csIlxcJyIpLnJlcGxhY2UoL1xcIi9nLCciJykucmVwbGFjZSgvKF4ifCIkKS9nLCInIiksYT10LnN0eWxpemUoYSwic3RyaW5nIikpfXJldHVybiBhKyI6ICIrc31mdW5jdGlvbiBnZSh0KXtyZXR1cm4gQXJyYXkuaXNBcnJheSh0KX1mdW5jdGlvbiB2ZSh0KXtyZXR1cm4iYm9vbGVhbiI9PXR5cGVvZiB0fWZ1bmN0aW9uIHllKHQpe3JldHVybiBudWxsPT09dH1mdW5jdGlvbiBiZSh0KXtyZXR1cm4gbnVsbD09dH1mdW5jdGlvbiBtZSh0KXtyZXR1cm4ibnVtYmVyIj09dHlwZW9mIHR9ZnVuY3Rpb24gd2UodCl7cmV0dXJuInN0cmluZyI9PXR5cGVvZiB0fWZ1bmN0aW9uIFNlKHQpe3JldHVybiJzeW1ib2wiPT09bih0KX1mdW5jdGlvbiBfZSh0KXtyZXR1cm4gdm9pZCAwPT09dH1mdW5jdGlvbiBFZSh0KXtyZXR1cm4ga2UodCkmJiJbb2JqZWN0IFJlZ0V4cF0iPT09QWUodCl9ZnVuY3Rpb24ga2UodCl7cmV0dXJuIm9iamVjdCI9PT1uKHQpJiZudWxsIT09dH1mdW5jdGlvbiBSZSh0KXtyZXR1cm4ga2UodCkmJiJbb2JqZWN0IERhdGVdIj09PUFlKHQpfWZ1bmN0aW9uIHhlKHQpe3JldHVybiBrZSh0KSYmKCJbb2JqZWN0IEVycm9yXSI9PT1BZSh0KXx8dCBpbnN0YW5jZW9mIEVycm9yKX1mdW5jdGlvbiBPZSh0KXtyZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgdH1mdW5jdGlvbiBqZSh0KXtyZXR1cm4gbnVsbD09PXR8fCJib29sZWFuIj09dHlwZW9mIHR8fCJudW1iZXIiPT10eXBlb2YgdHx8InN0cmluZyI9PXR5cGVvZiB0fHwic3ltYm9sIj09PW4odCl8fHZvaWQgMD09PXR9ZnVuY3Rpb24gVGUodCl7cmV0dXJuIEUuaXNCdWZmZXIodCl9ZnVuY3Rpb24gQWUodCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KX1mdW5jdGlvbiBMZSh0KXtyZXR1cm4gdDwxMD8iMCIrdC50b1N0cmluZygxMCk6dC50b1N0cmluZygxMCl9ZmUuY29sb3JzPXtib2xkOlsxLDIyXSxpdGFsaWM6WzMsMjNdLHVuZGVybGluZTpbNCwyNF0saW52ZXJzZTpbNywyN10sd2hpdGU6WzM3LDM5XSxncmV5Ols5MCwzOV0sYmxhY2s6WzMwLDM5XSxibHVlOlszNCwzOV0sY3lhbjpbMzYsMzldLGdyZWVuOlszMiwzOV0sbWFnZW50YTpbMzUsMzldLHJlZDpbMzEsMzldLHllbGxvdzpbMzMsMzldfSxmZS5zdHlsZXM9e3NwZWNpYWw6ImN5YW4iLG51bWJlcjoieWVsbG93Iixib29sZWFuOiJ5ZWxsb3ciLHVuZGVmaW5lZDoiZ3JleSIsbnVsbDoiYm9sZCIsc3RyaW5nOiJncmVlbiIsZGF0ZToibWFnZW50YSIscmVnZXhwOiJyZWQifTt2YXIgTWU9WyJKYW4iLCJGZWIiLCJNYXIiLCJBcHIiLCJNYXkiLCJKdW4iLCJKdWwiLCJBdWciLCJTZXAiLCJPY3QiLCJOb3YiLCJEZWMiXTtmdW5jdGlvbiBDZSgpe3ZhciB0PW5ldyBEYXRlLGU9W0xlKHQuZ2V0SG91cnMoKSksTGUodC5nZXRNaW51dGVzKCkpLExlKHQuZ2V0U2Vjb25kcygpKV0uam9pbigiOiIpO3JldHVyblt0LmdldERhdGUoKSxNZVt0LmdldE1vbnRoKCldLGVdLmpvaW4oIiAiKX1mdW5jdGlvbiBQZSgpe2NvbnNvbGUubG9nKCIlcyAtICVzIixDZSgpLGllLmFwcGx5KG51bGwsYXJndW1lbnRzKSl9ZnVuY3Rpb24gSWUodCxlKXtpZighZXx8IWtlKGUpKXJldHVybiB0O2Zvcih2YXIgcj1PYmplY3Qua2V5cyhlKSxuPXIubGVuZ3RoO24tLTspdFtyW25dXT1lW3Jbbl1dO3JldHVybiB0fWZ1bmN0aW9uIE5lKHQsZSl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpfXZhciBCZT17aW5oZXJpdHM6cmUsX2V4dGVuZDpJZSxsb2c6UGUsaXNCdWZmZXI6VGUsaXNQcmltaXRpdmU6amUsaXNGdW5jdGlvbjpPZSxpc0Vycm9yOnhlLGlzRGF0ZTpSZSxpc09iamVjdDprZSxpc1JlZ0V4cDpFZSxpc1VuZGVmaW5lZDpfZSxpc1N5bWJvbDpTZSxpc1N0cmluZzp3ZSxpc051bWJlcjptZSxpc051bGxPclVuZGVmaW5lZDpiZSxpc051bGw6eWUsaXNCb29sZWFuOnZlLGlzQXJyYXk6Z2UsaW5zcGVjdDpmZSxkZXByZWNhdGU6b2UsZm9ybWF0OmllLGRlYnVnbG9nOnVlfSxVZT1vKE9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGZvcm1hdDppZSxkZXByZWNhdGU6b2UsZGVidWdsb2c6dWUsaW5zcGVjdDpmZSxpc0FycmF5OmdlLGlzQm9vbGVhbjp2ZSxpc051bGw6eWUsaXNOdWxsT3JVbmRlZmluZWQ6YmUsaXNOdW1iZXI6bWUsaXNTdHJpbmc6d2UsaXNTeW1ib2w6U2UsaXNVbmRlZmluZWQ6X2UsaXNSZWdFeHA6RWUsaXNPYmplY3Q6a2UsaXNEYXRlOlJlLGlzRXJyb3I6eGUsaXNGdW5jdGlvbjpPZSxpc1ByaW1pdGl2ZTpqZSxpc0J1ZmZlcjpUZSxsb2c6UGUsaW5oZXJpdHM6cmUsX2V4dGVuZDpJZSxkZWZhdWx0OkJlfSkpLERlPWEoKGZ1bmN0aW9uKHQpe3ZhciBlPVF0LkJ1ZmZlcjt0LmV4cG9ydHM9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7IWZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIil9KHRoaXMsdCksdGhpcy5oZWFkPW51bGwsdGhpcy50YWlsPW51bGwsdGhpcy5sZW5ndGg9MH1yZXR1cm4gdC5wcm90b3R5cGUucHVzaD1mdW5jdGlvbih0KXt2YXIgZT17ZGF0YTp0LG5leHQ6bnVsbH07dGhpcy5sZW5ndGg+MD90aGlzLnRhaWwubmV4dD1lOnRoaXMuaGVhZD1lLHRoaXMudGFpbD1lLCsrdGhpcy5sZW5ndGh9LHQucHJvdG90eXBlLnVuc2hpZnQ9ZnVuY3Rpb24odCl7dmFyIGU9e2RhdGE6dCxuZXh0OnRoaXMuaGVhZH07MD09PXRoaXMubGVuZ3RoJiYodGhpcy50YWlsPWUpLHRoaXMuaGVhZD1lLCsrdGhpcy5sZW5ndGh9LHQucHJvdG90eXBlLnNoaWZ0PWZ1bmN0aW9uKCl7aWYoMCE9PXRoaXMubGVuZ3RoKXt2YXIgdD10aGlzLmhlYWQuZGF0YTtyZXR1cm4gMT09PXRoaXMubGVuZ3RoP3RoaXMuaGVhZD10aGlzLnRhaWw9bnVsbDp0aGlzLmhlYWQ9dGhpcy5oZWFkLm5leHQsLS10aGlzLmxlbmd0aCx0fX0sdC5wcm90b3R5cGUuY2xlYXI9ZnVuY3Rpb24oKXt0aGlzLmhlYWQ9dGhpcy50YWlsPW51bGwsdGhpcy5sZW5ndGg9MH0sdC5wcm90b3R5cGUuam9pbj1mdW5jdGlvbih0KXtpZigwPT09dGhpcy5sZW5ndGgpcmV0dXJuIiI7Zm9yKHZhciBlPXRoaXMuaGVhZCxyPSIiK2UuZGF0YTtlPWUubmV4dDspcis9dCtlLmRhdGE7cmV0dXJuIHJ9LHQucHJvdG90eXBlLmNvbmNhdD1mdW5jdGlvbih0KXtpZigwPT09dGhpcy5sZW5ndGgpcmV0dXJuIGUuYWxsb2MoMCk7aWYoMT09PXRoaXMubGVuZ3RoKXJldHVybiB0aGlzLmhlYWQuZGF0YTtmb3IodmFyIHIsbixpPWUuYWxsb2NVbnNhZmUodD4+PjApLG89dGhpcy5oZWFkLGE9MDtvOylyPWksbj1hLG8uZGF0YS5jb3B5KHIsbiksYSs9by5kYXRhLmxlbmd0aCxvPW8ubmV4dDtyZXR1cm4gaX0sdH0oKSxVZSYmVWUuaW5zcGVjdCYmVWUuaW5zcGVjdC5jdXN0b20mJih0LmV4cG9ydHMucHJvdG90eXBlW1VlLmluc3BlY3QuY3VzdG9tXT1mdW5jdGlvbigpe3ZhciB0PVVlLmluc3BlY3Qoe2xlbmd0aDp0aGlzLmxlbmd0aH0pO3JldHVybiB0aGlzLmNvbnN0cnVjdG9yLm5hbWUrIiAiK3R9KX0pKTtmdW5jdGlvbiBGZSh0LGUpe3QuZW1pdCgiZXJyb3IiLGUpfXZhciBxZT1mdW5jdGlvbih0LGUpe3ZhciByPXRoaXMsbj10aGlzLl9yZWFkYWJsZVN0YXRlJiZ0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCxpPXRoaXMuX3dyaXRhYmxlU3RhdGUmJnRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkO3JldHVybiBufHxpPyhlP2UodCk6IXR8fHRoaXMuX3dyaXRhYmxlU3RhdGUmJnRoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkfHxQdC5uZXh0VGljayhGZSx0aGlzLHQpLHRoaXMpOih0aGlzLl9yZWFkYWJsZVN0YXRlJiYodGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQ9ITApLHRoaXMuX3dyaXRhYmxlU3RhdGUmJih0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZD0hMCksdGhpcy5fZGVzdHJveSh0fHxudWxsLChmdW5jdGlvbih0KXshZSYmdD8oUHQubmV4dFRpY2soRmUscix0KSxyLl93cml0YWJsZVN0YXRlJiYoci5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQ9ITApKTplJiZlKHQpfSkpLHRoaXMpfSx6ZT1mdW5jdGlvbigpe3RoaXMuX3JlYWRhYmxlU3RhdGUmJih0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZD0hMSx0aGlzLl9yZWFkYWJsZVN0YXRlLnJlYWRpbmc9ITEsdGhpcy5fcmVhZGFibGVTdGF0ZS5lbmRlZD0hMSx0aGlzLl9yZWFkYWJsZVN0YXRlLmVuZEVtaXR0ZWQ9ITEpLHRoaXMuX3dyaXRhYmxlU3RhdGUmJih0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZD0hMSx0aGlzLl93cml0YWJsZVN0YXRlLmVuZGVkPSExLHRoaXMuX3dyaXRhYmxlU3RhdGUuZW5kaW5nPSExLHRoaXMuX3dyaXRhYmxlU3RhdGUuZmluaXNoZWQ9ITEsdGhpcy5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQ9ITEpfSxXZT1mdW5jdGlvbih0LGUpe2lmKFllKCJub0RlcHJlY2F0aW9uIikpcmV0dXJuIHQ7dmFyIHI9ITE7cmV0dXJuIGZ1bmN0aW9uKCl7aWYoIXIpe2lmKFllKCJ0aHJvd0RlcHJlY2F0aW9uIikpdGhyb3cgbmV3IEVycm9yKGUpO1llKCJ0cmFjZURlcHJlY2F0aW9uIik/Y29uc29sZS50cmFjZShlKTpjb25zb2xlLndhcm4oZSkscj0hMH1yZXR1cm4gdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fTtmdW5jdGlvbiBZZSh0KXt0cnl7aWYoIWkubG9jYWxTdG9yYWdlKXJldHVybiExfWNhdGNoKHQpe3JldHVybiExfXZhciBlPWkubG9jYWxTdG9yYWdlW3RdO3JldHVybiBudWxsIT1lJiYidHJ1ZSI9PT1TdHJpbmcoZSkudG9Mb3dlckNhc2UoKX12YXIgR2U9cnI7ZnVuY3Rpb24gJGUodCl7dmFyIGU9dGhpczt0aGlzLm5leHQ9bnVsbCx0aGlzLmVudHJ5PW51bGwsdGhpcy5maW5pc2g9ZnVuY3Rpb24oKXshZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQuZW50cnk7Zm9yKHQuZW50cnk9bnVsbDtuOyl7dmFyIGk9bi5jYWxsYmFjaztlLnBlbmRpbmdjYi0tLGkociksbj1uLm5leHR9ZS5jb3JrZWRSZXF1ZXN0c0ZyZWU/ZS5jb3JrZWRSZXF1ZXN0c0ZyZWUubmV4dD10OmUuY29ya2VkUmVxdWVzdHNGcmVlPXR9KGUsdCl9fXZhciBIZSxWZT0hQ3QuYnJvd3NlciYmWyJ2MC4xMCIsInYwLjkuIl0uaW5kZXhPZihDdC52ZXJzaW9uLnNsaWNlKDAsNSkpPi0xP3NldEltbWVkaWF0ZTpQdC5uZXh0VGljaztyci5Xcml0YWJsZVN0YXRlPWVyO3ZhciBKZT1PYmplY3QuY3JlYXRlKHRlKTtKZS5pbmhlcml0cz1lZTt2YXIgS2UsWGU9e2RlcHJlY2F0ZTpXZX0sUWU9UXQuQnVmZmVyLFplPWkuVWludDhBcnJheXx8ZnVuY3Rpb24oKXt9O2Z1bmN0aW9uIHRyKCl7fWZ1bmN0aW9uIGVyKHQsZSl7dD10fHx7fTt2YXIgcj1lIGluc3RhbmNlb2YoSGU9SGV8fGNyKTt0aGlzLm9iamVjdE1vZGU9ISF0Lm9iamVjdE1vZGUsciYmKHRoaXMub2JqZWN0TW9kZT10aGlzLm9iamVjdE1vZGV8fCEhdC53cml0YWJsZU9iamVjdE1vZGUpO3ZhciBuPXQuaGlnaFdhdGVyTWFyayxpPXQud3JpdGFibGVIaWdoV2F0ZXJNYXJrLG89dGhpcy5vYmplY3RNb2RlPzE2OjE2Mzg0O3RoaXMuaGlnaFdhdGVyTWFyaz1ufHwwPT09bj9uOnImJihpfHwwPT09aSk/aTpvLHRoaXMuaGlnaFdhdGVyTWFyaz1NYXRoLmZsb29yKHRoaXMuaGlnaFdhdGVyTWFyayksdGhpcy5maW5hbENhbGxlZD0hMSx0aGlzLm5lZWREcmFpbj0hMSx0aGlzLmVuZGluZz0hMSx0aGlzLmVuZGVkPSExLHRoaXMuZmluaXNoZWQ9ITEsdGhpcy5kZXN0cm95ZWQ9ITE7dmFyIGE9ITE9PT10LmRlY29kZVN0cmluZ3M7dGhpcy5kZWNvZGVTdHJpbmdzPSFhLHRoaXMuZGVmYXVsdEVuY29kaW5nPXQuZGVmYXVsdEVuY29kaW5nfHwidXRmOCIsdGhpcy5sZW5ndGg9MCx0aGlzLndyaXRpbmc9ITEsdGhpcy5jb3JrZWQ9MCx0aGlzLnN5bmM9ITAsdGhpcy5idWZmZXJQcm9jZXNzaW5nPSExLHRoaXMub253cml0ZT1mdW5jdGlvbih0KXshZnVuY3Rpb24odCxlKXt2YXIgcj10Ll93cml0YWJsZVN0YXRlLG49ci5zeW5jLGk9ci53cml0ZWNiO2lmKGZ1bmN0aW9uKHQpe3Qud3JpdGluZz0hMSx0LndyaXRlY2I9bnVsbCx0Lmxlbmd0aC09dC53cml0ZWxlbix0LndyaXRlbGVuPTB9KHIpLGUpIWZ1bmN0aW9uKHQsZSxyLG4saSl7LS1lLnBlbmRpbmdjYixyPyhQdC5uZXh0VGljayhpLG4pLFB0Lm5leHRUaWNrKHVyLHQsZSksdC5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQ9ITAsdC5lbWl0KCJlcnJvciIsbikpOihpKG4pLHQuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkPSEwLHQuZW1pdCgiZXJyb3IiLG4pLHVyKHQsZSkpfSh0LHIsbixlLGkpO2Vsc2V7dmFyIG89YXIocik7b3x8ci5jb3JrZWR8fHIuYnVmZmVyUHJvY2Vzc2luZ3x8IXIuYnVmZmVyZWRSZXF1ZXN0fHxvcih0LHIpLG4/VmUoaXIsdCxyLG8saSk6aXIodCxyLG8saSl9fShlLHQpfSx0aGlzLndyaXRlY2I9bnVsbCx0aGlzLndyaXRlbGVuPTAsdGhpcy5idWZmZXJlZFJlcXVlc3Q9bnVsbCx0aGlzLmxhc3RCdWZmZXJlZFJlcXVlc3Q9bnVsbCx0aGlzLnBlbmRpbmdjYj0wLHRoaXMucHJlZmluaXNoZWQ9ITEsdGhpcy5lcnJvckVtaXR0ZWQ9ITEsdGhpcy5idWZmZXJlZFJlcXVlc3RDb3VudD0wLHRoaXMuY29ya2VkUmVxdWVzdHNGcmVlPW5ldyAkZSh0aGlzKX1mdW5jdGlvbiBycih0KXtpZihIZT1IZXx8Y3IsIShLZS5jYWxsKHJyLHRoaXMpfHx0aGlzIGluc3RhbmNlb2YgSGUpKXJldHVybiBuZXcgcnIodCk7dGhpcy5fd3JpdGFibGVTdGF0ZT1uZXcgZXIodCx0aGlzKSx0aGlzLndyaXRhYmxlPSEwLHQmJigiZnVuY3Rpb24iPT10eXBlb2YgdC53cml0ZSYmKHRoaXMuX3dyaXRlPXQud3JpdGUpLCJmdW5jdGlvbiI9PXR5cGVvZiB0LndyaXRldiYmKHRoaXMuX3dyaXRldj10LndyaXRldiksImZ1bmN0aW9uIj09dHlwZW9mIHQuZGVzdHJveSYmKHRoaXMuX2Rlc3Ryb3k9dC5kZXN0cm95KSwiZnVuY3Rpb24iPT10eXBlb2YgdC5maW5hbCYmKHRoaXMuX2ZpbmFsPXQuZmluYWwpKSxLdC5jYWxsKHRoaXMpfWZ1bmN0aW9uIG5yKHQsZSxyLG4saSxvLGEpe2Uud3JpdGVsZW49bixlLndyaXRlY2I9YSxlLndyaXRpbmc9ITAsZS5zeW5jPSEwLHI/dC5fd3JpdGV2KGksZS5vbndyaXRlKTp0Ll93cml0ZShpLG8sZS5vbndyaXRlKSxlLnN5bmM9ITF9ZnVuY3Rpb24gaXIodCxlLHIsbil7cnx8ZnVuY3Rpb24odCxlKXswPT09ZS5sZW5ndGgmJmUubmVlZERyYWluJiYoZS5uZWVkRHJhaW49ITEsdC5lbWl0KCJkcmFpbiIpKX0odCxlKSxlLnBlbmRpbmdjYi0tLG4oKSx1cih0LGUpfWZ1bmN0aW9uIG9yKHQsZSl7ZS5idWZmZXJQcm9jZXNzaW5nPSEwO3ZhciByPWUuYnVmZmVyZWRSZXF1ZXN0O2lmKHQuX3dyaXRldiYmciYmci5uZXh0KXt2YXIgbj1lLmJ1ZmZlcmVkUmVxdWVzdENvdW50LGk9bmV3IEFycmF5KG4pLG89ZS5jb3JrZWRSZXF1ZXN0c0ZyZWU7by5lbnRyeT1yO2Zvcih2YXIgYT0wLHM9ITA7cjspaVthXT1yLHIuaXNCdWZ8fChzPSExKSxyPXIubmV4dCxhKz0xO2kuYWxsQnVmZmVycz1zLG5yKHQsZSwhMCxlLmxlbmd0aCxpLCIiLG8uZmluaXNoKSxlLnBlbmRpbmdjYisrLGUubGFzdEJ1ZmZlcmVkUmVxdWVzdD1udWxsLG8ubmV4dD8oZS5jb3JrZWRSZXF1ZXN0c0ZyZWU9by5uZXh0LG8ubmV4dD1udWxsKTplLmNvcmtlZFJlcXVlc3RzRnJlZT1uZXcgJGUoZSksZS5idWZmZXJlZFJlcXVlc3RDb3VudD0wfWVsc2V7Zm9yKDtyOyl7dmFyIHU9ci5jaHVuayxmPXIuZW5jb2RpbmcsYz1yLmNhbGxiYWNrO2lmKG5yKHQsZSwhMSxlLm9iamVjdE1vZGU/MTp1Lmxlbmd0aCx1LGYsYykscj1yLm5leHQsZS5idWZmZXJlZFJlcXVlc3RDb3VudC0tLGUud3JpdGluZylicmVha31udWxsPT09ciYmKGUubGFzdEJ1ZmZlcmVkUmVxdWVzdD1udWxsKX1lLmJ1ZmZlcmVkUmVxdWVzdD1yLGUuYnVmZmVyUHJvY2Vzc2luZz0hMX1mdW5jdGlvbiBhcih0KXtyZXR1cm4gdC5lbmRpbmcmJjA9PT10Lmxlbmd0aCYmbnVsbD09PXQuYnVmZmVyZWRSZXF1ZXN0JiYhdC5maW5pc2hlZCYmIXQud3JpdGluZ31mdW5jdGlvbiBzcih0LGUpe3QuX2ZpbmFsKChmdW5jdGlvbihyKXtlLnBlbmRpbmdjYi0tLHImJnQuZW1pdCgiZXJyb3IiLHIpLGUucHJlZmluaXNoZWQ9ITAsdC5lbWl0KCJwcmVmaW5pc2giKSx1cih0LGUpfSkpfWZ1bmN0aW9uIHVyKHQsZSl7dmFyIHI9YXIoZSk7cmV0dXJuIHImJihmdW5jdGlvbih0LGUpe2UucHJlZmluaXNoZWR8fGUuZmluYWxDYWxsZWR8fCgiZnVuY3Rpb24iPT10eXBlb2YgdC5fZmluYWw/KGUucGVuZGluZ2NiKyssZS5maW5hbENhbGxlZD0hMCxQdC5uZXh0VGljayhzcix0LGUpKTooZS5wcmVmaW5pc2hlZD0hMCx0LmVtaXQoInByZWZpbmlzaCIpKSl9KHQsZSksMD09PWUucGVuZGluZ2NiJiYoZS5maW5pc2hlZD0hMCx0LmVtaXQoImZpbmlzaCIpKSkscn1KZS5pbmhlcml0cyhycixLdCksZXIucHJvdG90eXBlLmdldEJ1ZmZlcj1mdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLmJ1ZmZlcmVkUmVxdWVzdCxlPVtdO3Q7KWUucHVzaCh0KSx0PXQubmV4dDtyZXR1cm4gZX0sZnVuY3Rpb24oKXt0cnl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGVyLnByb3RvdHlwZSwiYnVmZmVyIix7Z2V0OlhlLmRlcHJlY2F0ZSgoZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRCdWZmZXIoKX0pLCJfd3JpdGFibGVTdGF0ZS5idWZmZXIgaXMgZGVwcmVjYXRlZC4gVXNlIF93cml0YWJsZVN0YXRlLmdldEJ1ZmZlciBpbnN0ZWFkLiIsIkRFUDAwMDMiKX0pfWNhdGNoKHQpe319KCksImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmhhc0luc3RhbmNlJiYiZnVuY3Rpb24iPT10eXBlb2YgRnVuY3Rpb24ucHJvdG90eXBlW1N5bWJvbC5oYXNJbnN0YW5jZV0/KEtlPUZ1bmN0aW9uLnByb3RvdHlwZVtTeW1ib2wuaGFzSW5zdGFuY2VdLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShycixTeW1ib2wuaGFzSW5zdGFuY2Use3ZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiEhS2UuY2FsbCh0aGlzLHQpfHx0aGlzPT09cnImJnQmJnQuX3dyaXRhYmxlU3RhdGUgaW5zdGFuY2VvZiBlcn19KSk6S2U9ZnVuY3Rpb24odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiB0aGlzfSxyci5wcm90b3R5cGUucGlwZT1mdW5jdGlvbigpe3RoaXMuZW1pdCgiZXJyb3IiLG5ldyBFcnJvcigiQ2Fubm90IHBpcGUsIG5vdCByZWFkYWJsZSIpKX0scnIucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKHQsZSxyKXt2YXIgbj10aGlzLl93cml0YWJsZVN0YXRlLGk9ITEsbz0hbi5vYmplY3RNb2RlJiZmdW5jdGlvbih0KXtyZXR1cm4gUWUuaXNCdWZmZXIodCl8fHQgaW5zdGFuY2VvZiBaZX0odCk7cmV0dXJuIG8mJiFRZS5pc0J1ZmZlcih0KSYmKHQ9ZnVuY3Rpb24odCl7cmV0dXJuIFFlLmZyb20odCl9KHQpKSwiZnVuY3Rpb24iPT10eXBlb2YgZSYmKHI9ZSxlPW51bGwpLG8/ZT0iYnVmZmVyIjplfHwoZT1uLmRlZmF1bHRFbmNvZGluZyksImZ1bmN0aW9uIiE9dHlwZW9mIHImJihyPXRyKSxuLmVuZGVkP2Z1bmN0aW9uKHQsZSl7dmFyIHI9bmV3IEVycm9yKCJ3cml0ZSBhZnRlciBlbmQiKTt0LmVtaXQoImVycm9yIixyKSxQdC5uZXh0VGljayhlLHIpfSh0aGlzLHIpOihvfHxmdW5jdGlvbih0LGUscixuKXt2YXIgaT0hMCxvPSExO3JldHVybiBudWxsPT09cj9vPW5ldyBUeXBlRXJyb3IoIk1heSBub3Qgd3JpdGUgbnVsbCB2YWx1ZXMgdG8gc3RyZWFtIik6InN0cmluZyI9PXR5cGVvZiByfHx2b2lkIDA9PT1yfHxlLm9iamVjdE1vZGV8fChvPW5ldyBUeXBlRXJyb3IoIkludmFsaWQgbm9uLXN0cmluZy9idWZmZXIgY2h1bmsiKSksbyYmKHQuZW1pdCgiZXJyb3IiLG8pLFB0Lm5leHRUaWNrKG4sbyksaT0hMSksaX0odGhpcyxuLHQscikpJiYobi5wZW5kaW5nY2IrKyxpPWZ1bmN0aW9uKHQsZSxyLG4saSxvKXtpZighcil7dmFyIGE9ZnVuY3Rpb24odCxlLHIpe3JldHVybiB0Lm9iamVjdE1vZGV8fCExPT09dC5kZWNvZGVTdHJpbmdzfHwic3RyaW5nIiE9dHlwZW9mIGV8fChlPVFlLmZyb20oZSxyKSksZX0oZSxuLGkpO24hPT1hJiYocj0hMCxpPSJidWZmZXIiLG49YSl9dmFyIHM9ZS5vYmplY3RNb2RlPzE6bi5sZW5ndGg7ZS5sZW5ndGgrPXM7dmFyIHU9ZS5sZW5ndGg8ZS5oaWdoV2F0ZXJNYXJrO2lmKHV8fChlLm5lZWREcmFpbj0hMCksZS53cml0aW5nfHxlLmNvcmtlZCl7dmFyIGY9ZS5sYXN0QnVmZmVyZWRSZXF1ZXN0O2UubGFzdEJ1ZmZlcmVkUmVxdWVzdD17Y2h1bms6bixlbmNvZGluZzppLGlzQnVmOnIsY2FsbGJhY2s6byxuZXh0Om51bGx9LGY/Zi5uZXh0PWUubGFzdEJ1ZmZlcmVkUmVxdWVzdDplLmJ1ZmZlcmVkUmVxdWVzdD1lLmxhc3RCdWZmZXJlZFJlcXVlc3QsZS5idWZmZXJlZFJlcXVlc3RDb3VudCs9MX1lbHNlIG5yKHQsZSwhMSxzLG4saSxvKTtyZXR1cm4gdX0odGhpcyxuLG8sdCxlLHIpKSxpfSxyci5wcm90b3R5cGUuY29yaz1mdW5jdGlvbigpe3RoaXMuX3dyaXRhYmxlU3RhdGUuY29ya2VkKyt9LHJyLnByb3RvdHlwZS51bmNvcms9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl93cml0YWJsZVN0YXRlO3QuY29ya2VkJiYodC5jb3JrZWQtLSx0LndyaXRpbmd8fHQuY29ya2VkfHx0LmZpbmlzaGVkfHx0LmJ1ZmZlclByb2Nlc3Npbmd8fCF0LmJ1ZmZlcmVkUmVxdWVzdHx8b3IodGhpcyx0KSl9LHJyLnByb3RvdHlwZS5zZXREZWZhdWx0RW5jb2Rpbmc9ZnVuY3Rpb24odCl7aWYoInN0cmluZyI9PXR5cGVvZiB0JiYodD10LnRvTG93ZXJDYXNlKCkpLCEoWyJoZXgiLCJ1dGY4IiwidXRmLTgiLCJhc2NpaSIsImJpbmFyeSIsImJhc2U2NCIsInVjczIiLCJ1Y3MtMiIsInV0ZjE2bGUiLCJ1dGYtMTZsZSIsInJhdyJdLmluZGV4T2YoKHQrIiIpLnRvTG93ZXJDYXNlKCkpPi0xKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJVbmtub3duIGVuY29kaW5nOiAiK3QpO3JldHVybiB0aGlzLl93cml0YWJsZVN0YXRlLmRlZmF1bHRFbmNvZGluZz10LHRoaXN9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyci5wcm90b3R5cGUsIndyaXRhYmxlSGlnaFdhdGVyTWFyayIse2VudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUuaGlnaFdhdGVyTWFya319KSxyci5wcm90b3R5cGUuX3dyaXRlPWZ1bmN0aW9uKHQsZSxyKXtyKG5ldyBFcnJvcigiX3dyaXRlKCkgaXMgbm90IGltcGxlbWVudGVkIikpfSxyci5wcm90b3R5cGUuX3dyaXRldj1udWxsLHJyLnByb3RvdHlwZS5lbmQ9ZnVuY3Rpb24odCxlLHIpe3ZhciBuPXRoaXMuX3dyaXRhYmxlU3RhdGU7ImZ1bmN0aW9uIj09dHlwZW9mIHQ/KHI9dCx0PW51bGwsZT1udWxsKToiZnVuY3Rpb24iPT10eXBlb2YgZSYmKHI9ZSxlPW51bGwpLG51bGwhPXQmJnRoaXMud3JpdGUodCxlKSxuLmNvcmtlZCYmKG4uY29ya2VkPTEsdGhpcy51bmNvcmsoKSksbi5lbmRpbmd8fG4uZmluaXNoZWR8fGZ1bmN0aW9uKHQsZSxyKXtlLmVuZGluZz0hMCx1cih0LGUpLHImJihlLmZpbmlzaGVkP1B0Lm5leHRUaWNrKHIpOnQub25jZSgiZmluaXNoIixyKSksZS5lbmRlZD0hMCx0LndyaXRhYmxlPSExfSh0aGlzLG4scil9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyci5wcm90b3R5cGUsImRlc3Ryb3llZCIse2dldDpmdW5jdGlvbigpe3JldHVybiB2b2lkIDAhPT10aGlzLl93cml0YWJsZVN0YXRlJiZ0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZH0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuX3dyaXRhYmxlU3RhdGUmJih0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZD10KX19KSxyci5wcm90b3R5cGUuZGVzdHJveT1xZSxyci5wcm90b3R5cGUuX3VuZGVzdHJveT16ZSxyci5wcm90b3R5cGUuX2Rlc3Ryb3k9ZnVuY3Rpb24odCxlKXt0aGlzLmVuZCgpLGUodCl9O3ZhciBmcj1PYmplY3Qua2V5c3x8ZnVuY3Rpb24odCl7dmFyIGU9W107Zm9yKHZhciByIGluIHQpZS5wdXNoKHIpO3JldHVybiBlfSxjcj1ncixscj1PYmplY3QuY3JlYXRlKHRlKTtsci5pbmhlcml0cz1lZSxsci5pbmhlcml0cyhncixNcik7Zm9yKHZhciBocj1mcihHZS5wcm90b3R5cGUpLGRyPTA7ZHI8aHIubGVuZ3RoO2RyKyspe3ZhciBwcj1ocltkcl07Z3IucHJvdG90eXBlW3ByXXx8KGdyLnByb3RvdHlwZVtwcl09R2UucHJvdG90eXBlW3ByXSl9ZnVuY3Rpb24gZ3IodCl7aWYoISh0aGlzIGluc3RhbmNlb2YgZ3IpKXJldHVybiBuZXcgZ3IodCk7TXIuY2FsbCh0aGlzLHQpLEdlLmNhbGwodGhpcyx0KSx0JiYhMT09PXQucmVhZGFibGUmJih0aGlzLnJlYWRhYmxlPSExKSx0JiYhMT09PXQud3JpdGFibGUmJih0aGlzLndyaXRhYmxlPSExKSx0aGlzLmFsbG93SGFsZk9wZW49ITAsdCYmITE9PT10LmFsbG93SGFsZk9wZW4mJih0aGlzLmFsbG93SGFsZk9wZW49ITEpLHRoaXMub25jZSgiZW5kIix2cil9ZnVuY3Rpb24gdnIoKXt0aGlzLmFsbG93SGFsZk9wZW58fHRoaXMuX3dyaXRhYmxlU3RhdGUuZW5kZWR8fFB0Lm5leHRUaWNrKHlyLHRoaXMpfWZ1bmN0aW9uIHlyKHQpe3QuZW5kKCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KGdyLnByb3RvdHlwZSwid3JpdGFibGVIaWdoV2F0ZXJNYXJrIix7ZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fd3JpdGFibGVTdGF0ZS5oaWdoV2F0ZXJNYXJrfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShnci5wcm90b3R5cGUsImRlc3Ryb3llZCIse2dldDpmdW5jdGlvbigpe3JldHVybiB2b2lkIDAhPT10aGlzLl9yZWFkYWJsZVN0YXRlJiZ2b2lkIDAhPT10aGlzLl93cml0YWJsZVN0YXRlJiZ0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCYmdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWR9LHNldDpmdW5jdGlvbih0KXt2b2lkIDAhPT10aGlzLl9yZWFkYWJsZVN0YXRlJiZ2b2lkIDAhPT10aGlzLl93cml0YWJsZVN0YXRlJiYodGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQ9dCx0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZD10KX19KSxnci5wcm90b3R5cGUuX2Rlc3Ryb3k9ZnVuY3Rpb24odCxlKXt0aGlzLnB1c2gobnVsbCksdGhpcy5lbmQoKSxQdC5uZXh0VGljayhlLHQpfTt2YXIgYnI9UXQuQnVmZmVyLG1yPWJyLmlzRW5jb2Rpbmd8fGZ1bmN0aW9uKHQpe3N3aXRjaCgodD0iIit0KSYmdC50b0xvd2VyQ2FzZSgpKXtjYXNlImhleCI6Y2FzZSJ1dGY4IjpjYXNlInV0Zi04IjpjYXNlImFzY2lpIjpjYXNlImJpbmFyeSI6Y2FzZSJiYXNlNjQiOmNhc2UidWNzMiI6Y2FzZSJ1Y3MtMiI6Y2FzZSJ1dGYxNmxlIjpjYXNlInV0Zi0xNmxlIjpjYXNlInJhdyI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19LHdyPVNyO2Z1bmN0aW9uIFNyKHQpe3ZhciBlO3N3aXRjaCh0aGlzLmVuY29kaW5nPWZ1bmN0aW9uKHQpe3ZhciBlPWZ1bmN0aW9uKHQpe2lmKCF0KXJldHVybiJ1dGY4Ijtmb3IodmFyIGU7Oylzd2l0Y2godCl7Y2FzZSJ1dGY4IjpjYXNlInV0Zi04IjpyZXR1cm4idXRmOCI7Y2FzZSJ1Y3MyIjpjYXNlInVjcy0yIjpjYXNlInV0ZjE2bGUiOmNhc2UidXRmLTE2bGUiOnJldHVybiJ1dGYxNmxlIjtjYXNlImxhdGluMSI6Y2FzZSJiaW5hcnkiOnJldHVybiJsYXRpbjEiO2Nhc2UiYmFzZTY0IjpjYXNlImFzY2lpIjpjYXNlImhleCI6cmV0dXJuIHQ7ZGVmYXVsdDppZihlKXJldHVybjt0PSgiIit0KS50b0xvd2VyQ2FzZSgpLGU9ITB9fSh0KTtpZigic3RyaW5nIiE9dHlwZW9mIGUmJihici5pc0VuY29kaW5nPT09bXJ8fCFtcih0KSkpdGhyb3cgbmV3IEVycm9yKCJVbmtub3duIGVuY29kaW5nOiAiK3QpO3JldHVybiBlfHx0fSh0KSx0aGlzLmVuY29kaW5nKXtjYXNlInV0ZjE2bGUiOnRoaXMudGV4dD1rcix0aGlzLmVuZD1ScixlPTQ7YnJlYWs7Y2FzZSJ1dGY4Ijp0aGlzLmZpbGxMYXN0PUVyLGU9NDticmVhaztjYXNlImJhc2U2NCI6dGhpcy50ZXh0PXhyLHRoaXMuZW5kPU9yLGU9MzticmVhaztkZWZhdWx0OnJldHVybiB0aGlzLndyaXRlPWpyLHZvaWQodGhpcy5lbmQ9VHIpfXRoaXMubGFzdE5lZWQ9MCx0aGlzLmxhc3RUb3RhbD0wLHRoaXMubGFzdENoYXI9YnIuYWxsb2NVbnNhZmUoZSl9ZnVuY3Rpb24gX3IodCl7cmV0dXJuIHQ8PTEyNz8wOnQ+PjU9PTY/Mjp0Pj40PT0xND8zOnQ+PjM9PTMwPzQ6dD4+Nj09Mj8tMTotMn1mdW5jdGlvbiBFcih0KXt2YXIgZT10aGlzLmxhc3RUb3RhbC10aGlzLmxhc3ROZWVkLHI9ZnVuY3Rpb24odCxlLHIpe2lmKDEyOCE9KDE5MiZlWzBdKSlyZXR1cm4gdC5sYXN0TmVlZD0wLCLvv70iO2lmKHQubGFzdE5lZWQ+MSYmZS5sZW5ndGg+MSl7aWYoMTI4IT0oMTkyJmVbMV0pKXJldHVybiB0Lmxhc3ROZWVkPTEsIu+/vSI7aWYodC5sYXN0TmVlZD4yJiZlLmxlbmd0aD4yJiYxMjghPSgxOTImZVsyXSkpcmV0dXJuIHQubGFzdE5lZWQ9Miwi77+9In19KHRoaXMsdCk7cmV0dXJuIHZvaWQgMCE9PXI/cjp0aGlzLmxhc3ROZWVkPD10Lmxlbmd0aD8odC5jb3B5KHRoaXMubGFzdENoYXIsZSwwLHRoaXMubGFzdE5lZWQpLHRoaXMubGFzdENoYXIudG9TdHJpbmcodGhpcy5lbmNvZGluZywwLHRoaXMubGFzdFRvdGFsKSk6KHQuY29weSh0aGlzLmxhc3RDaGFyLGUsMCx0Lmxlbmd0aCksdm9pZCh0aGlzLmxhc3ROZWVkLT10Lmxlbmd0aCkpfWZ1bmN0aW9uIGtyKHQsZSl7aWYoKHQubGVuZ3RoLWUpJTI9PTApe3ZhciByPXQudG9TdHJpbmcoInV0ZjE2bGUiLGUpO2lmKHIpe3ZhciBuPXIuY2hhckNvZGVBdChyLmxlbmd0aC0xKTtpZihuPj01NTI5NiYmbjw9NTYzMTkpcmV0dXJuIHRoaXMubGFzdE5lZWQ9Mix0aGlzLmxhc3RUb3RhbD00LHRoaXMubGFzdENoYXJbMF09dFt0Lmxlbmd0aC0yXSx0aGlzLmxhc3RDaGFyWzFdPXRbdC5sZW5ndGgtMV0sci5zbGljZSgwLC0xKX1yZXR1cm4gcn1yZXR1cm4gdGhpcy5sYXN0TmVlZD0xLHRoaXMubGFzdFRvdGFsPTIsdGhpcy5sYXN0Q2hhclswXT10W3QubGVuZ3RoLTFdLHQudG9TdHJpbmcoInV0ZjE2bGUiLGUsdC5sZW5ndGgtMSl9ZnVuY3Rpb24gUnIodCl7dmFyIGU9dCYmdC5sZW5ndGg/dGhpcy53cml0ZSh0KToiIjtpZih0aGlzLmxhc3ROZWVkKXt2YXIgcj10aGlzLmxhc3RUb3RhbC10aGlzLmxhc3ROZWVkO3JldHVybiBlK3RoaXMubGFzdENoYXIudG9TdHJpbmcoInV0ZjE2bGUiLDAscil9cmV0dXJuIGV9ZnVuY3Rpb24geHIodCxlKXt2YXIgcj0odC5sZW5ndGgtZSklMztyZXR1cm4gMD09PXI/dC50b1N0cmluZygiYmFzZTY0IixlKToodGhpcy5sYXN0TmVlZD0zLXIsdGhpcy5sYXN0VG90YWw9MywxPT09cj90aGlzLmxhc3RDaGFyWzBdPXRbdC5sZW5ndGgtMV06KHRoaXMubGFzdENoYXJbMF09dFt0Lmxlbmd0aC0yXSx0aGlzLmxhc3RDaGFyWzFdPXRbdC5sZW5ndGgtMV0pLHQudG9TdHJpbmcoImJhc2U2NCIsZSx0Lmxlbmd0aC1yKSl9ZnVuY3Rpb24gT3IodCl7dmFyIGU9dCYmdC5sZW5ndGg/dGhpcy53cml0ZSh0KToiIjtyZXR1cm4gdGhpcy5sYXN0TmVlZD9lK3RoaXMubGFzdENoYXIudG9TdHJpbmcoImJhc2U2NCIsMCwzLXRoaXMubGFzdE5lZWQpOmV9ZnVuY3Rpb24ganIodCl7cmV0dXJuIHQudG9TdHJpbmcodGhpcy5lbmNvZGluZyl9ZnVuY3Rpb24gVHIodCl7cmV0dXJuIHQmJnQubGVuZ3RoP3RoaXMud3JpdGUodCk6IiJ9U3IucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKHQpe2lmKDA9PT10Lmxlbmd0aClyZXR1cm4iIjt2YXIgZSxyO2lmKHRoaXMubGFzdE5lZWQpe2lmKHZvaWQgMD09PShlPXRoaXMuZmlsbExhc3QodCkpKXJldHVybiIiO3I9dGhpcy5sYXN0TmVlZCx0aGlzLmxhc3ROZWVkPTB9ZWxzZSByPTA7cmV0dXJuIHI8dC5sZW5ndGg/ZT9lK3RoaXMudGV4dCh0LHIpOnRoaXMudGV4dCh0LHIpOmV8fCIifSxTci5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKHQpe3ZhciBlPXQmJnQubGVuZ3RoP3RoaXMud3JpdGUodCk6IiI7cmV0dXJuIHRoaXMubGFzdE5lZWQ/ZSsi77+9IjplfSxTci5wcm90b3R5cGUudGV4dD1mdW5jdGlvbih0LGUpe3ZhciByPWZ1bmN0aW9uKHQsZSxyKXt2YXIgbj1lLmxlbmd0aC0xO2lmKG48cilyZXR1cm4gMDt2YXIgaT1fcihlW25dKTtyZXR1cm4gaT49MD8oaT4wJiYodC5sYXN0TmVlZD1pLTEpLGkpOi0tbjxyfHwtMj09PWk/MDooaT1fcihlW25dKSk+PTA/KGk+MCYmKHQubGFzdE5lZWQ9aS0yKSxpKTotLW48cnx8LTI9PT1pPzA6KGk9X3IoZVtuXSkpPj0wPyhpPjAmJigyPT09aT9pPTA6dC5sYXN0TmVlZD1pLTMpLGkpOjB9KHRoaXMsdCxlKTtpZighdGhpcy5sYXN0TmVlZClyZXR1cm4gdC50b1N0cmluZygidXRmOCIsZSk7dGhpcy5sYXN0VG90YWw9cjt2YXIgbj10Lmxlbmd0aC0oci10aGlzLmxhc3ROZWVkKTtyZXR1cm4gdC5jb3B5KHRoaXMubGFzdENoYXIsMCxuKSx0LnRvU3RyaW5nKCJ1dGY4IixlLG4pfSxTci5wcm90b3R5cGUuZmlsbExhc3Q9ZnVuY3Rpb24odCl7aWYodGhpcy5sYXN0TmVlZDw9dC5sZW5ndGgpcmV0dXJuIHQuY29weSh0aGlzLmxhc3RDaGFyLHRoaXMubGFzdFRvdGFsLXRoaXMubGFzdE5lZWQsMCx0aGlzLmxhc3ROZWVkKSx0aGlzLmxhc3RDaGFyLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcsMCx0aGlzLmxhc3RUb3RhbCk7dC5jb3B5KHRoaXMubGFzdENoYXIsdGhpcy5sYXN0VG90YWwtdGhpcy5sYXN0TmVlZCwwLHQubGVuZ3RoKSx0aGlzLmxhc3ROZWVkLT10Lmxlbmd0aH07dmFyIEFyLExyPXtTdHJpbmdEZWNvZGVyOndyfSxNcj1xcjtxci5SZWFkYWJsZVN0YXRlPUZyLEp0LkV2ZW50RW1pdHRlcjt2YXIgQ3I9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5saXN0ZW5lcnMoZSkubGVuZ3RofSxQcj1RdC5CdWZmZXIsSXI9aS5VaW50OEFycmF5fHxmdW5jdGlvbigpe30sTnI9T2JqZWN0LmNyZWF0ZSh0ZSk7TnIuaW5oZXJpdHM9ZWU7dmFyIEJyLFVyPXZvaWQgMDtVcj1VZSYmVWUuZGVidWdsb2c/VWUuZGVidWdsb2coInN0cmVhbSIpOmZ1bmN0aW9uKCl7fSxOci5pbmhlcml0cyhxcixLdCk7dmFyIERyPVsiZXJyb3IiLCJjbG9zZSIsImRlc3Ryb3kiLCJwYXVzZSIsInJlc3VtZSJdO2Z1bmN0aW9uIEZyKHQsZSl7dD10fHx7fTt2YXIgcj1lIGluc3RhbmNlb2YoQXI9QXJ8fGNyKTt0aGlzLm9iamVjdE1vZGU9ISF0Lm9iamVjdE1vZGUsciYmKHRoaXMub2JqZWN0TW9kZT10aGlzLm9iamVjdE1vZGV8fCEhdC5yZWFkYWJsZU9iamVjdE1vZGUpO3ZhciBuPXQuaGlnaFdhdGVyTWFyayxpPXQucmVhZGFibGVIaWdoV2F0ZXJNYXJrLG89dGhpcy5vYmplY3RNb2RlPzE2OjE2Mzg0O3RoaXMuaGlnaFdhdGVyTWFyaz1ufHwwPT09bj9uOnImJihpfHwwPT09aSk/aTpvLHRoaXMuaGlnaFdhdGVyTWFyaz1NYXRoLmZsb29yKHRoaXMuaGlnaFdhdGVyTWFyayksdGhpcy5idWZmZXI9bmV3IERlLHRoaXMubGVuZ3RoPTAsdGhpcy5waXBlcz1udWxsLHRoaXMucGlwZXNDb3VudD0wLHRoaXMuZmxvd2luZz1udWxsLHRoaXMuZW5kZWQ9ITEsdGhpcy5lbmRFbWl0dGVkPSExLHRoaXMucmVhZGluZz0hMSx0aGlzLnN5bmM9ITAsdGhpcy5uZWVkUmVhZGFibGU9ITEsdGhpcy5lbWl0dGVkUmVhZGFibGU9ITEsdGhpcy5yZWFkYWJsZUxpc3RlbmluZz0hMSx0aGlzLnJlc3VtZVNjaGVkdWxlZD0hMSx0aGlzLmRlc3Ryb3llZD0hMSx0aGlzLmRlZmF1bHRFbmNvZGluZz10LmRlZmF1bHRFbmNvZGluZ3x8InV0ZjgiLHRoaXMuYXdhaXREcmFpbj0wLHRoaXMucmVhZGluZ01vcmU9ITEsdGhpcy5kZWNvZGVyPW51bGwsdGhpcy5lbmNvZGluZz1udWxsLHQuZW5jb2RpbmcmJihCcnx8KEJyPUxyLlN0cmluZ0RlY29kZXIpLHRoaXMuZGVjb2Rlcj1uZXcgQnIodC5lbmNvZGluZyksdGhpcy5lbmNvZGluZz10LmVuY29kaW5nKX1mdW5jdGlvbiBxcih0KXtpZihBcj1Bcnx8Y3IsISh0aGlzIGluc3RhbmNlb2YgcXIpKXJldHVybiBuZXcgcXIodCk7dGhpcy5fcmVhZGFibGVTdGF0ZT1uZXcgRnIodCx0aGlzKSx0aGlzLnJlYWRhYmxlPSEwLHQmJigiZnVuY3Rpb24iPT10eXBlb2YgdC5yZWFkJiYodGhpcy5fcmVhZD10LnJlYWQpLCJmdW5jdGlvbiI9PXR5cGVvZiB0LmRlc3Ryb3kmJih0aGlzLl9kZXN0cm95PXQuZGVzdHJveSkpLEt0LmNhbGwodGhpcyl9ZnVuY3Rpb24genIodCxlLHIsbixpKXt2YXIgbyxhPXQuX3JlYWRhYmxlU3RhdGU7cmV0dXJuIG51bGw9PT1lPyhhLnJlYWRpbmc9ITEsZnVuY3Rpb24odCxlKXtpZighZS5lbmRlZCl7aWYoZS5kZWNvZGVyKXt2YXIgcj1lLmRlY29kZXIuZW5kKCk7ciYmci5sZW5ndGgmJihlLmJ1ZmZlci5wdXNoKHIpLGUubGVuZ3RoKz1lLm9iamVjdE1vZGU/MTpyLmxlbmd0aCl9ZS5lbmRlZD0hMCwkcih0KX19KHQsYSkpOihpfHwobz1mdW5jdGlvbih0LGUpe3ZhciByO3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gUHIuaXNCdWZmZXIodCl8fHQgaW5zdGFuY2VvZiBJcn0oZSl8fCJzdHJpbmciPT10eXBlb2YgZXx8dm9pZCAwPT09ZXx8dC5vYmplY3RNb2RlfHwocj1uZXcgVHlwZUVycm9yKCJJbnZhbGlkIG5vbi1zdHJpbmcvYnVmZmVyIGNodW5rIikpLHJ9KGEsZSkpLG8/dC5lbWl0KCJlcnJvciIsbyk6YS5vYmplY3RNb2RlfHxlJiZlLmxlbmd0aD4wPygic3RyaW5nIj09dHlwZW9mIGV8fGEub2JqZWN0TW9kZXx8T2JqZWN0LmdldFByb3RvdHlwZU9mKGUpPT09UHIucHJvdG90eXBlfHwoZT1mdW5jdGlvbih0KXtyZXR1cm4gUHIuZnJvbSh0KX0oZSkpLG4/YS5lbmRFbWl0dGVkP3QuZW1pdCgiZXJyb3IiLG5ldyBFcnJvcigic3RyZWFtLnVuc2hpZnQoKSBhZnRlciBlbmQgZXZlbnQiKSk6V3IodCxhLGUsITApOmEuZW5kZWQ/dC5lbWl0KCJlcnJvciIsbmV3IEVycm9yKCJzdHJlYW0ucHVzaCgpIGFmdGVyIEVPRiIpKTooYS5yZWFkaW5nPSExLGEuZGVjb2RlciYmIXI/KGU9YS5kZWNvZGVyLndyaXRlKGUpLGEub2JqZWN0TW9kZXx8MCE9PWUubGVuZ3RoP1dyKHQsYSxlLCExKTpWcih0LGEpKTpXcih0LGEsZSwhMSkpKTpufHwoYS5yZWFkaW5nPSExKSksZnVuY3Rpb24odCl7cmV0dXJuIXQuZW5kZWQmJih0Lm5lZWRSZWFkYWJsZXx8dC5sZW5ndGg8dC5oaWdoV2F0ZXJNYXJrfHwwPT09dC5sZW5ndGgpfShhKX1mdW5jdGlvbiBXcih0LGUscixuKXtlLmZsb3dpbmcmJjA9PT1lLmxlbmd0aCYmIWUuc3luYz8odC5lbWl0KCJkYXRhIixyKSx0LnJlYWQoMCkpOihlLmxlbmd0aCs9ZS5vYmplY3RNb2RlPzE6ci5sZW5ndGgsbj9lLmJ1ZmZlci51bnNoaWZ0KHIpOmUuYnVmZmVyLnB1c2gociksZS5uZWVkUmVhZGFibGUmJiRyKHQpKSxWcih0LGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShxci5wcm90b3R5cGUsImRlc3Ryb3llZCIse2dldDpmdW5jdGlvbigpe3JldHVybiB2b2lkIDAhPT10aGlzLl9yZWFkYWJsZVN0YXRlJiZ0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZH0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuX3JlYWRhYmxlU3RhdGUmJih0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZD10KX19KSxxci5wcm90b3R5cGUuZGVzdHJveT1xZSxxci5wcm90b3R5cGUuX3VuZGVzdHJveT16ZSxxci5wcm90b3R5cGUuX2Rlc3Ryb3k9ZnVuY3Rpb24odCxlKXt0aGlzLnB1c2gobnVsbCksZSh0KX0scXIucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24odCxlKXt2YXIgcixuPXRoaXMuX3JlYWRhYmxlU3RhdGU7cmV0dXJuIG4ub2JqZWN0TW9kZT9yPSEwOiJzdHJpbmciPT10eXBlb2YgdCYmKChlPWV8fG4uZGVmYXVsdEVuY29kaW5nKSE9PW4uZW5jb2RpbmcmJih0PVByLmZyb20odCxlKSxlPSIiKSxyPSEwKSx6cih0aGlzLHQsZSwhMSxyKX0scXIucHJvdG90eXBlLnVuc2hpZnQ9ZnVuY3Rpb24odCl7cmV0dXJuIHpyKHRoaXMsdCxudWxsLCEwLCExKX0scXIucHJvdG90eXBlLmlzUGF1c2VkPWZ1bmN0aW9uKCl7cmV0dXJuITE9PT10aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmd9LHFyLnByb3RvdHlwZS5zZXRFbmNvZGluZz1mdW5jdGlvbih0KXtyZXR1cm4gQnJ8fChCcj1Mci5TdHJpbmdEZWNvZGVyKSx0aGlzLl9yZWFkYWJsZVN0YXRlLmRlY29kZXI9bmV3IEJyKHQpLHRoaXMuX3JlYWRhYmxlU3RhdGUuZW5jb2Rpbmc9dCx0aGlzfTt2YXIgWXI9ODM4ODYwODtmdW5jdGlvbiBHcih0LGUpe3JldHVybiB0PD0wfHwwPT09ZS5sZW5ndGgmJmUuZW5kZWQ/MDplLm9iamVjdE1vZGU/MTp0IT10P2UuZmxvd2luZyYmZS5sZW5ndGg/ZS5idWZmZXIuaGVhZC5kYXRhLmxlbmd0aDplLmxlbmd0aDoodD5lLmhpZ2hXYXRlck1hcmsmJihlLmhpZ2hXYXRlck1hcms9ZnVuY3Rpb24odCl7cmV0dXJuIHQ+PVlyP3Q9WXI6KHQtLSx0fD10Pj4+MSx0fD10Pj4+Mix0fD10Pj4+NCx0fD10Pj4+OCx0fD10Pj4+MTYsdCsrKSx0fSh0KSksdDw9ZS5sZW5ndGg/dDplLmVuZGVkP2UubGVuZ3RoOihlLm5lZWRSZWFkYWJsZT0hMCwwKSl9ZnVuY3Rpb24gJHIodCl7dmFyIGU9dC5fcmVhZGFibGVTdGF0ZTtlLm5lZWRSZWFkYWJsZT0hMSxlLmVtaXR0ZWRSZWFkYWJsZXx8KFVyKCJlbWl0UmVhZGFibGUiLGUuZmxvd2luZyksZS5lbWl0dGVkUmVhZGFibGU9ITAsZS5zeW5jP1B0Lm5leHRUaWNrKEhyLHQpOkhyKHQpKX1mdW5jdGlvbiBIcih0KXtVcigiZW1pdCByZWFkYWJsZSIpLHQuZW1pdCgicmVhZGFibGUiKSxRcih0KX1mdW5jdGlvbiBWcih0LGUpe2UucmVhZGluZ01vcmV8fChlLnJlYWRpbmdNb3JlPSEwLFB0Lm5leHRUaWNrKEpyLHQsZSkpfWZ1bmN0aW9uIEpyKHQsZSl7Zm9yKHZhciByPWUubGVuZ3RoOyFlLnJlYWRpbmcmJiFlLmZsb3dpbmcmJiFlLmVuZGVkJiZlLmxlbmd0aDxlLmhpZ2hXYXRlck1hcmsmJihVcigibWF5YmVSZWFkTW9yZSByZWFkIDAiKSx0LnJlYWQoMCksciE9PWUubGVuZ3RoKTspcj1lLmxlbmd0aDtlLnJlYWRpbmdNb3JlPSExfWZ1bmN0aW9uIEtyKHQpe1VyKCJyZWFkYWJsZSBuZXh0dGljayByZWFkIDAiKSx0LnJlYWQoMCl9ZnVuY3Rpb24gWHIodCxlKXtlLnJlYWRpbmd8fChVcigicmVzdW1lIHJlYWQgMCIpLHQucmVhZCgwKSksZS5yZXN1bWVTY2hlZHVsZWQ9ITEsZS5hd2FpdERyYWluPTAsdC5lbWl0KCJyZXN1bWUiKSxRcih0KSxlLmZsb3dpbmcmJiFlLnJlYWRpbmcmJnQucmVhZCgwKX1mdW5jdGlvbiBRcih0KXt2YXIgZT10Ll9yZWFkYWJsZVN0YXRlO2ZvcihVcigiZmxvdyIsZS5mbG93aW5nKTtlLmZsb3dpbmcmJm51bGwhPT10LnJlYWQoKTspO31mdW5jdGlvbiBacih0LGUpe3JldHVybiAwPT09ZS5sZW5ndGg/bnVsbDooZS5vYmplY3RNb2RlP3I9ZS5idWZmZXIuc2hpZnQoKTohdHx8dD49ZS5sZW5ndGg/KHI9ZS5kZWNvZGVyP2UuYnVmZmVyLmpvaW4oIiIpOjE9PT1lLmJ1ZmZlci5sZW5ndGg/ZS5idWZmZXIuaGVhZC5kYXRhOmUuYnVmZmVyLmNvbmNhdChlLmxlbmd0aCksZS5idWZmZXIuY2xlYXIoKSk6cj1mdW5jdGlvbih0LGUscil7dmFyIG47cmV0dXJuIHQ8ZS5oZWFkLmRhdGEubGVuZ3RoPyhuPWUuaGVhZC5kYXRhLnNsaWNlKDAsdCksZS5oZWFkLmRhdGE9ZS5oZWFkLmRhdGEuc2xpY2UodCkpOm49dD09PWUuaGVhZC5kYXRhLmxlbmd0aD9lLnNoaWZ0KCk6cj9mdW5jdGlvbih0LGUpe3ZhciByPWUuaGVhZCxuPTEsaT1yLmRhdGE7Zm9yKHQtPWkubGVuZ3RoO3I9ci5uZXh0Oyl7dmFyIG89ci5kYXRhLGE9dD5vLmxlbmd0aD9vLmxlbmd0aDp0O2lmKGE9PT1vLmxlbmd0aD9pKz1vOmkrPW8uc2xpY2UoMCx0KSwwPT0odC09YSkpe2E9PT1vLmxlbmd0aD8oKytuLHIubmV4dD9lLmhlYWQ9ci5uZXh0OmUuaGVhZD1lLnRhaWw9bnVsbCk6KGUuaGVhZD1yLHIuZGF0YT1vLnNsaWNlKGEpKTticmVha30rK259cmV0dXJuIGUubGVuZ3RoLT1uLGl9KHQsZSk6ZnVuY3Rpb24odCxlKXt2YXIgcj1Qci5hbGxvY1Vuc2FmZSh0KSxuPWUuaGVhZCxpPTE7Zm9yKG4uZGF0YS5jb3B5KHIpLHQtPW4uZGF0YS5sZW5ndGg7bj1uLm5leHQ7KXt2YXIgbz1uLmRhdGEsYT10Pm8ubGVuZ3RoP28ubGVuZ3RoOnQ7aWYoby5jb3B5KHIsci5sZW5ndGgtdCwwLGEpLDA9PSh0LT1hKSl7YT09PW8ubGVuZ3RoPygrK2ksbi5uZXh0P2UuaGVhZD1uLm5leHQ6ZS5oZWFkPWUudGFpbD1udWxsKTooZS5oZWFkPW4sbi5kYXRhPW8uc2xpY2UoYSkpO2JyZWFrfSsraX1yZXR1cm4gZS5sZW5ndGgtPWkscn0odCxlKSxufSh0LGUuYnVmZmVyLGUuZGVjb2Rlcikscik7dmFyIHJ9ZnVuY3Rpb24gdG4odCl7dmFyIGU9dC5fcmVhZGFibGVTdGF0ZTtpZihlLmxlbmd0aD4wKXRocm93IG5ldyBFcnJvcignImVuZFJlYWRhYmxlKCkiIGNhbGxlZCBvbiBub24tZW1wdHkgc3RyZWFtJyk7ZS5lbmRFbWl0dGVkfHwoZS5lbmRlZD0hMCxQdC5uZXh0VGljayhlbixlLHQpKX1mdW5jdGlvbiBlbih0LGUpe3QuZW5kRW1pdHRlZHx8MCE9PXQubGVuZ3RofHwodC5lbmRFbWl0dGVkPSEwLGUucmVhZGFibGU9ITEsZS5lbWl0KCJlbmQiKSl9ZnVuY3Rpb24gcm4odCxlKXtmb3IodmFyIHI9MCxuPXQubGVuZ3RoO3I8bjtyKyspaWYodFtyXT09PWUpcmV0dXJuIHI7cmV0dXJuLTF9cXIucHJvdG90eXBlLnJlYWQ9ZnVuY3Rpb24odCl7VXIoInJlYWQiLHQpLHQ9cGFyc2VJbnQodCwxMCk7dmFyIGU9dGhpcy5fcmVhZGFibGVTdGF0ZSxyPXQ7aWYoMCE9PXQmJihlLmVtaXR0ZWRSZWFkYWJsZT0hMSksMD09PXQmJmUubmVlZFJlYWRhYmxlJiYoZS5sZW5ndGg+PWUuaGlnaFdhdGVyTWFya3x8ZS5lbmRlZCkpcmV0dXJuIFVyKCJyZWFkOiBlbWl0UmVhZGFibGUiLGUubGVuZ3RoLGUuZW5kZWQpLDA9PT1lLmxlbmd0aCYmZS5lbmRlZD90bih0aGlzKTokcih0aGlzKSxudWxsO2lmKDA9PT0odD1Hcih0LGUpKSYmZS5lbmRlZClyZXR1cm4gMD09PWUubGVuZ3RoJiZ0bih0aGlzKSxudWxsO3ZhciBuLGk9ZS5uZWVkUmVhZGFibGU7cmV0dXJuIFVyKCJuZWVkIHJlYWRhYmxlIixpKSwoMD09PWUubGVuZ3RofHxlLmxlbmd0aC10PGUuaGlnaFdhdGVyTWFyaykmJlVyKCJsZW5ndGggbGVzcyB0aGFuIHdhdGVybWFyayIsaT0hMCksZS5lbmRlZHx8ZS5yZWFkaW5nP1VyKCJyZWFkaW5nIG9yIGVuZGVkIixpPSExKTppJiYoVXIoImRvIHJlYWQiKSxlLnJlYWRpbmc9ITAsZS5zeW5jPSEwLDA9PT1lLmxlbmd0aCYmKGUubmVlZFJlYWRhYmxlPSEwKSx0aGlzLl9yZWFkKGUuaGlnaFdhdGVyTWFyayksZS5zeW5jPSExLGUucmVhZGluZ3x8KHQ9R3IocixlKSkpLG51bGw9PT0obj10PjA/WnIodCxlKTpudWxsKT8oZS5uZWVkUmVhZGFibGU9ITAsdD0wKTplLmxlbmd0aC09dCwwPT09ZS5sZW5ndGgmJihlLmVuZGVkfHwoZS5uZWVkUmVhZGFibGU9ITApLHIhPT10JiZlLmVuZGVkJiZ0bih0aGlzKSksbnVsbCE9PW4mJnRoaXMuZW1pdCgiZGF0YSIsbiksbn0scXIucHJvdG90eXBlLl9yZWFkPWZ1bmN0aW9uKHQpe3RoaXMuZW1pdCgiZXJyb3IiLG5ldyBFcnJvcigiX3JlYWQoKSBpcyBub3QgaW1wbGVtZW50ZWQiKSl9LHFyLnByb3RvdHlwZS5waXBlPWZ1bmN0aW9uKHQsZSl7dmFyIHI9dGhpcyxuPXRoaXMuX3JlYWRhYmxlU3RhdGU7c3dpdGNoKG4ucGlwZXNDb3VudCl7Y2FzZSAwOm4ucGlwZXM9dDticmVhaztjYXNlIDE6bi5waXBlcz1bbi5waXBlcyx0XTticmVhaztkZWZhdWx0Om4ucGlwZXMucHVzaCh0KX1uLnBpcGVzQ291bnQrPTEsVXIoInBpcGUgY291bnQ9JWQgb3B0cz0laiIsbi5waXBlc0NvdW50LGUpO3ZhciBpPWUmJiExPT09ZS5lbmR8fHQ9PT1DdC5zdGRvdXR8fHQ9PT1DdC5zdGRlcnI/cDphO2Z1bmN0aW9uIG8oZSxpKXtVcigib251bnBpcGUiKSxlPT09ciYmaSYmITE9PT1pLmhhc1VucGlwZWQmJihpLmhhc1VucGlwZWQ9ITAsVXIoImNsZWFudXAiKSx0LnJlbW92ZUxpc3RlbmVyKCJjbG9zZSIsaCksdC5yZW1vdmVMaXN0ZW5lcigiZmluaXNoIixkKSx0LnJlbW92ZUxpc3RlbmVyKCJkcmFpbiIscyksdC5yZW1vdmVMaXN0ZW5lcigiZXJyb3IiLGwpLHQucmVtb3ZlTGlzdGVuZXIoInVucGlwZSIsbyksci5yZW1vdmVMaXN0ZW5lcigiZW5kIixhKSxyLnJlbW92ZUxpc3RlbmVyKCJlbmQiLHApLHIucmVtb3ZlTGlzdGVuZXIoImRhdGEiLGMpLHU9ITAsIW4uYXdhaXREcmFpbnx8dC5fd3JpdGFibGVTdGF0ZSYmIXQuX3dyaXRhYmxlU3RhdGUubmVlZERyYWlufHxzKCkpfWZ1bmN0aW9uIGEoKXtVcigib25lbmQiKSx0LmVuZCgpfW4uZW5kRW1pdHRlZD9QdC5uZXh0VGljayhpKTpyLm9uY2UoImVuZCIsaSksdC5vbigidW5waXBlIixvKTt2YXIgcz1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZT10Ll9yZWFkYWJsZVN0YXRlO1VyKCJwaXBlT25EcmFpbiIsZS5hd2FpdERyYWluKSxlLmF3YWl0RHJhaW4mJmUuYXdhaXREcmFpbi0tLDA9PT1lLmF3YWl0RHJhaW4mJkNyKHQsImRhdGEiKSYmKGUuZmxvd2luZz0hMCxRcih0KSl9fShyKTt0Lm9uKCJkcmFpbiIscyk7dmFyIHU9ITEsZj0hMTtmdW5jdGlvbiBjKGUpe1VyKCJvbmRhdGEiKSxmPSExLCExIT09dC53cml0ZShlKXx8Znx8KCgxPT09bi5waXBlc0NvdW50JiZuLnBpcGVzPT09dHx8bi5waXBlc0NvdW50PjEmJi0xIT09cm4obi5waXBlcyx0KSkmJiF1JiYoVXIoImZhbHNlIHdyaXRlIHJlc3BvbnNlLCBwYXVzZSIsci5fcmVhZGFibGVTdGF0ZS5hd2FpdERyYWluKSxyLl9yZWFkYWJsZVN0YXRlLmF3YWl0RHJhaW4rKyxmPSEwKSxyLnBhdXNlKCkpfWZ1bmN0aW9uIGwoZSl7VXIoIm9uZXJyb3IiLGUpLHAoKSx0LnJlbW92ZUxpc3RlbmVyKCJlcnJvciIsbCksMD09PUNyKHQsImVycm9yIikmJnQuZW1pdCgiZXJyb3IiLGUpfWZ1bmN0aW9uIGgoKXt0LnJlbW92ZUxpc3RlbmVyKCJmaW5pc2giLGQpLHAoKX1mdW5jdGlvbiBkKCl7VXIoIm9uZmluaXNoIiksdC5yZW1vdmVMaXN0ZW5lcigiY2xvc2UiLGgpLHAoKX1mdW5jdGlvbiBwKCl7VXIoInVucGlwZSIpLHIudW5waXBlKHQpfXJldHVybiByLm9uKCJkYXRhIixjKSxmdW5jdGlvbih0LGUscil7aWYoImZ1bmN0aW9uIj09dHlwZW9mIHQucHJlcGVuZExpc3RlbmVyKXJldHVybiB0LnByZXBlbmRMaXN0ZW5lcihlLHIpO3QuX2V2ZW50cyYmdC5fZXZlbnRzW2VdP050KHQuX2V2ZW50c1tlXSk/dC5fZXZlbnRzW2VdLnVuc2hpZnQocik6dC5fZXZlbnRzW2VdPVtyLHQuX2V2ZW50c1tlXV06dC5vbihlLHIpfSh0LCJlcnJvciIsbCksdC5vbmNlKCJjbG9zZSIsaCksdC5vbmNlKCJmaW5pc2giLGQpLHQuZW1pdCgicGlwZSIsciksbi5mbG93aW5nfHwoVXIoInBpcGUgcmVzdW1lIiksci5yZXN1bWUoKSksdH0scXIucHJvdG90eXBlLnVucGlwZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9yZWFkYWJsZVN0YXRlLHI9e2hhc1VucGlwZWQ6ITF9O2lmKDA9PT1lLnBpcGVzQ291bnQpcmV0dXJuIHRoaXM7aWYoMT09PWUucGlwZXNDb3VudClyZXR1cm4gdCYmdCE9PWUucGlwZXN8fCh0fHwodD1lLnBpcGVzKSxlLnBpcGVzPW51bGwsZS5waXBlc0NvdW50PTAsZS5mbG93aW5nPSExLHQmJnQuZW1pdCgidW5waXBlIix0aGlzLHIpKSx0aGlzO2lmKCF0KXt2YXIgbj1lLnBpcGVzLGk9ZS5waXBlc0NvdW50O2UucGlwZXM9bnVsbCxlLnBpcGVzQ291bnQ9MCxlLmZsb3dpbmc9ITE7Zm9yKHZhciBvPTA7bzxpO28rKyluW29dLmVtaXQoInVucGlwZSIsdGhpcyxyKTtyZXR1cm4gdGhpc312YXIgYT1ybihlLnBpcGVzLHQpO3JldHVybi0xPT09YXx8KGUucGlwZXMuc3BsaWNlKGEsMSksZS5waXBlc0NvdW50LT0xLDE9PT1lLnBpcGVzQ291bnQmJihlLnBpcGVzPWUucGlwZXNbMF0pLHQuZW1pdCgidW5waXBlIix0aGlzLHIpKSx0aGlzfSxxci5wcm90b3R5cGUub249ZnVuY3Rpb24odCxlKXt2YXIgcj1LdC5wcm90b3R5cGUub24uY2FsbCh0aGlzLHQsZSk7aWYoImRhdGEiPT09dCkhMSE9PXRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZyYmdGhpcy5yZXN1bWUoKTtlbHNlIGlmKCJyZWFkYWJsZSI9PT10KXt2YXIgbj10aGlzLl9yZWFkYWJsZVN0YXRlO24uZW5kRW1pdHRlZHx8bi5yZWFkYWJsZUxpc3RlbmluZ3x8KG4ucmVhZGFibGVMaXN0ZW5pbmc9bi5uZWVkUmVhZGFibGU9ITAsbi5lbWl0dGVkUmVhZGFibGU9ITEsbi5yZWFkaW5nP24ubGVuZ3RoJiYkcih0aGlzKTpQdC5uZXh0VGljayhLcix0aGlzKSl9cmV0dXJuIHJ9LHFyLnByb3RvdHlwZS5hZGRMaXN0ZW5lcj1xci5wcm90b3R5cGUub24scXIucHJvdG90eXBlLnJlc3VtZT1mdW5jdGlvbigpe3ZhciB0PXRoaXMuX3JlYWRhYmxlU3RhdGU7cmV0dXJuIHQuZmxvd2luZ3x8KFVyKCJyZXN1bWUiKSx0LmZsb3dpbmc9ITAsZnVuY3Rpb24odCxlKXtlLnJlc3VtZVNjaGVkdWxlZHx8KGUucmVzdW1lU2NoZWR1bGVkPSEwLFB0Lm5leHRUaWNrKFhyLHQsZSkpfSh0aGlzLHQpKSx0aGlzfSxxci5wcm90b3R5cGUucGF1c2U9ZnVuY3Rpb24oKXtyZXR1cm4gVXIoImNhbGwgcGF1c2UgZmxvd2luZz0laiIsdGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nKSwhMSE9PXRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZyYmKFVyKCJwYXVzZSIpLHRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZz0hMSx0aGlzLmVtaXQoInBhdXNlIikpLHRoaXN9LHFyLnByb3RvdHlwZS53cmFwPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMscj10aGlzLl9yZWFkYWJsZVN0YXRlLG49ITE7Zm9yKHZhciBpIGluIHQub24oImVuZCIsKGZ1bmN0aW9uKCl7aWYoVXIoIndyYXBwZWQgZW5kIiksci5kZWNvZGVyJiYhci5lbmRlZCl7dmFyIHQ9ci5kZWNvZGVyLmVuZCgpO3QmJnQubGVuZ3RoJiZlLnB1c2godCl9ZS5wdXNoKG51bGwpfSkpLHQub24oImRhdGEiLChmdW5jdGlvbihpKXtVcigid3JhcHBlZCBkYXRhIiksci5kZWNvZGVyJiYoaT1yLmRlY29kZXIud3JpdGUoaSkpLHIub2JqZWN0TW9kZSYmbnVsbD09aXx8KHIub2JqZWN0TW9kZXx8aSYmaS5sZW5ndGgpJiYoZS5wdXNoKGkpfHwobj0hMCx0LnBhdXNlKCkpKX0pKSx0KXZvaWQgMD09PXRoaXNbaV0mJiJmdW5jdGlvbiI9PXR5cGVvZiB0W2ldJiYodGhpc1tpXT1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdFtlXS5hcHBseSh0LGFyZ3VtZW50cyl9fShpKSk7Zm9yKHZhciBvPTA7bzxEci5sZW5ndGg7bysrKXQub24oRHJbb10sdGhpcy5lbWl0LmJpbmQodGhpcyxEcltvXSkpO3JldHVybiB0aGlzLl9yZWFkPWZ1bmN0aW9uKGUpe1VyKCJ3cmFwcGVkIF9yZWFkIixlKSxuJiYobj0hMSx0LnJlc3VtZSgpKX0sdGhpc30sT2JqZWN0LmRlZmluZVByb3BlcnR5KHFyLnByb3RvdHlwZSwicmVhZGFibGVIaWdoV2F0ZXJNYXJrIix7ZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVhZGFibGVTdGF0ZS5oaWdoV2F0ZXJNYXJrfX0pLHFyLl9mcm9tTGlzdD1acjt2YXIgbm49c24sb249T2JqZWN0LmNyZWF0ZSh0ZSk7ZnVuY3Rpb24gYW4odCxlKXt2YXIgcj10aGlzLl90cmFuc2Zvcm1TdGF0ZTtyLnRyYW5zZm9ybWluZz0hMTt2YXIgbj1yLndyaXRlY2I7aWYoIW4pcmV0dXJuIHRoaXMuZW1pdCgiZXJyb3IiLG5ldyBFcnJvcigid3JpdGUgY2FsbGJhY2sgY2FsbGVkIG11bHRpcGxlIHRpbWVzIikpO3Iud3JpdGVjaHVuaz1udWxsLHIud3JpdGVjYj1udWxsLG51bGwhPWUmJnRoaXMucHVzaChlKSxuKHQpO3ZhciBpPXRoaXMuX3JlYWRhYmxlU3RhdGU7aS5yZWFkaW5nPSExLChpLm5lZWRSZWFkYWJsZXx8aS5sZW5ndGg8aS5oaWdoV2F0ZXJNYXJrKSYmdGhpcy5fcmVhZChpLmhpZ2hXYXRlck1hcmspfWZ1bmN0aW9uIHNuKHQpe2lmKCEodGhpcyBpbnN0YW5jZW9mIHNuKSlyZXR1cm4gbmV3IHNuKHQpO2NyLmNhbGwodGhpcyx0KSx0aGlzLl90cmFuc2Zvcm1TdGF0ZT17YWZ0ZXJUcmFuc2Zvcm06YW4uYmluZCh0aGlzKSxuZWVkVHJhbnNmb3JtOiExLHRyYW5zZm9ybWluZzohMSx3cml0ZWNiOm51bGwsd3JpdGVjaHVuazpudWxsLHdyaXRlZW5jb2Rpbmc6bnVsbH0sdGhpcy5fcmVhZGFibGVTdGF0ZS5uZWVkUmVhZGFibGU9ITAsdGhpcy5fcmVhZGFibGVTdGF0ZS5zeW5jPSExLHQmJigiZnVuY3Rpb24iPT10eXBlb2YgdC50cmFuc2Zvcm0mJih0aGlzLl90cmFuc2Zvcm09dC50cmFuc2Zvcm0pLCJmdW5jdGlvbiI9PXR5cGVvZiB0LmZsdXNoJiYodGhpcy5fZmx1c2g9dC5mbHVzaCkpLHRoaXMub24oInByZWZpbmlzaCIsdW4pfWZ1bmN0aW9uIHVuKCl7dmFyIHQ9dGhpczsiZnVuY3Rpb24iPT10eXBlb2YgdGhpcy5fZmx1c2g/dGhpcy5fZmx1c2goKGZ1bmN0aW9uKGUscil7Zm4odCxlLHIpfSkpOmZuKHRoaXMsbnVsbCxudWxsKX1mdW5jdGlvbiBmbih0LGUscil7aWYoZSlyZXR1cm4gdC5lbWl0KCJlcnJvciIsZSk7aWYobnVsbCE9ciYmdC5wdXNoKHIpLHQuX3dyaXRhYmxlU3RhdGUubGVuZ3RoKXRocm93IG5ldyBFcnJvcigiQ2FsbGluZyB0cmFuc2Zvcm0gZG9uZSB3aGVuIHdzLmxlbmd0aCAhPSAwIik7aWYodC5fdHJhbnNmb3JtU3RhdGUudHJhbnNmb3JtaW5nKXRocm93IG5ldyBFcnJvcigiQ2FsbGluZyB0cmFuc2Zvcm0gZG9uZSB3aGVuIHN0aWxsIHRyYW5zZm9ybWluZyIpO3JldHVybiB0LnB1c2gobnVsbCl9b24uaW5oZXJpdHM9ZWUsb24uaW5oZXJpdHMoc24sY3IpLHNuLnByb3RvdHlwZS5wdXNoPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX3RyYW5zZm9ybVN0YXRlLm5lZWRUcmFuc2Zvcm09ITEsY3IucHJvdG90eXBlLnB1c2guY2FsbCh0aGlzLHQsZSl9LHNuLnByb3RvdHlwZS5fdHJhbnNmb3JtPWZ1bmN0aW9uKHQsZSxyKXt0aHJvdyBuZXcgRXJyb3IoIl90cmFuc2Zvcm0oKSBpcyBub3QgaW1wbGVtZW50ZWQiKX0sc24ucHJvdG90eXBlLl93cml0ZT1mdW5jdGlvbih0LGUscil7dmFyIG49dGhpcy5fdHJhbnNmb3JtU3RhdGU7aWYobi53cml0ZWNiPXIsbi53cml0ZWNodW5rPXQsbi53cml0ZWVuY29kaW5nPWUsIW4udHJhbnNmb3JtaW5nKXt2YXIgaT10aGlzLl9yZWFkYWJsZVN0YXRlOyhuLm5lZWRUcmFuc2Zvcm18fGkubmVlZFJlYWRhYmxlfHxpLmxlbmd0aDxpLmhpZ2hXYXRlck1hcmspJiZ0aGlzLl9yZWFkKGkuaGlnaFdhdGVyTWFyayl9fSxzbi5wcm90b3R5cGUuX3JlYWQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fdHJhbnNmb3JtU3RhdGU7bnVsbCE9PWUud3JpdGVjaHVuayYmZS53cml0ZWNiJiYhZS50cmFuc2Zvcm1pbmc/KGUudHJhbnNmb3JtaW5nPSEwLHRoaXMuX3RyYW5zZm9ybShlLndyaXRlY2h1bmssZS53cml0ZWVuY29kaW5nLGUuYWZ0ZXJUcmFuc2Zvcm0pKTplLm5lZWRUcmFuc2Zvcm09ITB9LHNuLnByb3RvdHlwZS5fZGVzdHJveT1mdW5jdGlvbih0LGUpe3ZhciByPXRoaXM7Y3IucHJvdG90eXBlLl9kZXN0cm95LmNhbGwodGhpcyx0LChmdW5jdGlvbih0KXtlKHQpLHIuZW1pdCgiY2xvc2UiKX0pKX07dmFyIGNuPWhuLGxuPU9iamVjdC5jcmVhdGUodGUpO2Z1bmN0aW9uIGhuKHQpe2lmKCEodGhpcyBpbnN0YW5jZW9mIGhuKSlyZXR1cm4gbmV3IGhuKHQpO25uLmNhbGwodGhpcyx0KX1sbi5pbmhlcml0cz1lZSxsbi5pbmhlcml0cyhobixubiksaG4ucHJvdG90eXBlLl90cmFuc2Zvcm09ZnVuY3Rpb24odCxlLHIpe3IobnVsbCx0KX07dmFyIGRuPWEoKGZ1bmN0aW9uKHQsZSl7KGU9dC5leHBvcnRzPU1yKS5TdHJlYW09ZSxlLlJlYWRhYmxlPWUsZS5Xcml0YWJsZT1HZSxlLkR1cGxleD1jcixlLlRyYW5zZm9ybT1ubixlLlBhc3NUaHJvdWdoPWNufSkpLlJlYWRhYmxlLHBuPXZuO3ZuLmN0b3I9eW4sdm4ub2JqPWZ1bmN0aW9uKHQsZSl7cmV0dXJuKCJmdW5jdGlvbiI9PXR5cGVvZiB0fHxBcnJheS5pc0FycmF5KHQpKSYmKGU9dCx0PXt9KSwodD1tbih0KSkub2JqZWN0TW9kZT0hMCx0LmhpZ2hXYXRlck1hcms9MTYsdm4odCxlKX07dmFyIGduPXluKCk7ZnVuY3Rpb24gdm4odCxlKXsoIm9iamVjdCIhPT1uKHQpfHxBcnJheS5pc0FycmF5KHQpKSYmKGU9dCx0PXt9KTt2YXIgcixpPW5ldyBnbih0KTtyZXR1cm4gaS5fZnJvbT1BcnJheS5pc0FycmF5KGUpPyhyPShyPWUpLnNsaWNlKCksZnVuY3Rpb24odCxlKXt2YXIgbj1udWxsLGk9ci5sZW5ndGg/ci5zaGlmdCgpOm51bGw7aSBpbnN0YW5jZW9mIEVycm9yJiYobj1pLGk9bnVsbCksZShuLGkpfSk6ZXx8Ym4saX1mdW5jdGlvbiB5bih0LGUpe2Z1bmN0aW9uIHIoZSl7aWYoISh0aGlzIGluc3RhbmNlb2YgcikpcmV0dXJuIG5ldyByKGUpO3RoaXMuX3JlYWRpbmc9ITEsdGhpcy5fY2FsbGJhY2s9ZnVuY3Rpb24odCxlKXtpZighbi5kZXN0cm95ZWQpcmV0dXJuIHQ/bi5kZXN0cm95KHQpOm51bGw9PT1lP24ucHVzaChudWxsKToobi5fcmVhZGluZz0hMSx2b2lkKG4ucHVzaChlKSYmbi5fcmVhZChpKSkpfSx0aGlzLmRlc3Ryb3llZD0hMSxkbi5jYWxsKHRoaXMsZXx8dCk7dmFyIG49dGhpcyxpPXRoaXMuX3JlYWRhYmxlU3RhdGUuaGlnaFdhdGVyTWFya31yZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgdCYmKGU9dCx0PXt9KSx0PW1uKHQpLGVlKHIsZG4pLHIucHJvdG90eXBlLl9mcm9tPWV8fGJuLHIucHJvdG90eXBlLl9yZWFkPWZ1bmN0aW9uKHQpe3RoaXMuX3JlYWRpbmd8fHRoaXMuZGVzdHJveWVkfHwodGhpcy5fcmVhZGluZz0hMCx0aGlzLl9mcm9tKHQsdGhpcy5fY2FsbGJhY2spKX0sci5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbih0KXtpZighdGhpcy5kZXN0cm95ZWQpe3RoaXMuZGVzdHJveWVkPSEwO3ZhciBlPXRoaXM7Q3QubmV4dFRpY2soKGZ1bmN0aW9uKCl7dCYmZS5lbWl0KCJlcnJvciIsdCksZS5lbWl0KCJjbG9zZSIpfSkpfX0scn1mdW5jdGlvbiBibigpe31mdW5jdGlvbiBtbih0KXtyZXR1cm4gdHx8e319dmFyIHduPWZ1bmN0aW9uKHQpe3JldHVybiB0IGluc3RhbmNlb2YgUHJvbWlzZXx8ZnVuY3Rpb24odCl7cmV0dXJuIG51bGwhPT10JiYoIm9iamVjdCI9PT1uKHQpfHwiZnVuY3Rpb24iPT10eXBlb2YgdCl9KHQpJiYiZnVuY3Rpb24iPT10eXBlb2YgdC50aGVuJiYiZnVuY3Rpb24iPT10eXBlb2YgdC5jYXRjaH07ZnVuY3Rpb24gU24odCl7dmFyIGUsbixpO2Z1bmN0aW9uIG8ocil7KCh0PXIpaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcnx8QXJyYXlCdWZmZXIuaXNWaWV3KHQpJiYhRS5pc0J1ZmZlcih0KSkmJih0PUUuZnJvbSh0KSk7dmFyIG89IShlPXduKHQpP3Q6bnVsbCkmJnRbU3ltYm9sLml0ZXJhdG9yXSYmInN0cmluZyIhPXR5cGVvZiB0JiYhRS5pc0J1ZmZlcih0KTtuPW8/dFtTeW1ib2wuaXRlcmF0b3JdKCk6bnVsbDt2YXIgYT0hZSYmdFtTeW1ib2wuYXN5bmNJdGVyYXRvcl07aT1hP3RbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCk6bnVsbH1yZXR1cm4gQXJyYXkuaXNBcnJheSh0KSYmKHQ9dC5zbGljZSgpKSxvKHQpLHBuKChmdW5jdGlvbiBhKHUsZil7dmFyIGM9dGhpcztpZihlKXIocy5tYXJrKChmdW5jdGlvbiB0KCl7cmV0dXJuIHMud3JhcCgoZnVuY3Rpb24odCl7Zm9yKDs7KXN3aXRjaCh0LnByZXY9dC5uZXh0KXtjYXNlIDA6cmV0dXJuIHQucHJldj0wLHQudDA9byx0Lm5leHQ9NCxlO2Nhc2UgNDpyZXR1cm4gdC50MT10LnNlbnQsdC5uZXh0PTcsKDAsdC50MCkodC50MSk7Y2FzZSA3OmEuY2FsbChjLHUsZiksdC5uZXh0PTEzO2JyZWFrO2Nhc2UgMTA6dC5wcmV2PTEwLHQudDI9dC5jYXRjaCgwKSxmKHQudDIpO2Nhc2UgMTM6Y2FzZSJlbmQiOnJldHVybiB0LnN0b3AoKX19KSx0LG51bGwsW1swLDEwXV0pfSkpKSgpO2Vsc2UgaWYobil7dmFyIGw9bi5uZXh0KCk7c2V0SW1tZWRpYXRlKGYsbnVsbCxsLmRvbmU/bnVsbDpsLnZhbHVlKX1lbHNlIGlmKGkpcihzLm1hcmsoKGZ1bmN0aW9uIHQoKXt2YXIgZTtyZXR1cm4gcy53cmFwKChmdW5jdGlvbih0KXtmb3IoOzspc3dpdGNoKHQucHJldj10Lm5leHQpe2Nhc2UgMDpyZXR1cm4gdC5wcmV2PTAsdC5uZXh0PTMsaS5uZXh0KCk7Y2FzZSAzOmU9dC5zZW50LHNldEltbWVkaWF0ZShmLG51bGwsZS5kb25lP251bGw6ZS52YWx1ZSksdC5uZXh0PTEwO2JyZWFrO2Nhc2UgNzp0LnByZXY9Nyx0LnQwPXQuY2F0Y2goMCksc2V0SW1tZWRpYXRlKGYsdC50MCk7Y2FzZSAxMDpjYXNlImVuZCI6cmV0dXJuIHQuc3RvcCgpfX0pLHQsbnVsbCxbWzAsN11dKX0pKSkoKTtlbHNlIGlmKDAhPT10Lmxlbmd0aCl7dmFyIGg9dC5zbGljZSgwLHUpO3Q9dC5zbGljZSh1KSxzZXRJbW1lZGlhdGUoZixudWxsLGgpfWVsc2Ugc2V0SW1tZWRpYXRlKGYsbnVsbCxudWxsKX0pKX1mdW5jdGlvbiBfbigpe3RoaXMuaGVhZD1udWxsLHRoaXMudGFpbD1udWxsLHRoaXMubGVuZ3RoPTB9U24ub2JqZWN0PWZ1bmN0aW9uKHQpe3ZhciBlLG4saTtmdW5jdGlvbiBvKHIpe2U9d24odD1yKT90Om51bGwsbj0hZSYmdFtTeW1ib2wuaXRlcmF0b3JdP3RbU3ltYm9sLml0ZXJhdG9yXSgpOm51bGwsaT0hZSYmdFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0/dFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKTpudWxsfXJldHVybiBBcnJheS5pc0FycmF5KHQpJiYodD10LnNsaWNlKCkpLG8odCkscG4ub2JqKChmdW5jdGlvbiBhKHUsZil7dmFyIGM9dGhpcztpZihlKXIocy5tYXJrKChmdW5jdGlvbiB0KCl7cmV0dXJuIHMud3JhcCgoZnVuY3Rpb24odCl7Zm9yKDs7KXN3aXRjaCh0LnByZXY9dC5uZXh0KXtjYXNlIDA6cmV0dXJuIHQucHJldj0wLHQudDA9byx0Lm5leHQ9NCxlO2Nhc2UgNDpyZXR1cm4gdC50MT10LnNlbnQsdC5uZXh0PTcsKDAsdC50MCkodC50MSk7Y2FzZSA3OmEuY2FsbChjLHUsZiksdC5uZXh0PTEzO2JyZWFrO2Nhc2UgMTA6dC5wcmV2PTEwLHQudDI9dC5jYXRjaCgwKSxmKHQudDIpO2Nhc2UgMTM6Y2FzZSJlbmQiOnJldHVybiB0LnN0b3AoKX19KSx0LG51bGwsW1swLDEwXV0pfSkpKSgpO2Vsc2UgaWYobil7dmFyIGw9bi5uZXh0KCk7c2V0SW1tZWRpYXRlKGYsbnVsbCxsLmRvbmU/bnVsbDpsLnZhbHVlKX1lbHNlIGk/cihzLm1hcmsoKGZ1bmN0aW9uIHQoKXt2YXIgZTtyZXR1cm4gcy53cmFwKChmdW5jdGlvbih0KXtmb3IoOzspc3dpdGNoKHQucHJldj10Lm5leHQpe2Nhc2UgMDpyZXR1cm4gdC5wcmV2PTAsdC5uZXh0PTMsaS5uZXh0KCk7Y2FzZSAzOmU9dC5zZW50LHNldEltbWVkaWF0ZShmLG51bGwsZS5kb25lP251bGw6ZS52YWx1ZSksdC5uZXh0PTEwO2JyZWFrO2Nhc2UgNzp0LnByZXY9Nyx0LnQwPXQuY2F0Y2goMCksc2V0SW1tZWRpYXRlKGYsdC50MCk7Y2FzZSAxMDpjYXNlImVuZCI6cmV0dXJuIHQuc3RvcCgpfX0pLHQsbnVsbCxbWzAsN11dKX0pKSkoKToodGhpcy5wdXNoKHQpLHNldEltbWVkaWF0ZShmLG51bGwsbnVsbCkpfSkpfSxfbi5wcm90b3R5cGUucHVzaD1mdW5jdGlvbih0KXt2YXIgZT17ZGF0YTp0LG5leHQ6bnVsbH07dGhpcy5sZW5ndGg+MD90aGlzLnRhaWwubmV4dD1lOnRoaXMuaGVhZD1lLHRoaXMudGFpbD1lLCsrdGhpcy5sZW5ndGh9LF9uLnByb3RvdHlwZS51bnNoaWZ0PWZ1bmN0aW9uKHQpe3ZhciBlPXtkYXRhOnQsbmV4dDp0aGlzLmhlYWR9OzA9PT10aGlzLmxlbmd0aCYmKHRoaXMudGFpbD1lKSx0aGlzLmhlYWQ9ZSwrK3RoaXMubGVuZ3RofSxfbi5wcm90b3R5cGUuc2hpZnQ9ZnVuY3Rpb24oKXtpZigwIT09dGhpcy5sZW5ndGgpe3ZhciB0PXRoaXMuaGVhZC5kYXRhO3JldHVybiAxPT09dGhpcy5sZW5ndGg/dGhpcy5oZWFkPXRoaXMudGFpbD1udWxsOnRoaXMuaGVhZD10aGlzLmhlYWQubmV4dCwtLXRoaXMubGVuZ3RoLHR9fSxfbi5wcm90b3R5cGUuY2xlYXI9ZnVuY3Rpb24oKXt0aGlzLmhlYWQ9dGhpcy50YWlsPW51bGwsdGhpcy5sZW5ndGg9MH0sX24ucHJvdG90eXBlLmpvaW49ZnVuY3Rpb24odCl7aWYoMD09PXRoaXMubGVuZ3RoKXJldHVybiIiO2Zvcih2YXIgZT10aGlzLmhlYWQscj0iIitlLmRhdGE7ZT1lLm5leHQ7KXIrPXQrZS5kYXRhO3JldHVybiByfSxfbi5wcm90b3R5cGUuY29uY2F0PWZ1bmN0aW9uKHQpe2lmKDA9PT10aGlzLmxlbmd0aClyZXR1cm4gRS5hbGxvYygwKTtpZigxPT09dGhpcy5sZW5ndGgpcmV0dXJuIHRoaXMuaGVhZC5kYXRhO2Zvcih2YXIgZT1FLmFsbG9jVW5zYWZlKHQ+Pj4wKSxyPXRoaXMuaGVhZCxuPTA7cjspci5kYXRhLmNvcHkoZSxuKSxuKz1yLmRhdGEubGVuZ3RoLHI9ci5uZXh0O3JldHVybiBlfTt2YXIgRW49RS5pc0VuY29kaW5nfHxmdW5jdGlvbih0KXtzd2l0Y2godCYmdC50b0xvd2VyQ2FzZSgpKXtjYXNlImhleCI6Y2FzZSJ1dGY4IjpjYXNlInV0Zi04IjpjYXNlImFzY2lpIjpjYXNlImJpbmFyeSI6Y2FzZSJiYXNlNjQiOmNhc2UidWNzMiI6Y2FzZSJ1Y3MtMiI6Y2FzZSJ1dGYxNmxlIjpjYXNlInV0Zi0xNmxlIjpjYXNlInJhdyI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19O2Z1bmN0aW9uIGtuKHQpe3N3aXRjaCh0aGlzLmVuY29kaW5nPSh0fHwidXRmOCIpLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvWy1fXS8sIiIpLGZ1bmN0aW9uKHQpe2lmKHQmJiFFbih0KSl0aHJvdyBuZXcgRXJyb3IoIlVua25vd24gZW5jb2Rpbmc6ICIrdCl9KHQpLHRoaXMuZW5jb2Rpbmcpe2Nhc2UidXRmOCI6dGhpcy5zdXJyb2dhdGVTaXplPTM7YnJlYWs7Y2FzZSJ1Y3MyIjpjYXNlInV0ZjE2bGUiOnRoaXMuc3Vycm9nYXRlU2l6ZT0yLHRoaXMuZGV0ZWN0SW5jb21wbGV0ZUNoYXI9eG47YnJlYWs7Y2FzZSJiYXNlNjQiOnRoaXMuc3Vycm9nYXRlU2l6ZT0zLHRoaXMuZGV0ZWN0SW5jb21wbGV0ZUNoYXI9T247YnJlYWs7ZGVmYXVsdDpyZXR1cm4gdm9pZCh0aGlzLndyaXRlPVJuKX10aGlzLmNoYXJCdWZmZXI9bmV3IEUoNiksdGhpcy5jaGFyUmVjZWl2ZWQ9MCx0aGlzLmNoYXJMZW5ndGg9MH1mdW5jdGlvbiBSbih0KXtyZXR1cm4gdC50b1N0cmluZyh0aGlzLmVuY29kaW5nKX1mdW5jdGlvbiB4bih0KXt0aGlzLmNoYXJSZWNlaXZlZD10Lmxlbmd0aCUyLHRoaXMuY2hhckxlbmd0aD10aGlzLmNoYXJSZWNlaXZlZD8yOjB9ZnVuY3Rpb24gT24odCl7dGhpcy5jaGFyUmVjZWl2ZWQ9dC5sZW5ndGglMyx0aGlzLmNoYXJMZW5ndGg9dGhpcy5jaGFyUmVjZWl2ZWQ/MzowfWtuLnByb3RvdHlwZS53cml0ZT1mdW5jdGlvbih0KXtmb3IodmFyIGU9IiI7dGhpcy5jaGFyTGVuZ3RoOyl7dmFyIHI9dC5sZW5ndGg+PXRoaXMuY2hhckxlbmd0aC10aGlzLmNoYXJSZWNlaXZlZD90aGlzLmNoYXJMZW5ndGgtdGhpcy5jaGFyUmVjZWl2ZWQ6dC5sZW5ndGg7aWYodC5jb3B5KHRoaXMuY2hhckJ1ZmZlcix0aGlzLmNoYXJSZWNlaXZlZCwwLHIpLHRoaXMuY2hhclJlY2VpdmVkKz1yLHRoaXMuY2hhclJlY2VpdmVkPHRoaXMuY2hhckxlbmd0aClyZXR1cm4iIjtpZih0PXQuc2xpY2Uocix0Lmxlbmd0aCksISgobj0oZT10aGlzLmNoYXJCdWZmZXIuc2xpY2UoMCx0aGlzLmNoYXJMZW5ndGgpLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcpKS5jaGFyQ29kZUF0KGUubGVuZ3RoLTEpKT49NTUyOTYmJm48PTU2MzE5KSl7aWYodGhpcy5jaGFyUmVjZWl2ZWQ9dGhpcy5jaGFyTGVuZ3RoPTAsMD09PXQubGVuZ3RoKXJldHVybiBlO2JyZWFrfXRoaXMuY2hhckxlbmd0aCs9dGhpcy5zdXJyb2dhdGVTaXplLGU9IiJ9dGhpcy5kZXRlY3RJbmNvbXBsZXRlQ2hhcih0KTt2YXIgbixpPXQubGVuZ3RoO2lmKHRoaXMuY2hhckxlbmd0aCYmKHQuY29weSh0aGlzLmNoYXJCdWZmZXIsMCx0Lmxlbmd0aC10aGlzLmNoYXJSZWNlaXZlZCxpKSxpLT10aGlzLmNoYXJSZWNlaXZlZCksaT0oZSs9dC50b1N0cmluZyh0aGlzLmVuY29kaW5nLDAsaSkpLmxlbmd0aC0xLChuPWUuY2hhckNvZGVBdChpKSk+PTU1Mjk2JiZuPD01NjMxOSl7dmFyIG89dGhpcy5zdXJyb2dhdGVTaXplO3JldHVybiB0aGlzLmNoYXJMZW5ndGgrPW8sdGhpcy5jaGFyUmVjZWl2ZWQrPW8sdGhpcy5jaGFyQnVmZmVyLmNvcHkodGhpcy5jaGFyQnVmZmVyLG8sMCxvKSx0LmNvcHkodGhpcy5jaGFyQnVmZmVyLDAsMCxvKSxlLnN1YnN0cmluZygwLGkpfXJldHVybiBlfSxrbi5wcm90b3R5cGUuZGV0ZWN0SW5jb21wbGV0ZUNoYXI9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXQubGVuZ3RoPj0zPzM6dC5sZW5ndGg7ZT4wO2UtLSl7dmFyIHI9dFt0Lmxlbmd0aC1lXTtpZigxPT1lJiZyPj41PT02KXt0aGlzLmNoYXJMZW5ndGg9MjticmVha31pZihlPD0yJiZyPj40PT0xNCl7dGhpcy5jaGFyTGVuZ3RoPTM7YnJlYWt9aWYoZTw9MyYmcj4+Mz09MzApe3RoaXMuY2hhckxlbmd0aD00O2JyZWFrfX10aGlzLmNoYXJSZWNlaXZlZD1lfSxrbi5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKHQpe3ZhciBlPSIiO2lmKHQmJnQubGVuZ3RoJiYoZT10aGlzLndyaXRlKHQpKSx0aGlzLmNoYXJSZWNlaXZlZCl7dmFyIHI9dGhpcy5jaGFyUmVjZWl2ZWQsbj10aGlzLmNoYXJCdWZmZXIsaT10aGlzLmVuY29kaW5nO2UrPW4uc2xpY2UoMCxyKS50b1N0cmluZyhpKX1yZXR1cm4gZX0sQW4uUmVhZGFibGVTdGF0ZT1Ubjt2YXIgam49dWUoInN0cmVhbSIpO2Z1bmN0aW9uIFRuKHQsZSl7dD10fHx7fSx0aGlzLm9iamVjdE1vZGU9ISF0Lm9iamVjdE1vZGUsZSBpbnN0YW5jZW9mIGlpJiYodGhpcy5vYmplY3RNb2RlPXRoaXMub2JqZWN0TW9kZXx8ISF0LnJlYWRhYmxlT2JqZWN0TW9kZSk7dmFyIHI9dC5oaWdoV2F0ZXJNYXJrLG49dGhpcy5vYmplY3RNb2RlPzE2OjE2Mzg0O3RoaXMuaGlnaFdhdGVyTWFyaz1yfHwwPT09cj9yOm4sdGhpcy5oaWdoV2F0ZXJNYXJrPX5+dGhpcy5oaWdoV2F0ZXJNYXJrLHRoaXMuYnVmZmVyPW5ldyBfbix0aGlzLmxlbmd0aD0wLHRoaXMucGlwZXM9bnVsbCx0aGlzLnBpcGVzQ291bnQ9MCx0aGlzLmZsb3dpbmc9bnVsbCx0aGlzLmVuZGVkPSExLHRoaXMuZW5kRW1pdHRlZD0hMSx0aGlzLnJlYWRpbmc9ITEsdGhpcy5zeW5jPSEwLHRoaXMubmVlZFJlYWRhYmxlPSExLHRoaXMuZW1pdHRlZFJlYWRhYmxlPSExLHRoaXMucmVhZGFibGVMaXN0ZW5pbmc9ITEsdGhpcy5yZXN1bWVTY2hlZHVsZWQ9ITEsdGhpcy5kZWZhdWx0RW5jb2Rpbmc9dC5kZWZhdWx0RW5jb2Rpbmd8fCJ1dGY4Iix0aGlzLnJhbk91dD0hMSx0aGlzLmF3YWl0RHJhaW49MCx0aGlzLnJlYWRpbmdNb3JlPSExLHRoaXMuZGVjb2Rlcj1udWxsLHRoaXMuZW5jb2Rpbmc9bnVsbCx0LmVuY29kaW5nJiYodGhpcy5kZWNvZGVyPW5ldyBrbih0LmVuY29kaW5nKSx0aGlzLmVuY29kaW5nPXQuZW5jb2RpbmcpfWZ1bmN0aW9uIEFuKHQpe2lmKCEodGhpcyBpbnN0YW5jZW9mIEFuKSlyZXR1cm4gbmV3IEFuKHQpO3RoaXMuX3JlYWRhYmxlU3RhdGU9bmV3IFRuKHQsdGhpcyksdGhpcy5yZWFkYWJsZT0hMCx0JiYiZnVuY3Rpb24iPT10eXBlb2YgdC5yZWFkJiYodGhpcy5fcmVhZD10LnJlYWQpLFV0LmNhbGwodGhpcyl9ZnVuY3Rpb24gTG4odCxlLHIsbixpKXt2YXIgbz1mdW5jdGlvbih0LGUpe3ZhciByPW51bGw7cmV0dXJuIEUuaXNCdWZmZXIoZSl8fCJzdHJpbmciPT10eXBlb2YgZXx8bnVsbD09ZXx8dC5vYmplY3RNb2RlfHwocj1uZXcgVHlwZUVycm9yKCJJbnZhbGlkIG5vbi1zdHJpbmcvYnVmZmVyIGNodW5rIikpLHJ9KGUscik7aWYobyl0LmVtaXQoImVycm9yIixvKTtlbHNlIGlmKG51bGw9PT1yKWUucmVhZGluZz0hMSxmdW5jdGlvbih0LGUpe2lmKCFlLmVuZGVkKXtpZihlLmRlY29kZXIpe3ZhciByPWUuZGVjb2Rlci5lbmQoKTtyJiZyLmxlbmd0aCYmKGUuYnVmZmVyLnB1c2gociksZS5sZW5ndGgrPWUub2JqZWN0TW9kZT8xOnIubGVuZ3RoKX1lLmVuZGVkPSEwLFBuKHQpfX0odCxlKTtlbHNlIGlmKGUub2JqZWN0TW9kZXx8ciYmci5sZW5ndGg+MClpZihlLmVuZGVkJiYhaSl7dmFyIGE9bmV3IEVycm9yKCJzdHJlYW0ucHVzaCgpIGFmdGVyIEVPRiIpO3QuZW1pdCgiZXJyb3IiLGEpfWVsc2UgaWYoZS5lbmRFbWl0dGVkJiZpKXt2YXIgcz1uZXcgRXJyb3IoInN0cmVhbS51bnNoaWZ0KCkgYWZ0ZXIgZW5kIGV2ZW50Iik7dC5lbWl0KCJlcnJvciIscyl9ZWxzZXt2YXIgdTshZS5kZWNvZGVyfHxpfHxufHwocj1lLmRlY29kZXIud3JpdGUociksdT0hZS5vYmplY3RNb2RlJiYwPT09ci5sZW5ndGgpLGl8fChlLnJlYWRpbmc9ITEpLHV8fChlLmZsb3dpbmcmJjA9PT1lLmxlbmd0aCYmIWUuc3luYz8odC5lbWl0KCJkYXRhIixyKSx0LnJlYWQoMCkpOihlLmxlbmd0aCs9ZS5vYmplY3RNb2RlPzE6ci5sZW5ndGgsaT9lLmJ1ZmZlci51bnNoaWZ0KHIpOmUuYnVmZmVyLnB1c2gociksZS5uZWVkUmVhZGFibGUmJlBuKHQpKSksZnVuY3Rpb24odCxlKXtlLnJlYWRpbmdNb3JlfHwoZS5yZWFkaW5nTW9yZT0hMCx3dChObix0LGUpKX0odCxlKX1lbHNlIGl8fChlLnJlYWRpbmc9ITEpO3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4hdC5lbmRlZCYmKHQubmVlZFJlYWRhYmxlfHx0Lmxlbmd0aDx0LmhpZ2hXYXRlck1hcmt8fDA9PT10Lmxlbmd0aCl9KGUpfXJlKEFuLFV0KSxBbi5wcm90b3R5cGUucHVzaD1mdW5jdGlvbih0LGUpe3ZhciByPXRoaXMuX3JlYWRhYmxlU3RhdGU7cmV0dXJuIHIub2JqZWN0TW9kZXx8InN0cmluZyIhPXR5cGVvZiB0fHwoZT1lfHxyLmRlZmF1bHRFbmNvZGluZykhPT1yLmVuY29kaW5nJiYodD1FLmZyb20odCxlKSxlPSIiKSxMbih0aGlzLHIsdCxlLCExKX0sQW4ucHJvdG90eXBlLnVuc2hpZnQ9ZnVuY3Rpb24odCl7cmV0dXJuIExuKHRoaXMsdGhpcy5fcmVhZGFibGVTdGF0ZSx0LCIiLCEwKX0sQW4ucHJvdG90eXBlLmlzUGF1c2VkPWZ1bmN0aW9uKCl7cmV0dXJuITE9PT10aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmd9LEFuLnByb3RvdHlwZS5zZXRFbmNvZGluZz1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fcmVhZGFibGVTdGF0ZS5kZWNvZGVyPW5ldyBrbih0KSx0aGlzLl9yZWFkYWJsZVN0YXRlLmVuY29kaW5nPXQsdGhpc307dmFyIE1uPTgzODg2MDg7ZnVuY3Rpb24gQ24odCxlKXtyZXR1cm4gdDw9MHx8MD09PWUubGVuZ3RoJiZlLmVuZGVkPzA6ZS5vYmplY3RNb2RlPzE6dCE9dD9lLmZsb3dpbmcmJmUubGVuZ3RoP2UuYnVmZmVyLmhlYWQuZGF0YS5sZW5ndGg6ZS5sZW5ndGg6KHQ+ZS5oaWdoV2F0ZXJNYXJrJiYoZS5oaWdoV2F0ZXJNYXJrPWZ1bmN0aW9uKHQpe3JldHVybiB0Pj1Nbj90PU1uOih0LS0sdHw9dD4+PjEsdHw9dD4+PjIsdHw9dD4+PjQsdHw9dD4+PjgsdHw9dD4+PjE2LHQrKyksdH0odCkpLHQ8PWUubGVuZ3RoP3Q6ZS5lbmRlZD9lLmxlbmd0aDooZS5uZWVkUmVhZGFibGU9ITAsMCkpfWZ1bmN0aW9uIFBuKHQpe3ZhciBlPXQuX3JlYWRhYmxlU3RhdGU7ZS5uZWVkUmVhZGFibGU9ITEsZS5lbWl0dGVkUmVhZGFibGV8fChqbigiZW1pdFJlYWRhYmxlIixlLmZsb3dpbmcpLGUuZW1pdHRlZFJlYWRhYmxlPSEwLGUuc3luYz93dChJbix0KTpJbih0KSl9ZnVuY3Rpb24gSW4odCl7am4oImVtaXQgcmVhZGFibGUiKSx0LmVtaXQoInJlYWRhYmxlIiksRG4odCl9ZnVuY3Rpb24gTm4odCxlKXtmb3IodmFyIHI9ZS5sZW5ndGg7IWUucmVhZGluZyYmIWUuZmxvd2luZyYmIWUuZW5kZWQmJmUubGVuZ3RoPGUuaGlnaFdhdGVyTWFyayYmKGpuKCJtYXliZVJlYWRNb3JlIHJlYWQgMCIpLHQucmVhZCgwKSxyIT09ZS5sZW5ndGgpOylyPWUubGVuZ3RoO2UucmVhZGluZ01vcmU9ITF9ZnVuY3Rpb24gQm4odCl7am4oInJlYWRhYmxlIG5leHR0aWNrIHJlYWQgMCIpLHQucmVhZCgwKX1mdW5jdGlvbiBVbih0LGUpe2UucmVhZGluZ3x8KGpuKCJyZXN1bWUgcmVhZCAwIiksdC5yZWFkKDApKSxlLnJlc3VtZVNjaGVkdWxlZD0hMSxlLmF3YWl0RHJhaW49MCx0LmVtaXQoInJlc3VtZSIpLERuKHQpLGUuZmxvd2luZyYmIWUucmVhZGluZyYmdC5yZWFkKDApfWZ1bmN0aW9uIERuKHQpe3ZhciBlPXQuX3JlYWRhYmxlU3RhdGU7Zm9yKGpuKCJmbG93IixlLmZsb3dpbmcpO2UuZmxvd2luZyYmbnVsbCE9PXQucmVhZCgpOyk7fWZ1bmN0aW9uIEZuKHQsZSl7cmV0dXJuIDA9PT1lLmxlbmd0aD9udWxsOihlLm9iamVjdE1vZGU/cj1lLmJ1ZmZlci5zaGlmdCgpOiF0fHx0Pj1lLmxlbmd0aD8ocj1lLmRlY29kZXI/ZS5idWZmZXIuam9pbigiIik6MT09PWUuYnVmZmVyLmxlbmd0aD9lLmJ1ZmZlci5oZWFkLmRhdGE6ZS5idWZmZXIuY29uY2F0KGUubGVuZ3RoKSxlLmJ1ZmZlci5jbGVhcigpKTpyPWZ1bmN0aW9uKHQsZSxyKXt2YXIgbjtyZXR1cm4gdDxlLmhlYWQuZGF0YS5sZW5ndGg/KG49ZS5oZWFkLmRhdGEuc2xpY2UoMCx0KSxlLmhlYWQuZGF0YT1lLmhlYWQuZGF0YS5zbGljZSh0KSk6bj10PT09ZS5oZWFkLmRhdGEubGVuZ3RoP2Uuc2hpZnQoKTpyP2Z1bmN0aW9uKHQsZSl7dmFyIHI9ZS5oZWFkLG49MSxpPXIuZGF0YTtmb3IodC09aS5sZW5ndGg7cj1yLm5leHQ7KXt2YXIgbz1yLmRhdGEsYT10Pm8ubGVuZ3RoP28ubGVuZ3RoOnQ7aWYoYT09PW8ubGVuZ3RoP2krPW86aSs9by5zbGljZSgwLHQpLDA9PSh0LT1hKSl7YT09PW8ubGVuZ3RoPygrK24sci5uZXh0P2UuaGVhZD1yLm5leHQ6ZS5oZWFkPWUudGFpbD1udWxsKTooZS5oZWFkPXIsci5kYXRhPW8uc2xpY2UoYSkpO2JyZWFrfSsrbn1yZXR1cm4gZS5sZW5ndGgtPW4saX0odCxlKTpmdW5jdGlvbih0LGUpe3ZhciByPUUuYWxsb2NVbnNhZmUodCksbj1lLmhlYWQsaT0xO2ZvcihuLmRhdGEuY29weShyKSx0LT1uLmRhdGEubGVuZ3RoO249bi5uZXh0Oyl7dmFyIG89bi5kYXRhLGE9dD5vLmxlbmd0aD9vLmxlbmd0aDp0O2lmKG8uY29weShyLHIubGVuZ3RoLXQsMCxhKSwwPT0odC09YSkpe2E9PT1vLmxlbmd0aD8oKytpLG4ubmV4dD9lLmhlYWQ9bi5uZXh0OmUuaGVhZD1lLnRhaWw9bnVsbCk6KGUuaGVhZD1uLG4uZGF0YT1vLnNsaWNlKGEpKTticmVha30rK2l9cmV0dXJuIGUubGVuZ3RoLT1pLHJ9KHQsZSksbn0odCxlLmJ1ZmZlcixlLmRlY29kZXIpLHIpO3ZhciByfWZ1bmN0aW9uIHFuKHQpe3ZhciBlPXQuX3JlYWRhYmxlU3RhdGU7aWYoZS5sZW5ndGg+MCl0aHJvdyBuZXcgRXJyb3IoJyJlbmRSZWFkYWJsZSgpIiBjYWxsZWQgb24gbm9uLWVtcHR5IHN0cmVhbScpO2UuZW5kRW1pdHRlZHx8KGUuZW5kZWQ9ITAsd3Qoem4sZSx0KSl9ZnVuY3Rpb24gem4odCxlKXt0LmVuZEVtaXR0ZWR8fDAhPT10Lmxlbmd0aHx8KHQuZW5kRW1pdHRlZD0hMCxlLnJlYWRhYmxlPSExLGUuZW1pdCgiZW5kIikpfWZ1bmN0aW9uIFduKHQsZSl7Zm9yKHZhciByPTAsbj10Lmxlbmd0aDtyPG47cisrKWlmKHRbcl09PT1lKXJldHVybiByO3JldHVybi0xfWZ1bmN0aW9uIFluKCl7fWZ1bmN0aW9uIEduKHQsZSxyKXt0aGlzLmNodW5rPXQsdGhpcy5lbmNvZGluZz1lLHRoaXMuY2FsbGJhY2s9cix0aGlzLm5leHQ9bnVsbH1mdW5jdGlvbiAkbih0LGUpe09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCJidWZmZXIiLHtnZXQ6b2UoKGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0QnVmZmVyKCl9KSwiX3dyaXRhYmxlU3RhdGUuYnVmZmVyIGlzIGRlcHJlY2F0ZWQuIFVzZSBfd3JpdGFibGVTdGF0ZS5nZXRCdWZmZXIgaW5zdGVhZC4iKX0pLHQ9dHx8e30sdGhpcy5vYmplY3RNb2RlPSEhdC5vYmplY3RNb2RlLGUgaW5zdGFuY2VvZiBpaSYmKHRoaXMub2JqZWN0TW9kZT10aGlzLm9iamVjdE1vZGV8fCEhdC53cml0YWJsZU9iamVjdE1vZGUpO3ZhciByPXQuaGlnaFdhdGVyTWFyayxuPXRoaXMub2JqZWN0TW9kZT8xNjoxNjM4NDt0aGlzLmhpZ2hXYXRlck1hcms9cnx8MD09PXI/cjpuLHRoaXMuaGlnaFdhdGVyTWFyaz1+fnRoaXMuaGlnaFdhdGVyTWFyayx0aGlzLm5lZWREcmFpbj0hMSx0aGlzLmVuZGluZz0hMSx0aGlzLmVuZGVkPSExLHRoaXMuZmluaXNoZWQ9ITE7dmFyIGk9ITE9PT10LmRlY29kZVN0cmluZ3M7dGhpcy5kZWNvZGVTdHJpbmdzPSFpLHRoaXMuZGVmYXVsdEVuY29kaW5nPXQuZGVmYXVsdEVuY29kaW5nfHwidXRmOCIsdGhpcy5sZW5ndGg9MCx0aGlzLndyaXRpbmc9ITEsdGhpcy5jb3JrZWQ9MCx0aGlzLnN5bmM9ITAsdGhpcy5idWZmZXJQcm9jZXNzaW5nPSExLHRoaXMub253cml0ZT1mdW5jdGlvbih0KXshZnVuY3Rpb24odCxlKXt2YXIgcj10Ll93cml0YWJsZVN0YXRlLG49ci5zeW5jLGk9ci53cml0ZWNiO2lmKGZ1bmN0aW9uKHQpe3Qud3JpdGluZz0hMSx0LndyaXRlY2I9bnVsbCx0Lmxlbmd0aC09dC53cml0ZWxlbix0LndyaXRlbGVuPTB9KHIpLGUpIWZ1bmN0aW9uKHQsZSxyLG4saSl7LS1lLnBlbmRpbmdjYixyP3d0KGksbik6aShuKSx0Ll93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZD0hMCx0LmVtaXQoImVycm9yIixuKX0odCxyLG4sZSxpKTtlbHNle3ZhciBvPVhuKHIpO298fHIuY29ya2VkfHxyLmJ1ZmZlclByb2Nlc3Npbmd8fCFyLmJ1ZmZlcmVkUmVxdWVzdHx8S24odCxyKSxuP3d0KEpuLHQscixvLGkpOkpuKHQscixvLGkpfX0oZSx0KX0sdGhpcy53cml0ZWNiPW51bGwsdGhpcy53cml0ZWxlbj0wLHRoaXMuYnVmZmVyZWRSZXF1ZXN0PW51bGwsdGhpcy5sYXN0QnVmZmVyZWRSZXF1ZXN0PW51bGwsdGhpcy5wZW5kaW5nY2I9MCx0aGlzLnByZWZpbmlzaGVkPSExLHRoaXMuZXJyb3JFbWl0dGVkPSExLHRoaXMuYnVmZmVyZWRSZXF1ZXN0Q291bnQ9MCx0aGlzLmNvcmtlZFJlcXVlc3RzRnJlZT1uZXcgdGkodGhpcyl9ZnVuY3Rpb24gSG4odCl7aWYoISh0aGlzIGluc3RhbmNlb2YgSG58fHRoaXMgaW5zdGFuY2VvZiBpaSkpcmV0dXJuIG5ldyBIbih0KTt0aGlzLl93cml0YWJsZVN0YXRlPW5ldyAkbih0LHRoaXMpLHRoaXMud3JpdGFibGU9ITAsdCYmKCJmdW5jdGlvbiI9PXR5cGVvZiB0LndyaXRlJiYodGhpcy5fd3JpdGU9dC53cml0ZSksImZ1bmN0aW9uIj09dHlwZW9mIHQud3JpdGV2JiYodGhpcy5fd3JpdGV2PXQud3JpdGV2KSksVXQuY2FsbCh0aGlzKX1mdW5jdGlvbiBWbih0LGUscixuLGksbyxhKXtlLndyaXRlbGVuPW4sZS53cml0ZWNiPWEsZS53cml0aW5nPSEwLGUuc3luYz0hMCxyP3QuX3dyaXRldihpLGUub253cml0ZSk6dC5fd3JpdGUoaSxvLGUub253cml0ZSksZS5zeW5jPSExfWZ1bmN0aW9uIEpuKHQsZSxyLG4pe3J8fGZ1bmN0aW9uKHQsZSl7MD09PWUubGVuZ3RoJiZlLm5lZWREcmFpbiYmKGUubmVlZERyYWluPSExLHQuZW1pdCgiZHJhaW4iKSl9KHQsZSksZS5wZW5kaW5nY2ItLSxuKCksWm4odCxlKX1mdW5jdGlvbiBLbih0LGUpe2UuYnVmZmVyUHJvY2Vzc2luZz0hMDt2YXIgcj1lLmJ1ZmZlcmVkUmVxdWVzdDtpZih0Ll93cml0ZXYmJnImJnIubmV4dCl7dmFyIG49ZS5idWZmZXJlZFJlcXVlc3RDb3VudCxpPW5ldyBBcnJheShuKSxvPWUuY29ya2VkUmVxdWVzdHNGcmVlO28uZW50cnk9cjtmb3IodmFyIGE9MDtyOylpW2FdPXIscj1yLm5leHQsYSs9MTtWbih0LGUsITAsZS5sZW5ndGgsaSwiIixvLmZpbmlzaCksZS5wZW5kaW5nY2IrKyxlLmxhc3RCdWZmZXJlZFJlcXVlc3Q9bnVsbCxvLm5leHQ/KGUuY29ya2VkUmVxdWVzdHNGcmVlPW8ubmV4dCxvLm5leHQ9bnVsbCk6ZS5jb3JrZWRSZXF1ZXN0c0ZyZWU9bmV3IHRpKGUpfWVsc2V7Zm9yKDtyOyl7dmFyIHM9ci5jaHVuayx1PXIuZW5jb2RpbmcsZj1yLmNhbGxiYWNrO2lmKFZuKHQsZSwhMSxlLm9iamVjdE1vZGU/MTpzLmxlbmd0aCxzLHUsZikscj1yLm5leHQsZS53cml0aW5nKWJyZWFrfW51bGw9PT1yJiYoZS5sYXN0QnVmZmVyZWRSZXF1ZXN0PW51bGwpfWUuYnVmZmVyZWRSZXF1ZXN0Q291bnQ9MCxlLmJ1ZmZlcmVkUmVxdWVzdD1yLGUuYnVmZmVyUHJvY2Vzc2luZz0hMX1mdW5jdGlvbiBYbih0KXtyZXR1cm4gdC5lbmRpbmcmJjA9PT10Lmxlbmd0aCYmbnVsbD09PXQuYnVmZmVyZWRSZXF1ZXN0JiYhdC5maW5pc2hlZCYmIXQud3JpdGluZ31mdW5jdGlvbiBRbih0LGUpe2UucHJlZmluaXNoZWR8fChlLnByZWZpbmlzaGVkPSEwLHQuZW1pdCgicHJlZmluaXNoIikpfWZ1bmN0aW9uIFpuKHQsZSl7dmFyIHI9WG4oZSk7cmV0dXJuIHImJigwPT09ZS5wZW5kaW5nY2I/KFFuKHQsZSksZS5maW5pc2hlZD0hMCx0LmVtaXQoImZpbmlzaCIpKTpRbih0LGUpKSxyfWZ1bmN0aW9uIHRpKHQpe3ZhciBlPXRoaXM7dGhpcy5uZXh0PW51bGwsdGhpcy5lbnRyeT1udWxsLHRoaXMuZmluaXNoPWZ1bmN0aW9uKHIpe3ZhciBuPWUuZW50cnk7Zm9yKGUuZW50cnk9bnVsbDtuOyl7dmFyIGk9bi5jYWxsYmFjazt0LnBlbmRpbmdjYi0tLGkociksbj1uLm5leHR9dC5jb3JrZWRSZXF1ZXN0c0ZyZWU/dC5jb3JrZWRSZXF1ZXN0c0ZyZWUubmV4dD1lOnQuY29ya2VkUmVxdWVzdHNGcmVlPWV9fUFuLnByb3RvdHlwZS5yZWFkPWZ1bmN0aW9uKHQpe2puKCJyZWFkIix0KSx0PXBhcnNlSW50KHQsMTApO3ZhciBlPXRoaXMuX3JlYWRhYmxlU3RhdGUscj10O2lmKDAhPT10JiYoZS5lbWl0dGVkUmVhZGFibGU9ITEpLDA9PT10JiZlLm5lZWRSZWFkYWJsZSYmKGUubGVuZ3RoPj1lLmhpZ2hXYXRlck1hcmt8fGUuZW5kZWQpKXJldHVybiBqbigicmVhZDogZW1pdFJlYWRhYmxlIixlLmxlbmd0aCxlLmVuZGVkKSwwPT09ZS5sZW5ndGgmJmUuZW5kZWQ/cW4odGhpcyk6UG4odGhpcyksbnVsbDtpZigwPT09KHQ9Q24odCxlKSkmJmUuZW5kZWQpcmV0dXJuIDA9PT1lLmxlbmd0aCYmcW4odGhpcyksbnVsbDt2YXIgbixpPWUubmVlZFJlYWRhYmxlO3JldHVybiBqbigibmVlZCByZWFkYWJsZSIsaSksKDA9PT1lLmxlbmd0aHx8ZS5sZW5ndGgtdDxlLmhpZ2hXYXRlck1hcmspJiZqbigibGVuZ3RoIGxlc3MgdGhhbiB3YXRlcm1hcmsiLGk9ITApLGUuZW5kZWR8fGUucmVhZGluZz9qbigicmVhZGluZyBvciBlbmRlZCIsaT0hMSk6aSYmKGpuKCJkbyByZWFkIiksZS5yZWFkaW5nPSEwLGUuc3luYz0hMCwwPT09ZS5sZW5ndGgmJihlLm5lZWRSZWFkYWJsZT0hMCksdGhpcy5fcmVhZChlLmhpZ2hXYXRlck1hcmspLGUuc3luYz0hMSxlLnJlYWRpbmd8fCh0PUNuKHIsZSkpKSxudWxsPT09KG49dD4wP0ZuKHQsZSk6bnVsbCk/KGUubmVlZFJlYWRhYmxlPSEwLHQ9MCk6ZS5sZW5ndGgtPXQsMD09PWUubGVuZ3RoJiYoZS5lbmRlZHx8KGUubmVlZFJlYWRhYmxlPSEwKSxyIT09dCYmZS5lbmRlZCYmcW4odGhpcykpLG51bGwhPT1uJiZ0aGlzLmVtaXQoImRhdGEiLG4pLG59LEFuLnByb3RvdHlwZS5fcmVhZD1mdW5jdGlvbih0KXt0aGlzLmVtaXQoImVycm9yIixuZXcgRXJyb3IoIm5vdCBpbXBsZW1lbnRlZCIpKX0sQW4ucHJvdG90eXBlLnBpcGU9ZnVuY3Rpb24odCxlKXt2YXIgcj10aGlzLG49dGhpcy5fcmVhZGFibGVTdGF0ZTtzd2l0Y2gobi5waXBlc0NvdW50KXtjYXNlIDA6bi5waXBlcz10O2JyZWFrO2Nhc2UgMTpuLnBpcGVzPVtuLnBpcGVzLHRdO2JyZWFrO2RlZmF1bHQ6bi5waXBlcy5wdXNoKHQpfW4ucGlwZXNDb3VudCs9MSxqbigicGlwZSBjb3VudD0lZCBvcHRzPSVqIixuLnBpcGVzQ291bnQsZSk7dmFyIGk9ZSYmITE9PT1lLmVuZD9mOmE7ZnVuY3Rpb24gbyh0KXtqbigib251bnBpcGUiKSx0PT09ciYmZigpfWZ1bmN0aW9uIGEoKXtqbigib25lbmQiKSx0LmVuZCgpfW4uZW5kRW1pdHRlZD93dChpKTpyLm9uY2UoImVuZCIsaSksdC5vbigidW5waXBlIixvKTt2YXIgcz1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZT10Ll9yZWFkYWJsZVN0YXRlO2puKCJwaXBlT25EcmFpbiIsZS5hd2FpdERyYWluKSxlLmF3YWl0RHJhaW4mJmUuYXdhaXREcmFpbi0tLDA9PT1lLmF3YWl0RHJhaW4mJnQubGlzdGVuZXJzKCJkYXRhIikubGVuZ3RoJiYoZS5mbG93aW5nPSEwLERuKHQpKX19KHIpO3Qub24oImRyYWluIixzKTt2YXIgdT0hMTtmdW5jdGlvbiBmKCl7am4oImNsZWFudXAiKSx0LnJlbW92ZUxpc3RlbmVyKCJjbG9zZSIsZCksdC5yZW1vdmVMaXN0ZW5lcigiZmluaXNoIixwKSx0LnJlbW92ZUxpc3RlbmVyKCJkcmFpbiIscyksdC5yZW1vdmVMaXN0ZW5lcigiZXJyb3IiLGgpLHQucmVtb3ZlTGlzdGVuZXIoInVucGlwZSIsbyksci5yZW1vdmVMaXN0ZW5lcigiZW5kIixhKSxyLnJlbW92ZUxpc3RlbmVyKCJlbmQiLGYpLHIucmVtb3ZlTGlzdGVuZXIoImRhdGEiLGwpLHU9ITAsIW4uYXdhaXREcmFpbnx8dC5fd3JpdGFibGVTdGF0ZSYmIXQuX3dyaXRhYmxlU3RhdGUubmVlZERyYWlufHxzKCl9dmFyIGM9ITE7ZnVuY3Rpb24gbChlKXtqbigib25kYXRhIiksYz0hMSwhMSE9PXQud3JpdGUoZSl8fGN8fCgoMT09PW4ucGlwZXNDb3VudCYmbi5waXBlcz09PXR8fG4ucGlwZXNDb3VudD4xJiYtMSE9PVduKG4ucGlwZXMsdCkpJiYhdSYmKGpuKCJmYWxzZSB3cml0ZSByZXNwb25zZSwgcGF1c2UiLHIuX3JlYWRhYmxlU3RhdGUuYXdhaXREcmFpbiksci5fcmVhZGFibGVTdGF0ZS5hd2FpdERyYWluKyssYz0hMCksci5wYXVzZSgpKX1mdW5jdGlvbiBoKGUpe3ZhciByO2puKCJvbmVycm9yIixlKSxnKCksdC5yZW1vdmVMaXN0ZW5lcigiZXJyb3IiLGgpLDA9PT0ocj0iZXJyb3IiLHQubGlzdGVuZXJzKHIpLmxlbmd0aCkmJnQuZW1pdCgiZXJyb3IiLGUpfWZ1bmN0aW9uIGQoKXt0LnJlbW92ZUxpc3RlbmVyKCJmaW5pc2giLHApLGcoKX1mdW5jdGlvbiBwKCl7am4oIm9uZmluaXNoIiksdC5yZW1vdmVMaXN0ZW5lcigiY2xvc2UiLGQpLGcoKX1mdW5jdGlvbiBnKCl7am4oInVucGlwZSIpLHIudW5waXBlKHQpfXJldHVybiByLm9uKCJkYXRhIixsKSxmdW5jdGlvbih0LGUscil7aWYoImZ1bmN0aW9uIj09dHlwZW9mIHQucHJlcGVuZExpc3RlbmVyKXJldHVybiB0LnByZXBlbmRMaXN0ZW5lcihlLHIpO3QuX2V2ZW50cyYmdC5fZXZlbnRzW2VdP0FycmF5LmlzQXJyYXkodC5fZXZlbnRzW2VdKT90Ll9ldmVudHNbZV0udW5zaGlmdChyKTp0Ll9ldmVudHNbZV09W3IsdC5fZXZlbnRzW2VdXTp0Lm9uKGUscil9KHQsImVycm9yIixoKSx0Lm9uY2UoImNsb3NlIixkKSx0Lm9uY2UoImZpbmlzaCIscCksdC5lbWl0KCJwaXBlIixyKSxuLmZsb3dpbmd8fChqbigicGlwZSByZXN1bWUiKSxyLnJlc3VtZSgpKSx0fSxBbi5wcm90b3R5cGUudW5waXBlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX3JlYWRhYmxlU3RhdGU7aWYoMD09PWUucGlwZXNDb3VudClyZXR1cm4gdGhpcztpZigxPT09ZS5waXBlc0NvdW50KXJldHVybiB0JiZ0IT09ZS5waXBlc3x8KHR8fCh0PWUucGlwZXMpLGUucGlwZXM9bnVsbCxlLnBpcGVzQ291bnQ9MCxlLmZsb3dpbmc9ITEsdCYmdC5lbWl0KCJ1bnBpcGUiLHRoaXMpKSx0aGlzO2lmKCF0KXt2YXIgcj1lLnBpcGVzLG49ZS5waXBlc0NvdW50O2UucGlwZXM9bnVsbCxlLnBpcGVzQ291bnQ9MCxlLmZsb3dpbmc9ITE7Zm9yKHZhciBpPTA7aTxuO2krKylyW2ldLmVtaXQoInVucGlwZSIsdGhpcyk7cmV0dXJuIHRoaXN9dmFyIG89V24oZS5waXBlcyx0KTtyZXR1cm4tMT09PW98fChlLnBpcGVzLnNwbGljZShvLDEpLGUucGlwZXNDb3VudC09MSwxPT09ZS5waXBlc0NvdW50JiYoZS5waXBlcz1lLnBpcGVzWzBdKSx0LmVtaXQoInVucGlwZSIsdGhpcykpLHRoaXN9LEFuLnByb3RvdHlwZS5vbj1mdW5jdGlvbih0LGUpe3ZhciByPVV0LnByb3RvdHlwZS5vbi5jYWxsKHRoaXMsdCxlKTtpZigiZGF0YSI9PT10KSExIT09dGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nJiZ0aGlzLnJlc3VtZSgpO2Vsc2UgaWYoInJlYWRhYmxlIj09PXQpe3ZhciBuPXRoaXMuX3JlYWRhYmxlU3RhdGU7bi5lbmRFbWl0dGVkfHxuLnJlYWRhYmxlTGlzdGVuaW5nfHwobi5yZWFkYWJsZUxpc3RlbmluZz1uLm5lZWRSZWFkYWJsZT0hMCxuLmVtaXR0ZWRSZWFkYWJsZT0hMSxuLnJlYWRpbmc/bi5sZW5ndGgmJlBuKHRoaXMpOnd0KEJuLHRoaXMpKX1yZXR1cm4gcn0sQW4ucHJvdG90eXBlLmFkZExpc3RlbmVyPUFuLnByb3RvdHlwZS5vbixBbi5wcm90b3R5cGUucmVzdW1lPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fcmVhZGFibGVTdGF0ZTtyZXR1cm4gdC5mbG93aW5nfHwoam4oInJlc3VtZSIpLHQuZmxvd2luZz0hMCxmdW5jdGlvbih0LGUpe2UucmVzdW1lU2NoZWR1bGVkfHwoZS5yZXN1bWVTY2hlZHVsZWQ9ITAsd3QoVW4sdCxlKSl9KHRoaXMsdCkpLHRoaXN9LEFuLnByb3RvdHlwZS5wYXVzZT1mdW5jdGlvbigpe3JldHVybiBqbigiY2FsbCBwYXVzZSBmbG93aW5nPSVqIix0aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmcpLCExIT09dGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nJiYoam4oInBhdXNlIiksdGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nPSExLHRoaXMuZW1pdCgicGF1c2UiKSksdGhpc30sQW4ucHJvdG90eXBlLndyYXA9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fcmVhZGFibGVTdGF0ZSxyPSExLG49dGhpcztmb3IodmFyIGkgaW4gdC5vbigiZW5kIiwoZnVuY3Rpb24oKXtpZihqbigid3JhcHBlZCBlbmQiKSxlLmRlY29kZXImJiFlLmVuZGVkKXt2YXIgdD1lLmRlY29kZXIuZW5kKCk7dCYmdC5sZW5ndGgmJm4ucHVzaCh0KX1uLnB1c2gobnVsbCl9KSksdC5vbigiZGF0YSIsKGZ1bmN0aW9uKGkpe2puKCJ3cmFwcGVkIGRhdGEiKSxlLmRlY29kZXImJihpPWUuZGVjb2Rlci53cml0ZShpKSksZS5vYmplY3RNb2RlJiZudWxsPT1pfHwoZS5vYmplY3RNb2RlfHxpJiZpLmxlbmd0aCkmJihuLnB1c2goaSl8fChyPSEwLHQucGF1c2UoKSkpfSkpLHQpdm9pZCAwPT09dGhpc1tpXSYmImZ1bmN0aW9uIj09dHlwZW9mIHRbaV0mJih0aGlzW2ldPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0W2VdLmFwcGx5KHQsYXJndW1lbnRzKX19KGkpKTtyZXR1cm4gZnVuY3Rpb24odCxlKXtmb3IodmFyIHI9MCxuPXQubGVuZ3RoO3I8bjtyKyspZSh0W3JdLHIpfShbImVycm9yIiwiY2xvc2UiLCJkZXN0cm95IiwicGF1c2UiLCJyZXN1bWUiXSwoZnVuY3Rpb24oZSl7dC5vbihlLG4uZW1pdC5iaW5kKG4sZSkpfSkpLG4uX3JlYWQ9ZnVuY3Rpb24oZSl7am4oIndyYXBwZWQgX3JlYWQiLGUpLHImJihyPSExLHQucmVzdW1lKCkpfSxufSxBbi5fZnJvbUxpc3Q9Rm4sSG4uV3JpdGFibGVTdGF0ZT0kbixyZShIbixVdCksJG4ucHJvdG90eXBlLmdldEJ1ZmZlcj1mdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLmJ1ZmZlcmVkUmVxdWVzdCxlPVtdO3Q7KWUucHVzaCh0KSx0PXQubmV4dDtyZXR1cm4gZX0sSG4ucHJvdG90eXBlLnBpcGU9ZnVuY3Rpb24oKXt0aGlzLmVtaXQoImVycm9yIixuZXcgRXJyb3IoIkNhbm5vdCBwaXBlLCBub3QgcmVhZGFibGUiKSl9LEhuLnByb3RvdHlwZS53cml0ZT1mdW5jdGlvbih0LGUscil7dmFyIG49dGhpcy5fd3JpdGFibGVTdGF0ZSxpPSExO3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiBlJiYocj1lLGU9bnVsbCksRS5pc0J1ZmZlcih0KT9lPSJidWZmZXIiOmV8fChlPW4uZGVmYXVsdEVuY29kaW5nKSwiZnVuY3Rpb24iIT10eXBlb2YgciYmKHI9WW4pLG4uZW5kZWQ/ZnVuY3Rpb24odCxlKXt2YXIgcj1uZXcgRXJyb3IoIndyaXRlIGFmdGVyIGVuZCIpO3QuZW1pdCgiZXJyb3IiLHIpLHd0KGUscil9KHRoaXMscik6ZnVuY3Rpb24odCxlLHIsbil7dmFyIGk9ITAsbz0hMTtyZXR1cm4gbnVsbD09PXI/bz1uZXcgVHlwZUVycm9yKCJNYXkgbm90IHdyaXRlIG51bGwgdmFsdWVzIHRvIHN0cmVhbSIpOkUuaXNCdWZmZXIocil8fCJzdHJpbmciPT10eXBlb2Ygcnx8dm9pZCAwPT09cnx8ZS5vYmplY3RNb2RlfHwobz1uZXcgVHlwZUVycm9yKCJJbnZhbGlkIG5vbi1zdHJpbmcvYnVmZmVyIGNodW5rIikpLG8mJih0LmVtaXQoImVycm9yIixvKSx3dChuLG8pLGk9ITEpLGl9KHRoaXMsbix0LHIpJiYobi5wZW5kaW5nY2IrKyxpPWZ1bmN0aW9uKHQsZSxyLG4saSl7cj1mdW5jdGlvbih0LGUscil7cmV0dXJuIHQub2JqZWN0TW9kZXx8ITE9PT10LmRlY29kZVN0cmluZ3N8fCJzdHJpbmciIT10eXBlb2YgZXx8KGU9RS5mcm9tKGUscikpLGV9KGUscixuKSxFLmlzQnVmZmVyKHIpJiYobj0iYnVmZmVyIik7dmFyIG89ZS5vYmplY3RNb2RlPzE6ci5sZW5ndGg7ZS5sZW5ndGgrPW87dmFyIGE9ZS5sZW5ndGg8ZS5oaWdoV2F0ZXJNYXJrO2lmKGF8fChlLm5lZWREcmFpbj0hMCksZS53cml0aW5nfHxlLmNvcmtlZCl7dmFyIHM9ZS5sYXN0QnVmZmVyZWRSZXF1ZXN0O2UubGFzdEJ1ZmZlcmVkUmVxdWVzdD1uZXcgR24ocixuLGkpLHM/cy5uZXh0PWUubGFzdEJ1ZmZlcmVkUmVxdWVzdDplLmJ1ZmZlcmVkUmVxdWVzdD1lLmxhc3RCdWZmZXJlZFJlcXVlc3QsZS5idWZmZXJlZFJlcXVlc3RDb3VudCs9MX1lbHNlIFZuKHQsZSwhMSxvLHIsbixpKTtyZXR1cm4gYX0odGhpcyxuLHQsZSxyKSksaX0sSG4ucHJvdG90eXBlLmNvcms9ZnVuY3Rpb24oKXt0aGlzLl93cml0YWJsZVN0YXRlLmNvcmtlZCsrfSxIbi5wcm90b3R5cGUudW5jb3JrPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fd3JpdGFibGVTdGF0ZTt0LmNvcmtlZCYmKHQuY29ya2VkLS0sdC53cml0aW5nfHx0LmNvcmtlZHx8dC5maW5pc2hlZHx8dC5idWZmZXJQcm9jZXNzaW5nfHwhdC5idWZmZXJlZFJlcXVlc3R8fEtuKHRoaXMsdCkpfSxIbi5wcm90b3R5cGUuc2V0RGVmYXVsdEVuY29kaW5nPWZ1bmN0aW9uKHQpe2lmKCJzdHJpbmciPT10eXBlb2YgdCYmKHQ9dC50b0xvd2VyQ2FzZSgpKSwhKFsiaGV4IiwidXRmOCIsInV0Zi04IiwiYXNjaWkiLCJiaW5hcnkiLCJiYXNlNjQiLCJ1Y3MyIiwidWNzLTIiLCJ1dGYxNmxlIiwidXRmLTE2bGUiLCJyYXciXS5pbmRleE9mKCh0KyIiKS50b0xvd2VyQ2FzZSgpKT4tMSkpdGhyb3cgbmV3IFR5cGVFcnJvcigiVW5rbm93biBlbmNvZGluZzogIit0KTtyZXR1cm4gdGhpcy5fd3JpdGFibGVTdGF0ZS5kZWZhdWx0RW5jb2Rpbmc9dCx0aGlzfSxIbi5wcm90b3R5cGUuX3dyaXRlPWZ1bmN0aW9uKHQsZSxyKXtyKG5ldyBFcnJvcigibm90IGltcGxlbWVudGVkIikpfSxIbi5wcm90b3R5cGUuX3dyaXRldj1udWxsLEhuLnByb3RvdHlwZS5lbmQ9ZnVuY3Rpb24odCxlLHIpe3ZhciBuPXRoaXMuX3dyaXRhYmxlU3RhdGU7ImZ1bmN0aW9uIj09dHlwZW9mIHQ/KHI9dCx0PW51bGwsZT1udWxsKToiZnVuY3Rpb24iPT10eXBlb2YgZSYmKHI9ZSxlPW51bGwpLG51bGwhPXQmJnRoaXMud3JpdGUodCxlKSxuLmNvcmtlZCYmKG4uY29ya2VkPTEsdGhpcy51bmNvcmsoKSksbi5lbmRpbmd8fG4uZmluaXNoZWR8fGZ1bmN0aW9uKHQsZSxyKXtlLmVuZGluZz0hMCxabih0LGUpLHImJihlLmZpbmlzaGVkP3d0KHIpOnQub25jZSgiZmluaXNoIixyKSksZS5lbmRlZD0hMCx0LndyaXRhYmxlPSExfSh0aGlzLG4scil9LHJlKGlpLEFuKTtmb3IodmFyIGVpPU9iamVjdC5rZXlzKEhuLnByb3RvdHlwZSkscmk9MDtyaTxlaS5sZW5ndGg7cmkrKyl7dmFyIG5pPWVpW3JpXTtpaS5wcm90b3R5cGVbbmldfHwoaWkucHJvdG90eXBlW25pXT1Ibi5wcm90b3R5cGVbbmldKX1mdW5jdGlvbiBpaSh0KXtpZighKHRoaXMgaW5zdGFuY2VvZiBpaSkpcmV0dXJuIG5ldyBpaSh0KTtBbi5jYWxsKHRoaXMsdCksSG4uY2FsbCh0aGlzLHQpLHQmJiExPT09dC5yZWFkYWJsZSYmKHRoaXMucmVhZGFibGU9ITEpLHQmJiExPT09dC53cml0YWJsZSYmKHRoaXMud3JpdGFibGU9ITEpLHRoaXMuYWxsb3dIYWxmT3Blbj0hMCx0JiYhMT09PXQuYWxsb3dIYWxmT3BlbiYmKHRoaXMuYWxsb3dIYWxmT3Blbj0hMSksdGhpcy5vbmNlKCJlbmQiLG9pKX1mdW5jdGlvbiBvaSgpe3RoaXMuYWxsb3dIYWxmT3Blbnx8dGhpcy5fd3JpdGFibGVTdGF0ZS5lbmRlZHx8d3QoYWksdGhpcyl9ZnVuY3Rpb24gYWkodCl7dC5lbmQoKX1mdW5jdGlvbiBzaSh0KXt0aGlzLmFmdGVyVHJhbnNmb3JtPWZ1bmN0aW9uKGUscil7cmV0dXJuIGZ1bmN0aW9uKHQsZSxyKXt2YXIgbj10Ll90cmFuc2Zvcm1TdGF0ZTtuLnRyYW5zZm9ybWluZz0hMTt2YXIgaT1uLndyaXRlY2I7aWYoIWkpcmV0dXJuIHQuZW1pdCgiZXJyb3IiLG5ldyBFcnJvcigibm8gd3JpdGVjYiBpbiBUcmFuc2Zvcm0gY2xhc3MiKSk7bi53cml0ZWNodW5rPW51bGwsbi53cml0ZWNiPW51bGwsbnVsbCE9ciYmdC5wdXNoKHIpLGkoZSk7dmFyIG89dC5fcmVhZGFibGVTdGF0ZTtvLnJlYWRpbmc9ITEsKG8ubmVlZFJlYWRhYmxlfHxvLmxlbmd0aDxvLmhpZ2hXYXRlck1hcmspJiZ0Ll9yZWFkKG8uaGlnaFdhdGVyTWFyayl9KHQsZSxyKX0sdGhpcy5uZWVkVHJhbnNmb3JtPSExLHRoaXMudHJhbnNmb3JtaW5nPSExLHRoaXMud3JpdGVjYj1udWxsLHRoaXMud3JpdGVjaHVuaz1udWxsLHRoaXMud3JpdGVlbmNvZGluZz1udWxsfWZ1bmN0aW9uIHVpKHQpe2lmKCEodGhpcyBpbnN0YW5jZW9mIHVpKSlyZXR1cm4gbmV3IHVpKHQpO2lpLmNhbGwodGhpcyx0KSx0aGlzLl90cmFuc2Zvcm1TdGF0ZT1uZXcgc2kodGhpcyk7dmFyIGU9dGhpczt0aGlzLl9yZWFkYWJsZVN0YXRlLm5lZWRSZWFkYWJsZT0hMCx0aGlzLl9yZWFkYWJsZVN0YXRlLnN5bmM9ITEsdCYmKCJmdW5jdGlvbiI9PXR5cGVvZiB0LnRyYW5zZm9ybSYmKHRoaXMuX3RyYW5zZm9ybT10LnRyYW5zZm9ybSksImZ1bmN0aW9uIj09dHlwZW9mIHQuZmx1c2gmJih0aGlzLl9mbHVzaD10LmZsdXNoKSksdGhpcy5vbmNlKCJwcmVmaW5pc2giLChmdW5jdGlvbigpeyJmdW5jdGlvbiI9PXR5cGVvZiB0aGlzLl9mbHVzaD90aGlzLl9mbHVzaCgoZnVuY3Rpb24odCl7ZmkoZSx0KX0pKTpmaShlKX0pKX1mdW5jdGlvbiBmaSh0LGUpe2lmKGUpcmV0dXJuIHQuZW1pdCgiZXJyb3IiLGUpO3ZhciByPXQuX3dyaXRhYmxlU3RhdGUsbj10Ll90cmFuc2Zvcm1TdGF0ZTtpZihyLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoIkNhbGxpbmcgdHJhbnNmb3JtIGRvbmUgd2hlbiB3cy5sZW5ndGggIT0gMCIpO2lmKG4udHJhbnNmb3JtaW5nKXRocm93IG5ldyBFcnJvcigiQ2FsbGluZyB0cmFuc2Zvcm0gZG9uZSB3aGVuIHN0aWxsIHRyYW5zZm9ybWluZyIpO3JldHVybiB0LnB1c2gobnVsbCl9ZnVuY3Rpb24gY2kodCl7aWYoISh0aGlzIGluc3RhbmNlb2YgY2kpKXJldHVybiBuZXcgY2kodCk7dWkuY2FsbCh0aGlzLHQpfWZ1bmN0aW9uIGxpKCl7VXQuY2FsbCh0aGlzKX1yZSh1aSxpaSksdWkucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5fdHJhbnNmb3JtU3RhdGUubmVlZFRyYW5zZm9ybT0hMSxpaS5wcm90b3R5cGUucHVzaC5jYWxsKHRoaXMsdCxlKX0sdWkucHJvdG90eXBlLl90cmFuc2Zvcm09ZnVuY3Rpb24odCxlLHIpe3Rocm93IG5ldyBFcnJvcigiTm90IGltcGxlbWVudGVkIil9LHVpLnByb3RvdHlwZS5fd3JpdGU9ZnVuY3Rpb24odCxlLHIpe3ZhciBuPXRoaXMuX3RyYW5zZm9ybVN0YXRlO2lmKG4ud3JpdGVjYj1yLG4ud3JpdGVjaHVuaz10LG4ud3JpdGVlbmNvZGluZz1lLCFuLnRyYW5zZm9ybWluZyl7dmFyIGk9dGhpcy5fcmVhZGFibGVTdGF0ZTsobi5uZWVkVHJhbnNmb3JtfHxpLm5lZWRSZWFkYWJsZXx8aS5sZW5ndGg8aS5oaWdoV2F0ZXJNYXJrKSYmdGhpcy5fcmVhZChpLmhpZ2hXYXRlck1hcmspfX0sdWkucHJvdG90eXBlLl9yZWFkPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX3RyYW5zZm9ybVN0YXRlO251bGwhPT1lLndyaXRlY2h1bmsmJmUud3JpdGVjYiYmIWUudHJhbnNmb3JtaW5nPyhlLnRyYW5zZm9ybWluZz0hMCx0aGlzLl90cmFuc2Zvcm0oZS53cml0ZWNodW5rLGUud3JpdGVlbmNvZGluZyxlLmFmdGVyVHJhbnNmb3JtKSk6ZS5uZWVkVHJhbnNmb3JtPSEwfSxyZShjaSx1aSksY2kucHJvdG90eXBlLl90cmFuc2Zvcm09ZnVuY3Rpb24odCxlLHIpe3IobnVsbCx0KX0scmUobGksVXQpLGxpLlJlYWRhYmxlPUFuLGxpLldyaXRhYmxlPUhuLGxpLkR1cGxleD1paSxsaS5UcmFuc2Zvcm09dWksbGkuUGFzc1Rocm91Z2g9Y2ksbGkuU3RyZWFtPWxpLGxpLnByb3RvdHlwZS5waXBlPWZ1bmN0aW9uKHQsZSl7dmFyIHI9dGhpcztmdW5jdGlvbiBuKGUpe3Qud3JpdGFibGUmJiExPT09dC53cml0ZShlKSYmci5wYXVzZSYmci5wYXVzZSgpfWZ1bmN0aW9uIGkoKXtyLnJlYWRhYmxlJiZyLnJlc3VtZSYmci5yZXN1bWUoKX1yLm9uKCJkYXRhIixuKSx0Lm9uKCJkcmFpbiIsaSksdC5faXNTdGRpb3x8ZSYmITE9PT1lLmVuZHx8KHIub24oImVuZCIsYSksci5vbigiY2xvc2UiLHMpKTt2YXIgbz0hMTtmdW5jdGlvbiBhKCl7b3x8KG89ITAsdC5lbmQoKSl9ZnVuY3Rpb24gcygpe298fChvPSEwLCJmdW5jdGlvbiI9PXR5cGVvZiB0LmRlc3Ryb3kmJnQuZGVzdHJveSgpKX1mdW5jdGlvbiB1KHQpe2lmKGYoKSwwPT09VXQubGlzdGVuZXJDb3VudCh0aGlzLCJlcnJvciIpKXRocm93IHR9ZnVuY3Rpb24gZigpe3IucmVtb3ZlTGlzdGVuZXIoImRhdGEiLG4pLHQucmVtb3ZlTGlzdGVuZXIoImRyYWluIixpKSxyLnJlbW92ZUxpc3RlbmVyKCJlbmQiLGEpLHIucmVtb3ZlTGlzdGVuZXIoImNsb3NlIixzKSxyLnJlbW92ZUxpc3RlbmVyKCJlcnJvciIsdSksdC5yZW1vdmVMaXN0ZW5lcigiZXJyb3IiLHUpLHIucmVtb3ZlTGlzdGVuZXIoImVuZCIsZiksci5yZW1vdmVMaXN0ZW5lcigiY2xvc2UiLGYpLHQucmVtb3ZlTGlzdGVuZXIoImNsb3NlIixmKX1yZXR1cm4gci5vbigiZXJyb3IiLHUpLHQub24oImVycm9yIix1KSxyLm9uKCJlbmQiLGYpLHIub24oImNsb3NlIixmKSx0Lm9uKCJjbG9zZSIsZiksdC5lbWl0KCJwaXBlIixyKSx0fTt2YXIgaGk9T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsZGVmYXVsdDpsaSxSZWFkYWJsZTpBbixXcml0YWJsZTpIbixEdXBsZXg6aWksVHJhbnNmb3JtOnVpLFBhc3NUaHJvdWdoOmNpLFN0cmVhbTpsaX0pO2Z1bmN0aW9uIGRpKHQsZSxyKXt0PXR8fGZ1bmN0aW9uKHQpe3RoaXMucXVldWUodCl9LGU9ZXx8ZnVuY3Rpb24oKXt0aGlzLnF1ZXVlKG51bGwpfTt2YXIgbj0hMSxpPSExLG89W10sYT0hMSxzPW5ldyBsaTtmdW5jdGlvbiB1KCl7Zm9yKDtvLmxlbmd0aCYmIXMucGF1c2VkOyl7dmFyIHQ9by5zaGlmdCgpO2lmKG51bGw9PT10KXJldHVybiBzLmVtaXQoImVuZCIpO3MuZW1pdCgiZGF0YSIsdCl9fWZ1bmN0aW9uIGYoKXtzLndyaXRhYmxlPSExLGUuY2FsbChzKSwhcy5yZWFkYWJsZSYmcy5hdXRvRGVzdHJveSYmcy5kZXN0cm95KCl9cmV0dXJuIHMucmVhZGFibGU9cy53cml0YWJsZT0hMCxzLnBhdXNlZD0hMSxzLmF1dG9EZXN0cm95PSEociYmITE9PT1yLmF1dG9EZXN0cm95KSxzLndyaXRlPWZ1bmN0aW9uKGUpe3JldHVybiB0LmNhbGwodGhpcyxlKSwhcy5wYXVzZWR9LHMucXVldWU9cy5wdXNoPWZ1bmN0aW9uKHQpe3JldHVybiBhfHwobnVsbD09PXQmJihhPSEwKSxvLnB1c2godCksdSgpKSxzfSxzLm9uKCJlbmQiLChmdW5jdGlvbigpe3MucmVhZGFibGU9ITEsIXMud3JpdGFibGUmJnMuYXV0b0Rlc3Ryb3kmJkN0Lm5leHRUaWNrKChmdW5jdGlvbigpe3MuZGVzdHJveSgpfSkpfSkpLHMuZW5kPWZ1bmN0aW9uKHQpe2lmKCFuKXJldHVybiBuPSEwLGFyZ3VtZW50cy5sZW5ndGgmJnMud3JpdGUodCksZigpLHN9LHMuZGVzdHJveT1mdW5jdGlvbigpe2lmKCFpKXJldHVybiBpPSEwLG49ITAsby5sZW5ndGg9MCxzLndyaXRhYmxlPXMucmVhZGFibGU9ITEscy5lbWl0KCJjbG9zZSIpLHN9LHMucGF1c2U9ZnVuY3Rpb24oKXtpZighcy5wYXVzZWQpcmV0dXJuIHMucGF1c2VkPSEwLHN9LHMucmVzdW1lPWZ1bmN0aW9uKCl7cmV0dXJuIHMucGF1c2VkJiYocy5wYXVzZWQ9ITEscy5lbWl0KCJyZXN1bWUiKSksdSgpLHMucGF1c2VkfHxzLmVtaXQoImRyYWluIiksc30sc31kaS50aHJvdWdoPWRpO3ZhciBwaT17fSxnaT1waS5MRUZUX0JSQUNFPTEsdmk9cGkuUklHSFRfQlJBQ0U9Mix5aT1waS5MRUZUX0JSQUNLRVQ9MyxiaT1waS5SSUdIVF9CUkFDS0VUPTQsbWk9cGkuQ09MT049NSx3aT1waS5DT01NQT02LFNpPXBpLlRSVUU9NyxfaT1waS5GQUxTRT04LEVpPXBpLk5VTEw9OSxraT1waS5TVFJJTkc9MTAsUmk9cGkuTlVNQkVSPTExLHhpPXBpLlNUQVJUPTE3LE9pPXBpLlNUT1A9MTgsamk9cGkuVFJVRTE9MzMsVGk9cGkuVFJVRTI9MzQsQWk9cGkuVFJVRTM9MzUsTGk9cGkuRkFMU0UxPTQ5LE1pPXBpLkZBTFNFMj01MCxDaT1waS5GQUxTRTM9NTEsUGk9cGkuRkFMU0U0PTUyLElpPXBpLk5VTEwxPTY1LE5pPXBpLk5VTEwyPTY2LEJpPXBpLk5VTEwzPTY3LFVpPXBpLk5VTUJFUjE9ODEsRGk9cGkuTlVNQkVSMz04MyxGaT1waS5TVFJJTkcxPTk3LHFpPXBpLlNUUklORzI9OTgsemk9cGkuU1RSSU5HMz05OSxXaT1waS5TVFJJTkc0PTEwMCxZaT1waS5TVFJJTkc1PTEwMSxHaT1waS5TVFJJTkc2PTEwMiwkaT1waS5WQUxVRT0xMTMsSGk9cGkuS0VZPTExNCxWaT1waS5PQkpFQ1Q9MTI5LEppPXBpLkFSUkFZPTEzMCxLaT0iXFwiLmNoYXJDb2RlQXQoMCksWGk9Ii8iLmNoYXJDb2RlQXQoMCksUWk9IlxiIi5jaGFyQ29kZUF0KDApLFppPSJcZiIuY2hhckNvZGVBdCgwKSx0bz0iXG4iLmNoYXJDb2RlQXQoMCksZW89IlxyIi5jaGFyQ29kZUF0KDApLHJvPSJcdCIuY2hhckNvZGVBdCgwKSxubz02NTUzNjtmdW5jdGlvbiBpbygpe3RoaXMudFN0YXRlPXhpLHRoaXMudmFsdWU9dm9pZCAwLHRoaXMuc3RyaW5nPXZvaWQgMCx0aGlzLnN0cmluZ0J1ZmZlcj1FLmFsbG9jP0UuYWxsb2Mobm8pOm5ldyBFKG5vKSx0aGlzLnN0cmluZ0J1ZmZlck9mZnNldD0wLHRoaXMudW5pY29kZT12b2lkIDAsdGhpcy5oaWdoU3Vycm9nYXRlPXZvaWQgMCx0aGlzLmtleT12b2lkIDAsdGhpcy5tb2RlPXZvaWQgMCx0aGlzLnN0YWNrPVtdLHRoaXMuc3RhdGU9JGksdGhpcy5ieXRlc19yZW1haW5pbmc9MCx0aGlzLmJ5dGVzX2luX3NlcXVlbmNlPTAsdGhpcy50ZW1wX2J1ZmZzPXsyOm5ldyBFKDIpLDM6bmV3IEUoMyksNDpuZXcgRSg0KX0sdGhpcy5vZmZzZXQ9LTF9aW8udG9rbmFtPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1PYmplY3Qua2V5cyhwaSkscj0wLG49ZS5sZW5ndGg7cjxuO3IrKyl7dmFyIGk9ZVtyXTtpZihwaVtpXT09PXQpcmV0dXJuIGl9cmV0dXJuIHQmJiIweCIrdC50b1N0cmluZygxNil9O3ZhciBvbz1pby5wcm90b3R5cGU7b28ub25FcnJvcj1mdW5jdGlvbih0KXt0aHJvdyB0fSxvby5jaGFyRXJyb3I9ZnVuY3Rpb24odCxlKXt0aGlzLnRTdGF0ZT1PaSx0aGlzLm9uRXJyb3IobmV3IEVycm9yKCJVbmV4cGVjdGVkICIrSlNPTi5zdHJpbmdpZnkoU3RyaW5nLmZyb21DaGFyQ29kZSh0W2VdKSkrIiBhdCBwb3NpdGlvbiAiK2UrIiBpbiBzdGF0ZSAiK2lvLnRva25hbSh0aGlzLnRTdGF0ZSkpKX0sb28uYXBwZW5kU3RyaW5nQ2hhcj1mdW5jdGlvbih0KXt0aGlzLnN0cmluZ0J1ZmZlck9mZnNldD49bm8mJih0aGlzLnN0cmluZys9dGhpcy5zdHJpbmdCdWZmZXIudG9TdHJpbmcoInV0ZjgiKSx0aGlzLnN0cmluZ0J1ZmZlck9mZnNldD0wKSx0aGlzLnN0cmluZ0J1ZmZlclt0aGlzLnN0cmluZ0J1ZmZlck9mZnNldCsrXT10fSxvby5hcHBlbmRTdHJpbmdCdWY9ZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQubGVuZ3RoOyJudW1iZXIiPT10eXBlb2YgZSYmKG49Im51bWJlciI9PXR5cGVvZiByP3I8MD90Lmxlbmd0aC1lK3I6ci1lOnQubGVuZ3RoLWUpLG48MCYmKG49MCksdGhpcy5zdHJpbmdCdWZmZXJPZmZzZXQrbj5ubyYmKHRoaXMuc3RyaW5nKz10aGlzLnN0cmluZ0J1ZmZlci50b1N0cmluZygidXRmOCIsMCx0aGlzLnN0cmluZ0J1ZmZlck9mZnNldCksdGhpcy5zdHJpbmdCdWZmZXJPZmZzZXQ9MCksdC5jb3B5KHRoaXMuc3RyaW5nQnVmZmVyLHRoaXMuc3RyaW5nQnVmZmVyT2Zmc2V0LGUsciksdGhpcy5zdHJpbmdCdWZmZXJPZmZzZXQrPW59LG9vLndyaXRlPWZ1bmN0aW9uKHQpe3ZhciBlOyJzdHJpbmciPT10eXBlb2YgdCYmKHQ9bmV3IEUodCkpO2Zvcih2YXIgcj0wLG49dC5sZW5ndGg7cjxuO3IrKylpZih0aGlzLnRTdGF0ZT09PXhpKXtpZihlPXRbcl0sdGhpcy5vZmZzZXQrKywxMjM9PT1lKXRoaXMub25Ub2tlbihnaSwieyIpO2Vsc2UgaWYoMTI1PT09ZSl0aGlzLm9uVG9rZW4odmksIn0iKTtlbHNlIGlmKDkxPT09ZSl0aGlzLm9uVG9rZW4oeWksIlsiKTtlbHNlIGlmKDkzPT09ZSl0aGlzLm9uVG9rZW4oYmksIl0iKTtlbHNlIGlmKDU4PT09ZSl0aGlzLm9uVG9rZW4obWksIjoiKTtlbHNlIGlmKDQ0PT09ZSl0aGlzLm9uVG9rZW4od2ksIiwiKTtlbHNlIGlmKDExNj09PWUpdGhpcy50U3RhdGU9amk7ZWxzZSBpZigxMDI9PT1lKXRoaXMudFN0YXRlPUxpO2Vsc2UgaWYoMTEwPT09ZSl0aGlzLnRTdGF0ZT1JaTtlbHNlIGlmKDM0PT09ZSl0aGlzLnN0cmluZz0iIix0aGlzLnN0cmluZ0J1ZmZlck9mZnNldD0wLHRoaXMudFN0YXRlPUZpO2Vsc2UgaWYoNDU9PT1lKXRoaXMuc3RyaW5nPSItIix0aGlzLnRTdGF0ZT1VaTtlbHNlIGlmKGU+PTQ4JiZlPDY0KXRoaXMuc3RyaW5nPVN0cmluZy5mcm9tQ2hhckNvZGUoZSksdGhpcy50U3RhdGU9RGk7ZWxzZSBpZigzMiE9PWUmJjkhPT1lJiYxMCE9PWUmJjEzIT09ZSlyZXR1cm4gdGhpcy5jaGFyRXJyb3IodCxyKX1lbHNlIGlmKHRoaXMudFN0YXRlPT09RmkpaWYoZT10W3JdLHRoaXMuYnl0ZXNfcmVtYWluaW5nPjApe2Zvcih2YXIgaT0wO2k8dGhpcy5ieXRlc19yZW1haW5pbmc7aSsrKXRoaXMudGVtcF9idWZmc1t0aGlzLmJ5dGVzX2luX3NlcXVlbmNlXVt0aGlzLmJ5dGVzX2luX3NlcXVlbmNlLXRoaXMuYnl0ZXNfcmVtYWluaW5nK2ldPXRbaV07dGhpcy5hcHBlbmRTdHJpbmdCdWYodGhpcy50ZW1wX2J1ZmZzW3RoaXMuYnl0ZXNfaW5fc2VxdWVuY2VdKSx0aGlzLmJ5dGVzX2luX3NlcXVlbmNlPXRoaXMuYnl0ZXNfcmVtYWluaW5nPTAscj1yK2ktMX1lbHNlIGlmKDA9PT10aGlzLmJ5dGVzX3JlbWFpbmluZyYmZT49MTI4KXtpZihlPD0xOTN8fGU+MjQ0KXJldHVybiB0aGlzLm9uRXJyb3IobmV3IEVycm9yKCJJbnZhbGlkIFVURi04IGNoYXJhY3RlciBhdCBwb3NpdGlvbiAiK3IrIiBpbiBzdGF0ZSAiK2lvLnRva25hbSh0aGlzLnRTdGF0ZSkpKTtpZihlPj0xOTQmJmU8PTIyMyYmKHRoaXMuYnl0ZXNfaW5fc2VxdWVuY2U9MiksZT49MjI0JiZlPD0yMzkmJih0aGlzLmJ5dGVzX2luX3NlcXVlbmNlPTMpLGU+PTI0MCYmZTw9MjQ0JiYodGhpcy5ieXRlc19pbl9zZXF1ZW5jZT00KSx0aGlzLmJ5dGVzX2luX3NlcXVlbmNlK3I+dC5sZW5ndGgpe2Zvcih2YXIgbz0wO288PXQubGVuZ3RoLTEtcjtvKyspdGhpcy50ZW1wX2J1ZmZzW3RoaXMuYnl0ZXNfaW5fc2VxdWVuY2VdW29dPXRbcitvXTt0aGlzLmJ5dGVzX3JlbWFpbmluZz1yK3RoaXMuYnl0ZXNfaW5fc2VxdWVuY2UtdC5sZW5ndGgscj10Lmxlbmd0aC0xfWVsc2UgdGhpcy5hcHBlbmRTdHJpbmdCdWYodCxyLHIrdGhpcy5ieXRlc19pbl9zZXF1ZW5jZSkscj1yK3RoaXMuYnl0ZXNfaW5fc2VxdWVuY2UtMX1lbHNlIGlmKDM0PT09ZSl0aGlzLnRTdGF0ZT14aSx0aGlzLnN0cmluZys9dGhpcy5zdHJpbmdCdWZmZXIudG9TdHJpbmcoInV0ZjgiLDAsdGhpcy5zdHJpbmdCdWZmZXJPZmZzZXQpLHRoaXMuc3RyaW5nQnVmZmVyT2Zmc2V0PTAsdGhpcy5vblRva2VuKGtpLHRoaXMuc3RyaW5nKSx0aGlzLm9mZnNldCs9RS5ieXRlTGVuZ3RoKHRoaXMuc3RyaW5nLCJ1dGY4IikrMSx0aGlzLnN0cmluZz12b2lkIDA7ZWxzZSBpZig5Mj09PWUpdGhpcy50U3RhdGU9cWk7ZWxzZXtpZighKGU+PTMyKSlyZXR1cm4gdGhpcy5jaGFyRXJyb3IodCxyKTt0aGlzLmFwcGVuZFN0cmluZ0NoYXIoZSl9ZWxzZSBpZih0aGlzLnRTdGF0ZT09PXFpKWlmKDM0PT09KGU9dFtyXSkpdGhpcy5hcHBlbmRTdHJpbmdDaGFyKGUpLHRoaXMudFN0YXRlPUZpO2Vsc2UgaWYoOTI9PT1lKXRoaXMuYXBwZW5kU3RyaW5nQ2hhcihLaSksdGhpcy50U3RhdGU9Rmk7ZWxzZSBpZig0Nz09PWUpdGhpcy5hcHBlbmRTdHJpbmdDaGFyKFhpKSx0aGlzLnRTdGF0ZT1GaTtlbHNlIGlmKDk4PT09ZSl0aGlzLmFwcGVuZFN0cmluZ0NoYXIoUWkpLHRoaXMudFN0YXRlPUZpO2Vsc2UgaWYoMTAyPT09ZSl0aGlzLmFwcGVuZFN0cmluZ0NoYXIoWmkpLHRoaXMudFN0YXRlPUZpO2Vsc2UgaWYoMTEwPT09ZSl0aGlzLmFwcGVuZFN0cmluZ0NoYXIodG8pLHRoaXMudFN0YXRlPUZpO2Vsc2UgaWYoMTE0PT09ZSl0aGlzLmFwcGVuZFN0cmluZ0NoYXIoZW8pLHRoaXMudFN0YXRlPUZpO2Vsc2UgaWYoMTE2PT09ZSl0aGlzLmFwcGVuZFN0cmluZ0NoYXIocm8pLHRoaXMudFN0YXRlPUZpO2Vsc2V7aWYoMTE3IT09ZSlyZXR1cm4gdGhpcy5jaGFyRXJyb3IodCxyKTt0aGlzLnVuaWNvZGU9IiIsdGhpcy50U3RhdGU9eml9ZWxzZSBpZih0aGlzLnRTdGF0ZT09PXppfHx0aGlzLnRTdGF0ZT09PVdpfHx0aGlzLnRTdGF0ZT09PVlpfHx0aGlzLnRTdGF0ZT09PUdpKXtpZighKChlPXRbcl0pPj00OCYmZTw2NHx8ZT42NCYmZTw9NzB8fGU+OTYmJmU8PTEwMikpcmV0dXJuIHRoaXMuY2hhckVycm9yKHQscik7aWYodGhpcy51bmljb2RlKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGUpLHRoaXMudFN0YXRlKys9PT1HaSl7dmFyIGE9cGFyc2VJbnQodGhpcy51bmljb2RlLDE2KTt0aGlzLnVuaWNvZGU9dm9pZCAwLHZvaWQgMCE9PXRoaXMuaGlnaFN1cnJvZ2F0ZSYmYT49NTYzMjAmJmE8NTczNDQ/KHRoaXMuYXBwZW5kU3RyaW5nQnVmKG5ldyBFKFN0cmluZy5mcm9tQ2hhckNvZGUodGhpcy5oaWdoU3Vycm9nYXRlLGEpKSksdGhpcy5oaWdoU3Vycm9nYXRlPXZvaWQgMCk6dm9pZCAwPT09dGhpcy5oaWdoU3Vycm9nYXRlJiZhPj01NTI5NiYmYTw1NjMyMD90aGlzLmhpZ2hTdXJyb2dhdGU9YToodm9pZCAwIT09dGhpcy5oaWdoU3Vycm9nYXRlJiYodGhpcy5hcHBlbmRTdHJpbmdCdWYobmV3IEUoU3RyaW5nLmZyb21DaGFyQ29kZSh0aGlzLmhpZ2hTdXJyb2dhdGUpKSksdGhpcy5oaWdoU3Vycm9nYXRlPXZvaWQgMCksdGhpcy5hcHBlbmRTdHJpbmdCdWYobmV3IEUoU3RyaW5nLmZyb21DaGFyQ29kZShhKSkpKSx0aGlzLnRTdGF0ZT1GaX19ZWxzZSBpZih0aGlzLnRTdGF0ZT09PVVpfHx0aGlzLnRTdGF0ZT09PURpKXN3aXRjaChlPXRbcl0pe2Nhc2UgNDg6Y2FzZSA0OTpjYXNlIDUwOmNhc2UgNTE6Y2FzZSA1MjpjYXNlIDUzOmNhc2UgNTQ6Y2FzZSA1NTpjYXNlIDU2OmNhc2UgNTc6Y2FzZSA0NjpjYXNlIDEwMTpjYXNlIDY5OmNhc2UgNDM6Y2FzZSA0NTp0aGlzLnN0cmluZys9U3RyaW5nLmZyb21DaGFyQ29kZShlKSx0aGlzLnRTdGF0ZT1EaTticmVhaztkZWZhdWx0OnRoaXMudFN0YXRlPXhpO3ZhciBzPU51bWJlcih0aGlzLnN0cmluZyk7aWYoaXNOYU4ocykpcmV0dXJuIHRoaXMuY2hhckVycm9yKHQscik7dGhpcy5zdHJpbmcubWF0Y2goL1swLTldKy8pPT10aGlzLnN0cmluZyYmcy50b1N0cmluZygpIT10aGlzLnN0cmluZz90aGlzLm9uVG9rZW4oa2ksdGhpcy5zdHJpbmcpOnRoaXMub25Ub2tlbihSaSxzKSx0aGlzLm9mZnNldCs9dGhpcy5zdHJpbmcubGVuZ3RoLTEsdGhpcy5zdHJpbmc9dm9pZCAwLHItLX1lbHNlIGlmKHRoaXMudFN0YXRlPT09amkpe2lmKDExNCE9PXRbcl0pcmV0dXJuIHRoaXMuY2hhckVycm9yKHQscik7dGhpcy50U3RhdGU9VGl9ZWxzZSBpZih0aGlzLnRTdGF0ZT09PVRpKXtpZigxMTchPT10W3JdKXJldHVybiB0aGlzLmNoYXJFcnJvcih0LHIpO3RoaXMudFN0YXRlPUFpfWVsc2UgaWYodGhpcy50U3RhdGU9PT1BaSl7aWYoMTAxIT09dFtyXSlyZXR1cm4gdGhpcy5jaGFyRXJyb3IodCxyKTt0aGlzLnRTdGF0ZT14aSx0aGlzLm9uVG9rZW4oU2ksITApLHRoaXMub2Zmc2V0Kz0zfWVsc2UgaWYodGhpcy50U3RhdGU9PT1MaSl7aWYoOTchPT10W3JdKXJldHVybiB0aGlzLmNoYXJFcnJvcih0LHIpO3RoaXMudFN0YXRlPU1pfWVsc2UgaWYodGhpcy50U3RhdGU9PT1NaSl7aWYoMTA4IT09dFtyXSlyZXR1cm4gdGhpcy5jaGFyRXJyb3IodCxyKTt0aGlzLnRTdGF0ZT1DaX1lbHNlIGlmKHRoaXMudFN0YXRlPT09Q2kpe2lmKDExNSE9PXRbcl0pcmV0dXJuIHRoaXMuY2hhckVycm9yKHQscik7dGhpcy50U3RhdGU9UGl9ZWxzZSBpZih0aGlzLnRTdGF0ZT09PVBpKXtpZigxMDEhPT10W3JdKXJldHVybiB0aGlzLmNoYXJFcnJvcih0LHIpO3RoaXMudFN0YXRlPXhpLHRoaXMub25Ub2tlbihfaSwhMSksdGhpcy5vZmZzZXQrPTR9ZWxzZSBpZih0aGlzLnRTdGF0ZT09PUlpKXtpZigxMTchPT10W3JdKXJldHVybiB0aGlzLmNoYXJFcnJvcih0LHIpO3RoaXMudFN0YXRlPU5pfWVsc2UgaWYodGhpcy50U3RhdGU9PT1OaSl7aWYoMTA4IT09dFtyXSlyZXR1cm4gdGhpcy5jaGFyRXJyb3IodCxyKTt0aGlzLnRTdGF0ZT1CaX1lbHNlIGlmKHRoaXMudFN0YXRlPT09Qmkpe2lmKDEwOCE9PXRbcl0pcmV0dXJuIHRoaXMuY2hhckVycm9yKHQscik7dGhpcy50U3RhdGU9eGksdGhpcy5vblRva2VuKEVpLG51bGwpLHRoaXMub2Zmc2V0Kz0zfX0sb28ub25Ub2tlbj1mdW5jdGlvbih0LGUpe30sb28ucGFyc2VFcnJvcj1mdW5jdGlvbih0LGUpe3RoaXMudFN0YXRlPU9pLHRoaXMub25FcnJvcihuZXcgRXJyb3IoIlVuZXhwZWN0ZWQgIitpby50b2tuYW0odCkrKGU/IigiK0pTT04uc3RyaW5naWZ5KGUpKyIpIjoiIikrIiBpbiBzdGF0ZSAiK2lvLnRva25hbSh0aGlzLnN0YXRlKSkpfSxvby5wdXNoPWZ1bmN0aW9uKCl7dGhpcy5zdGFjay5wdXNoKHt2YWx1ZTp0aGlzLnZhbHVlLGtleTp0aGlzLmtleSxtb2RlOnRoaXMubW9kZX0pfSxvby5wb3A9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnZhbHVlLGU9dGhpcy5zdGFjay5wb3AoKTt0aGlzLnZhbHVlPWUudmFsdWUsdGhpcy5rZXk9ZS5rZXksdGhpcy5tb2RlPWUubW9kZSx0aGlzLmVtaXQodCksdGhpcy5tb2RlfHwodGhpcy5zdGF0ZT0kaSl9LG9vLmVtaXQ9ZnVuY3Rpb24odCl7dGhpcy5tb2RlJiYodGhpcy5zdGF0ZT13aSksdGhpcy5vblZhbHVlKHQpfSxvby5vblZhbHVlPWZ1bmN0aW9uKHQpe30sb28ub25Ub2tlbj1mdW5jdGlvbih0LGUpe2lmKHRoaXMuc3RhdGU9PT0kaSlpZih0PT09a2l8fHQ9PT1SaXx8dD09PVNpfHx0PT09X2l8fHQ9PT1FaSl0aGlzLnZhbHVlJiYodGhpcy52YWx1ZVt0aGlzLmtleV09ZSksdGhpcy5lbWl0KGUpO2Vsc2UgaWYodD09PWdpKXRoaXMucHVzaCgpLHRoaXMudmFsdWU/dGhpcy52YWx1ZT10aGlzLnZhbHVlW3RoaXMua2V5XT17fTp0aGlzLnZhbHVlPXt9LHRoaXMua2V5PXZvaWQgMCx0aGlzLnN0YXRlPUhpLHRoaXMubW9kZT1WaTtlbHNlIGlmKHQ9PT15aSl0aGlzLnB1c2goKSx0aGlzLnZhbHVlP3RoaXMudmFsdWU9dGhpcy52YWx1ZVt0aGlzLmtleV09W106dGhpcy52YWx1ZT1bXSx0aGlzLmtleT0wLHRoaXMubW9kZT1KaSx0aGlzLnN0YXRlPSRpO2Vsc2UgaWYodD09PXZpKXtpZih0aGlzLm1vZGUhPT1WaSlyZXR1cm4gdGhpcy5wYXJzZUVycm9yKHQsZSk7dGhpcy5wb3AoKX1lbHNle2lmKHQhPT1iaSlyZXR1cm4gdGhpcy5wYXJzZUVycm9yKHQsZSk7aWYodGhpcy5tb2RlIT09SmkpcmV0dXJuIHRoaXMucGFyc2VFcnJvcih0LGUpO3RoaXMucG9wKCl9ZWxzZSBpZih0aGlzLnN0YXRlPT09SGkpaWYodD09PWtpKXRoaXMua2V5PWUsdGhpcy5zdGF0ZT1taTtlbHNle2lmKHQhPT12aSlyZXR1cm4gdGhpcy5wYXJzZUVycm9yKHQsZSk7dGhpcy5wb3AoKX1lbHNlIGlmKHRoaXMuc3RhdGU9PT1taSl7aWYodCE9PW1pKXJldHVybiB0aGlzLnBhcnNlRXJyb3IodCxlKTt0aGlzLnN0YXRlPSRpfWVsc2V7aWYodGhpcy5zdGF0ZSE9PXdpKXJldHVybiB0aGlzLnBhcnNlRXJyb3IodCxlKTtpZih0PT09d2kpdGhpcy5tb2RlPT09Smk/KHRoaXMua2V5KyssdGhpcy5zdGF0ZT0kaSk6dGhpcy5tb2RlPT09VmkmJih0aGlzLnN0YXRlPUhpKTtlbHNle2lmKCEodD09PWJpJiZ0aGlzLm1vZGU9PT1KaXx8dD09PXZpJiZ0aGlzLm1vZGU9PT1WaSkpcmV0dXJuIHRoaXMucGFyc2VFcnJvcih0LGUpO3RoaXMucG9wKCl9fX0saW8uQz1waTt2YXIgYW89aW8sc289e3BhcnNlOmZ1bmN0aW9uKHQsZSl7dmFyIHIsaTtmdW5jdGlvbiBvKHQsZSl7cmV0dXJuInN0cmluZyI9PXR5cGVvZiB0P2U9PT10OnQmJiJmdW5jdGlvbiI9PXR5cGVvZiB0LmV4ZWM/dC5leGVjKGUpOiJib29sZWFuIj09dHlwZW9mIHR8fCJvYmplY3QiPT09bih0KT90OiJmdW5jdGlvbiI9PXR5cGVvZiB0JiZ0KGUpfXZhciBhPW5ldyBhbyxzPWRpKChmdW5jdGlvbih0KXsic3RyaW5nIj09dHlwZW9mIHQmJih0PUJ1ZmZlci5mcm9tKHQpKSxhLndyaXRlKHQpfSksKGZ1bmN0aW9uKHQpe3QmJnMud3JpdGUodCksciYmcy5lbWl0KCJoZWFkZXIiLHIpLGkmJnMuZW1pdCgiZm9vdGVyIixpKSxzLnF1ZXVlKG51bGwpfSkpO2Z1bmN0aW9uIHUodCxlKXshMSE9PXImJigocj1yfHx7fSlbdF09ZSksITEhPT1pJiYhMT09PXImJigoaT1pfHx7fSlbdF09ZSl9cmV0dXJuInN0cmluZyI9PXR5cGVvZiB0JiYodD10LnNwbGl0KCIuIikubWFwKChmdW5jdGlvbih0KXtyZXR1cm4iJCoiPT09dD97ZW1pdEtleTohMH06IioiPT09dHx8KCIiPT09dD97cmVjdXJzZTohMH06dCl9KSkpLHQmJnQubGVuZ3RofHwodD1udWxsKSxhLm9uVmFsdWU9ZnVuY3Rpb24obil7aWYodGhpcy5yb290fHwocy5yb290PW4pLHQpe2Zvcih2YXIgaT0wLGE9MCxmPSExLGM9ITE7aTx0Lmxlbmd0aDspe3ZhciBsPXRbaV0saD12b2lkIDA7aWYoYSsrLGwmJiFsLnJlY3Vyc2Upe2lmKCEoaD1hPT09dGhpcy5zdGFjay5sZW5ndGg/dGhpczp0aGlzLnN0YWNrW2FdKSlyZXR1cm47aWYoIW8obCxoLmtleSkpcmV0dXJuIHZvaWQgdShoLmtleSxuKTtmPSEhbC5lbWl0S2V5LGM9ISFsLmVtaXRQYXRoLGkrK31lbHNle2krKzt2YXIgZD10W2ldO2lmKCFkKXJldHVybjtmb3IoOzspe2lmKCEoaD1hPT09dGhpcy5zdGFjay5sZW5ndGg/dGhpczp0aGlzLnN0YWNrW2FdKSlyZXR1cm47aWYobyhkLGgua2V5KSl7aSsrLE9iamVjdC5pc0Zyb3plbih0aGlzLnN0YWNrW2FdKXx8KHRoaXMuc3RhY2tbYV0udmFsdWU9bnVsbCk7YnJlYWt9dShoLmtleSxuKSxhKyt9fX1pZihyJiYocy5lbWl0KCJoZWFkZXIiLHIpLHI9ITEpLGE9PT10aGlzLnN0YWNrLmxlbmd0aCl7dmFyIHA9dGhpcy5zdGFjay5zbGljZSgxKS5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmtleX0pKS5jb25jYXQoW3RoaXMua2V5XSksZz1uO2Zvcih2YXIgdiBpbiBudWxsIT1nJiZudWxsIT0oZz1lP2UoZyxwKTpnKSYmKChmfHxjKSYmKGc9e3ZhbHVlOmd9LGYmJihnLmtleT10aGlzLmtleSksYyYmKGcucGF0aD1wKSkscy5xdWV1ZShnKSksdGhpcy52YWx1ZSYmZGVsZXRlIHRoaXMudmFsdWVbdGhpcy5rZXldLHRoaXMuc3RhY2spT2JqZWN0LmlzRnJvemVuKHRoaXMuc3RhY2tbdl0pfHwodGhpcy5zdGFja1t2XS52YWx1ZT1udWxsKX19fSxhLl9vblRva2VuPWEub25Ub2tlbixhLm9uVG9rZW49ZnVuY3Rpb24oZSxyKXthLl9vblRva2VuKGUsciksMD09PXRoaXMuc3RhY2subGVuZ3RoJiZzLnJvb3QmJih0fHxzLnF1ZXVlKHMucm9vdCkscy5yb290PW51bGwpfSxhLm9uRXJyb3I9ZnVuY3Rpb24odCl7dC5tZXNzYWdlLmluZGV4T2YoImF0IHBvc2l0aW9uIik+LTEmJih0Lm1lc3NhZ2U9IkludmFsaWQgSlNPTiAoIit0Lm1lc3NhZ2UrIikiKSxzLmVtaXQoImVycm9yIix0KX0sc319LHVvPWZ1bmN0aW9uKHQpe3JldHVybiB0JiZ0Lk1hdGg9PU1hdGgmJnR9LGZvPXVvKCJvYmplY3QiPT0oInVuZGVmaW5lZCI9PXR5cGVvZiBnbG9iYWxUaGlzPyJ1bmRlZmluZWQiOm4oZ2xvYmFsVGhpcykpJiZnbG9iYWxUaGlzKXx8dW8oIm9iamVjdCI9PSgidW5kZWZpbmVkIj09dHlwZW9mIHdpbmRvdz8idW5kZWZpbmVkIjpuKHdpbmRvdykpJiZ3aW5kb3cpfHx1bygib2JqZWN0Ij09KCJ1bmRlZmluZWQiPT10eXBlb2Ygc2VsZj8idW5kZWZpbmVkIjpuKHNlbGYpKSYmc2VsZil8fHVvKCJvYmplY3QiPT1uKGkpJiZpKXx8ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30oKXx8RnVuY3Rpb24oInJldHVybiB0aGlzIikoKSxjbz1mdW5jdGlvbih0KXt0cnl7cmV0dXJuISF0KCl9Y2F0Y2godCl7cmV0dXJuITB9fSxsbz0hY28oKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwxLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KVsxXX0pKSxobz17fS5wcm9wZXJ0eUlzRW51bWVyYWJsZSxwbz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yLGdvPXtmOnBvJiYhaG8uY2FsbCh7MToyfSwxKT9mdW5jdGlvbih0KXt2YXIgZT1wbyh0aGlzLHQpO3JldHVybiEhZSYmZS5lbnVtZXJhYmxlfTpob30sdm89ZnVuY3Rpb24odCxlKXtyZXR1cm57ZW51bWVyYWJsZTohKDEmdCksY29uZmlndXJhYmxlOiEoMiZ0KSx3cml0YWJsZTohKDQmdCksdmFsdWU6ZX19LHlvPXt9LnRvU3RyaW5nLGJvPWZ1bmN0aW9uKHQpe3JldHVybiB5by5jYWxsKHQpLnNsaWNlKDgsLTEpfSxtbz0iIi5zcGxpdCx3bz1jbygoZnVuY3Rpb24oKXtyZXR1cm4hT2JqZWN0KCJ6IikucHJvcGVydHlJc0VudW1lcmFibGUoMCl9KSk/ZnVuY3Rpb24odCl7cmV0dXJuIlN0cmluZyI9PWJvKHQpP21vLmNhbGwodCwiIik6T2JqZWN0KHQpfTpPYmplY3QsU289ZnVuY3Rpb24odCl7aWYobnVsbD09dCl0aHJvdyBUeXBlRXJyb3IoIkNhbid0IGNhbGwgbWV0aG9kIG9uICIrdCk7cmV0dXJuIHR9LF9vPWZ1bmN0aW9uKHQpe3JldHVybiB3byhTbyh0KSl9LEVvPWZ1bmN0aW9uKHQpe3JldHVybiJvYmplY3QiPT09bih0KT9udWxsIT09dDoiZnVuY3Rpb24iPT10eXBlb2YgdH0sa289ZnVuY3Rpb24odCxlKXtpZighRW8odCkpcmV0dXJuIHQ7dmFyIHIsbjtpZihlJiYiZnVuY3Rpb24iPT10eXBlb2Yocj10LnRvU3RyaW5nKSYmIUVvKG49ci5jYWxsKHQpKSlyZXR1cm4gbjtpZigiZnVuY3Rpb24iPT10eXBlb2Yocj10LnZhbHVlT2YpJiYhRW8obj1yLmNhbGwodCkpKXJldHVybiBuO2lmKCFlJiYiZnVuY3Rpb24iPT10eXBlb2Yocj10LnRvU3RyaW5nKSYmIUVvKG49ci5jYWxsKHQpKSlyZXR1cm4gbjt0aHJvdyBUeXBlRXJyb3IoIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZSIpfSxSbz1mdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0KFNvKHQpKX0seG89e30uaGFzT3duUHJvcGVydHksT289ZnVuY3Rpb24odCxlKXtyZXR1cm4geG8uY2FsbChSbyh0KSxlKX0sam89Zm8uZG9jdW1lbnQsVG89RW8oam8pJiZFbyhqby5jcmVhdGVFbGVtZW50KSxBbz1mdW5jdGlvbih0KXtyZXR1cm4gVG8/am8uY3JlYXRlRWxlbWVudCh0KTp7fX0sTG89IWxvJiYhY28oKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eShBbygiZGl2IiksImEiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KS5hfSkpLE1vPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IsQ289e2Y6bG8/TW86ZnVuY3Rpb24odCxlKXtpZih0PV9vKHQpLGU9a28oZSwhMCksTG8pdHJ5e3JldHVybiBNbyh0LGUpfWNhdGNoKHQpe31pZihPbyh0LGUpKXJldHVybiB2byghZ28uZi5jYWxsKHQsZSksdFtlXSl9fSxQbz1mdW5jdGlvbih0KXtpZighRW8odCkpdGhyb3cgVHlwZUVycm9yKFN0cmluZyh0KSsiIGlzIG5vdCBhbiBvYmplY3QiKTtyZXR1cm4gdH0sSW89T2JqZWN0LmRlZmluZVByb3BlcnR5LE5vPXtmOmxvP0lvOmZ1bmN0aW9uKHQsZSxyKXtpZihQbyh0KSxlPWtvKGUsITApLFBvKHIpLExvKXRyeXtyZXR1cm4gSW8odCxlLHIpfWNhdGNoKHQpe31pZigiZ2V0ImluIHJ8fCJzZXQiaW4gcil0aHJvdyBUeXBlRXJyb3IoIkFjY2Vzc29ycyBub3Qgc3VwcG9ydGVkIik7cmV0dXJuInZhbHVlImluIHImJih0W2VdPXIudmFsdWUpLHR9fSxCbz1sbz9mdW5jdGlvbih0LGUscil7cmV0dXJuIE5vLmYodCxlLHZvKDEscikpfTpmdW5jdGlvbih0LGUscil7cmV0dXJuIHRbZV09cix0fSxVbz1mdW5jdGlvbih0LGUpe3RyeXtCbyhmbyx0LGUpfWNhdGNoKHIpe2ZvW3RdPWV9cmV0dXJuIGV9LERvPSJfX2NvcmUtanNfc2hhcmVkX18iLEZvPWZvW0RvXXx8VW8oRG8se30pLHFvPUZ1bmN0aW9uLnRvU3RyaW5nOyJmdW5jdGlvbiIhPXR5cGVvZiBGby5pbnNwZWN0U291cmNlJiYoRm8uaW5zcGVjdFNvdXJjZT1mdW5jdGlvbih0KXtyZXR1cm4gcW8uY2FsbCh0KX0pO3ZhciB6byxXbyxZbyxHbz1Gby5pbnNwZWN0U291cmNlLCRvPWZvLldlYWtNYXAsSG89ImZ1bmN0aW9uIj09dHlwZW9mICRvJiYvbmF0aXZlIGNvZGUvLnRlc3QoR28oJG8pKSxWbz1hKChmdW5jdGlvbih0KXsodC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIEZvW3RdfHwoRm9bdF09dm9pZCAwIT09ZT9lOnt9KX0pKCJ2ZXJzaW9ucyIsW10pLnB1c2goe3ZlcnNpb246IjMuMTIuMSIsbW9kZToiZ2xvYmFsIixjb3B5cmlnaHQ6IsKpIDIwMjEgRGVuaXMgUHVzaGthcmV2ICh6bG9pcm9jay5ydSkifSl9KSksSm89MCxLbz1NYXRoLnJhbmRvbSgpLFhvPWZ1bmN0aW9uKHQpe3JldHVybiJTeW1ib2woIitTdHJpbmcodm9pZCAwPT09dD8iIjp0KSsiKV8iKygrK0pvK0tvKS50b1N0cmluZygzNil9LFFvPVZvKCJrZXlzIiksWm89ZnVuY3Rpb24odCl7cmV0dXJuIFFvW3RdfHwoUW9bdF09WG8odCkpfSx0YT17fSxlYT0iT2JqZWN0IGFscmVhZHkgaW5pdGlhbGl6ZWQiLHJhPWZvLldlYWtNYXA7aWYoSG98fEZvLnN0YXRlKXt2YXIgbmE9Rm8uc3RhdGV8fChGby5zdGF0ZT1uZXcgcmEpLGlhPW5hLmdldCxvYT1uYS5oYXMsYWE9bmEuc2V0O3pvPWZ1bmN0aW9uKHQsZSl7aWYob2EuY2FsbChuYSx0KSl0aHJvdyBuZXcgVHlwZUVycm9yKGVhKTtyZXR1cm4gZS5mYWNhZGU9dCxhYS5jYWxsKG5hLHQsZSksZX0sV289ZnVuY3Rpb24odCl7cmV0dXJuIGlhLmNhbGwobmEsdCl8fHt9fSxZbz1mdW5jdGlvbih0KXtyZXR1cm4gb2EuY2FsbChuYSx0KX19ZWxzZXt2YXIgc2E9Wm8oInN0YXRlIik7dGFbc2FdPSEwLHpvPWZ1bmN0aW9uKHQsZSl7aWYoT28odCxzYSkpdGhyb3cgbmV3IFR5cGVFcnJvcihlYSk7cmV0dXJuIGUuZmFjYWRlPXQsQm8odCxzYSxlKSxlfSxXbz1mdW5jdGlvbih0KXtyZXR1cm4gT28odCxzYSk/dFtzYV06e319LFlvPWZ1bmN0aW9uKHQpe3JldHVybiBPbyh0LHNhKX19dmFyIHVhLGZhLGNhPXtzZXQ6em8sZ2V0OldvLGhhczpZbyxlbmZvcmNlOmZ1bmN0aW9uKHQpe3JldHVybiBZbyh0KT9Xbyh0KTp6byh0LHt9KX0sZ2V0dGVyRm9yOmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlKXt2YXIgcjtpZighRW8oZSl8fChyPVdvKGUpKS50eXBlIT09dCl0aHJvdyBUeXBlRXJyb3IoIkluY29tcGF0aWJsZSByZWNlaXZlciwgIit0KyIgcmVxdWlyZWQiKTtyZXR1cm4gcn19fSxsYT1hKChmdW5jdGlvbih0KXt2YXIgZT1jYS5nZXQscj1jYS5lbmZvcmNlLG49U3RyaW5nKFN0cmluZykuc3BsaXQoIlN0cmluZyIpOyh0LmV4cG9ydHM9ZnVuY3Rpb24odCxlLGksbyl7dmFyIGEscz0hIW8mJiEhby51bnNhZmUsdT0hIW8mJiEhby5lbnVtZXJhYmxlLGY9ISFvJiYhIW8ubm9UYXJnZXRHZXQ7ImZ1bmN0aW9uIj09dHlwZW9mIGkmJigic3RyaW5nIiE9dHlwZW9mIGV8fE9vKGksIm5hbWUiKXx8Qm8oaSwibmFtZSIsZSksKGE9cihpKSkuc291cmNlfHwoYS5zb3VyY2U9bi5qb2luKCJzdHJpbmciPT10eXBlb2YgZT9lOiIiKSkpLHQhPT1mbz8ocz8hZiYmdFtlXSYmKHU9ITApOmRlbGV0ZSB0W2VdLHU/dFtlXT1pOkJvKHQsZSxpKSk6dT90W2VdPWk6VW8oZSxpKX0pKEZ1bmN0aW9uLnByb3RvdHlwZSwidG9TdHJpbmciLChmdW5jdGlvbigpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiB0aGlzJiZlKHRoaXMpLnNvdXJjZXx8R28odGhpcyl9KSl9KSksaGE9Zm8sZGE9ZnVuY3Rpb24odCl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIHQ/dDp2b2lkIDB9LHBhPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg8Mj9kYShoYVt0XSl8fGRhKGZvW3RdKTpoYVt0XSYmaGFbdF1bZV18fGZvW3RdJiZmb1t0XVtlXX0sZ2E9TWF0aC5jZWlsLHZhPU1hdGguZmxvb3IseWE9ZnVuY3Rpb24odCl7cmV0dXJuIGlzTmFOKHQ9K3QpPzA6KHQ+MD92YTpnYSkodCl9LGJhPU1hdGgubWluLG1hPWZ1bmN0aW9uKHQpe3JldHVybiB0PjA/YmEoeWEodCksOTAwNzE5OTI1NDc0MDk5MSk6MH0sd2E9TWF0aC5tYXgsU2E9TWF0aC5taW4sX2E9ZnVuY3Rpb24odCxlKXt2YXIgcj15YSh0KTtyZXR1cm4gcjwwP3dhKHIrZSwwKTpTYShyLGUpfSxFYT1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oZSxyLG4pe3ZhciBpLG89X28oZSksYT1tYShvLmxlbmd0aCkscz1fYShuLGEpO2lmKHQmJnIhPXIpe2Zvcig7YT5zOylpZigoaT1vW3MrK10pIT1pKXJldHVybiEwfWVsc2UgZm9yKDthPnM7cysrKWlmKCh0fHxzIGluIG8pJiZvW3NdPT09cilyZXR1cm4gdHx8c3x8MDtyZXR1cm4hdCYmLTF9fSxrYT17aW5jbHVkZXM6RWEoITApLGluZGV4T2Y6RWEoITEpfSxSYT1rYS5pbmRleE9mLHhhPWZ1bmN0aW9uKHQsZSl7dmFyIHIsbj1fbyh0KSxpPTAsbz1bXTtmb3IociBpbiBuKSFPbyh0YSxyKSYmT28obixyKSYmby5wdXNoKHIpO2Zvcig7ZS5sZW5ndGg+aTspT28obixyPWVbaSsrXSkmJih+UmEobyxyKXx8by5wdXNoKHIpKTtyZXR1cm4gb30sT2E9WyJjb25zdHJ1Y3RvciIsImhhc093blByb3BlcnR5IiwiaXNQcm90b3R5cGVPZiIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwidG9Mb2NhbGVTdHJpbmciLCJ0b1N0cmluZyIsInZhbHVlT2YiXSxqYT1PYS5jb25jYXQoImxlbmd0aCIsInByb3RvdHlwZSIpLFRhPXtmOk9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzfHxmdW5jdGlvbih0KXtyZXR1cm4geGEodCxqYSl9fSxBYT17ZjpPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzfSxMYT1wYSgiUmVmbGVjdCIsIm93bktleXMiKXx8ZnVuY3Rpb24odCl7dmFyIGU9VGEuZihQbyh0KSkscj1BYS5mO3JldHVybiByP2UuY29uY2F0KHIodCkpOmV9LE1hPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciByPUxhKGUpLG49Tm8uZixpPUNvLmYsbz0wO288ci5sZW5ndGg7bysrKXt2YXIgYT1yW29dO09vKHQsYSl8fG4odCxhLGkoZSxhKSl9fSxDYT0vI3xcLnByb3RvdHlwZVwuLyxQYT1mdW5jdGlvbih0LGUpe3ZhciByPU5hW0lhKHQpXTtyZXR1cm4gcj09VWF8fHIhPUJhJiYoImZ1bmN0aW9uIj09dHlwZW9mIGU/Y28oZSk6ISFlKX0sSWE9UGEubm9ybWFsaXplPWZ1bmN0aW9uKHQpe3JldHVybiBTdHJpbmcodCkucmVwbGFjZShDYSwiLiIpLnRvTG93ZXJDYXNlKCl9LE5hPVBhLmRhdGE9e30sQmE9UGEuTkFUSVZFPSJOIixVYT1QYS5QT0xZRklMTD0iUCIsRGE9UGEsRmE9Q28uZixxYT1mdW5jdGlvbih0LGUpe3ZhciByLGksbyxhLHMsdT10LnRhcmdldCxmPXQuZ2xvYmFsLGM9dC5zdGF0O2lmKHI9Zj9mbzpjP2ZvW3VdfHxVbyh1LHt9KTooZm9bdV18fHt9KS5wcm90b3R5cGUpZm9yKGkgaW4gZSl7aWYoYT1lW2ldLG89dC5ub1RhcmdldEdldD8ocz1GYShyLGkpKSYmcy52YWx1ZTpyW2ldLCFEYShmP2k6dSsoYz8iLiI6IiMiKStpLHQuZm9yY2VkKSYmdm9pZCAwIT09byl7aWYobihhKT09PW4obykpY29udGludWU7TWEoYSxvKX0odC5zaGFtfHxvJiZvLnNoYW0pJiZCbyhhLCJzaGFtIiwhMCksbGEocixpLGEsdCl9fSx6YT1BcnJheS5pc0FycmF5fHxmdW5jdGlvbih0KXtyZXR1cm4iQXJyYXkiPT1ibyh0KX0sV2E9ZnVuY3Rpb24odCxlLHIpe3ZhciBuPWtvKGUpO24gaW4gdD9Oby5mKHQsbix2bygwLHIpKTp0W25dPXJ9LFlhPXBhKCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiKXx8IiIsR2E9Zm8ucHJvY2VzcywkYT1HYSYmR2EudmVyc2lvbnMsSGE9JGEmJiRhLnY4O0hhP2ZhPSh1YT1IYS5zcGxpdCgiLiIpKVswXTw0PzE6dWFbMF0rdWFbMV06WWEmJighKHVhPVlhLm1hdGNoKC9FZGdlXC8oXGQrKS8pKXx8dWFbMV0+PTc0KSYmKHVhPVlhLm1hdGNoKC9DaHJvbWVcLyhcZCspLykpJiYoZmE9dWFbMV0pO3ZhciBWYT1mYSYmK2ZhLEphPSEhT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyYmIWNvKChmdW5jdGlvbigpe3JldHVybiFTdHJpbmcoU3ltYm9sKCkpfHwhU3ltYm9sLnNoYW0mJlZhJiZWYTw0MX0pKSxLYT1KYSYmIVN5bWJvbC5zaGFtJiYic3ltYm9sIj09bihTeW1ib2wuaXRlcmF0b3IpLFhhPVZvKCJ3a3MiKSxRYT1mby5TeW1ib2wsWmE9S2E/UWE6UWEmJlFhLndpdGhvdXRTZXR0ZXJ8fFhvLHRzPWZ1bmN0aW9uKHQpe3JldHVybiBPbyhYYSx0KSYmKEphfHwic3RyaW5nIj09dHlwZW9mIFhhW3RdKXx8KEphJiZPbyhRYSx0KT9YYVt0XT1RYVt0XTpYYVt0XT1aYSgiU3ltYm9sLiIrdCkpLFhhW3RdfSxlcz10cygic3BlY2llcyIpLHJzPWZ1bmN0aW9uKHQsZSl7dmFyIHI7cmV0dXJuIHphKHQpJiYoImZ1bmN0aW9uIiE9dHlwZW9mKHI9dC5jb25zdHJ1Y3Rvcil8fHIhPT1BcnJheSYmIXphKHIucHJvdG90eXBlKT9FbyhyKSYmbnVsbD09PShyPXJbZXNdKSYmKHI9dm9pZCAwKTpyPXZvaWQgMCksbmV3KHZvaWQgMD09PXI/QXJyYXk6cikoMD09PWU/MDplKX0sbnM9dHMoInNwZWNpZXMiKSxpcz1mdW5jdGlvbih0KXtyZXR1cm4gVmE+PTUxfHwhY28oKGZ1bmN0aW9uKCl7dmFyIGU9W107cmV0dXJuKGUuY29uc3RydWN0b3I9e30pW25zXT1mdW5jdGlvbigpe3JldHVybntmb286MX19LDEhPT1lW3RdKEJvb2xlYW4pLmZvb30pKX0sb3M9dHMoImlzQ29uY2F0U3ByZWFkYWJsZSIpLGFzPTkwMDcxOTkyNTQ3NDA5OTEsc3M9Ik1heGltdW0gYWxsb3dlZCBpbmRleCBleGNlZWRlZCIsdXM9VmE+PTUxfHwhY28oKGZ1bmN0aW9uKCl7dmFyIHQ9W107cmV0dXJuIHRbb3NdPSExLHQuY29uY2F0KClbMF0hPT10fSkpLGZzPWlzKCJjb25jYXQiKSxjcz1mdW5jdGlvbih0KXtpZighRW8odCkpcmV0dXJuITE7dmFyIGU9dFtvc107cmV0dXJuIHZvaWQgMCE9PWU/ISFlOnphKHQpfTtxYSh7dGFyZ2V0OiJBcnJheSIscHJvdG86ITAsZm9yY2VkOiF1c3x8IWZzfSx7Y29uY2F0OmZ1bmN0aW9uKHQpe3ZhciBlLHIsbixpLG8sYT1Sbyh0aGlzKSxzPXJzKGEsMCksdT0wO2ZvcihlPS0xLG49YXJndW1lbnRzLmxlbmd0aDtlPG47ZSsrKWlmKGNzKG89LTE9PT1lP2E6YXJndW1lbnRzW2VdKSl7aWYodSsoaT1tYShvLmxlbmd0aCkpPmFzKXRocm93IFR5cGVFcnJvcihzcyk7Zm9yKHI9MDtyPGk7cisrLHUrKylyIGluIG8mJldhKHMsdSxvW3JdKX1lbHNle2lmKHU+PWFzKXRocm93IFR5cGVFcnJvcihzcyk7V2Eocyx1Kyssbyl9cmV0dXJuIHMubGVuZ3RoPXUsc319KTt2YXIgbHM9ZnVuY3Rpb24odCl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHQpdGhyb3cgVHlwZUVycm9yKFN0cmluZyh0KSsiIGlzIG5vdCBhIGZ1bmN0aW9uIik7cmV0dXJuIHR9LGhzPWZ1bmN0aW9uKHQsZSxyKXtpZihscyh0KSx2b2lkIDA9PT1lKXJldHVybiB0O3N3aXRjaChyKXtjYXNlIDA6cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHQuY2FsbChlKX07Y2FzZSAxOnJldHVybiBmdW5jdGlvbihyKXtyZXR1cm4gdC5jYWxsKGUscil9O2Nhc2UgMjpyZXR1cm4gZnVuY3Rpb24ocixuKXtyZXR1cm4gdC5jYWxsKGUscixuKX07Y2FzZSAzOnJldHVybiBmdW5jdGlvbihyLG4saSl7cmV0dXJuIHQuY2FsbChlLHIsbixpKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHQuYXBwbHkoZSxhcmd1bWVudHMpfX0sZHM9W10ucHVzaCxwcz1mdW5jdGlvbih0KXt2YXIgZT0xPT10LHI9Mj09dCxuPTM9PXQsaT00PT10LG89Nj09dCxhPTc9PXQscz01PT10fHxvO3JldHVybiBmdW5jdGlvbih1LGYsYyxsKXtmb3IodmFyIGgsZCxwPVJvKHUpLGc9d28ocCksdj1ocyhmLGMsMykseT1tYShnLmxlbmd0aCksYj0wLG09bHx8cnMsdz1lP20odSx5KTpyfHxhP20odSwwKTp2b2lkIDA7eT5iO2IrKylpZigoc3x8YiBpbiBnKSYmKGQ9dihoPWdbYl0sYixwKSx0KSlpZihlKXdbYl09ZDtlbHNlIGlmKGQpc3dpdGNoKHQpe2Nhc2UgMzpyZXR1cm4hMDtjYXNlIDU6cmV0dXJuIGg7Y2FzZSA2OnJldHVybiBiO2Nhc2UgMjpkcy5jYWxsKHcsaCl9ZWxzZSBzd2l0Y2godCl7Y2FzZSA0OnJldHVybiExO2Nhc2UgNzpkcy5jYWxsKHcsaCl9cmV0dXJuIG8/LTE6bnx8aT9pOnd9fSxncz17Zm9yRWFjaDpwcygwKSxtYXA6cHMoMSksZmlsdGVyOnBzKDIpLHNvbWU6cHMoMyksZXZlcnk6cHMoNCksZmluZDpwcyg1KSxmaW5kSW5kZXg6cHMoNiksZmlsdGVyT3V0OnBzKDcpfSx2cz1ncy5maWx0ZXIseXM9aXMoImZpbHRlciIpO3FhKHt0YXJnZXQ6IkFycmF5Iixwcm90bzohMCxmb3JjZWQ6IXlzfSx7ZmlsdGVyOmZ1bmN0aW9uKHQpe3JldHVybiB2cyh0aGlzLHQsYXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTp2b2lkIDApfX0pO3ZhciBicyxtcz1PYmplY3Qua2V5c3x8ZnVuY3Rpb24odCl7cmV0dXJuIHhhKHQsT2EpfSx3cz1sbz9PYmplY3QuZGVmaW5lUHJvcGVydGllczpmdW5jdGlvbih0LGUpe1BvKHQpO2Zvcih2YXIgcixuPW1zKGUpLGk9bi5sZW5ndGgsbz0wO2k+bzspTm8uZih0LHI9bltvKytdLGVbcl0pO3JldHVybiB0fSxTcz1wYSgiZG9jdW1lbnQiLCJkb2N1bWVudEVsZW1lbnQiKSxfcz1abygiSUVfUFJPVE8iKSxFcz1mdW5jdGlvbigpe30sa3M9ZnVuY3Rpb24odCl7cmV0dXJuIjxzY3JpcHQ+Iit0KyI8XC9zY3JpcHQ+In0sUnM9ZnVuY3Rpb24oKXt0cnl7YnM9ZG9jdW1lbnQuZG9tYWluJiZuZXcgQWN0aXZlWE9iamVjdCgiaHRtbGZpbGUiKX1jYXRjaCh0KXt9dmFyIHQsZTtScz1icz9mdW5jdGlvbih0KXt0LndyaXRlKGtzKCIiKSksdC5jbG9zZSgpO3ZhciBlPXQucGFyZW50V2luZG93Lk9iamVjdDtyZXR1cm4gdD1udWxsLGV9KGJzKTooKGU9QW8oImlmcmFtZSIpKS5zdHlsZS5kaXNwbGF5PSJub25lIixTcy5hcHBlbmRDaGlsZChlKSxlLnNyYz1TdHJpbmcoImphdmFzY3JpcHQ6IiksKHQ9ZS5jb250ZW50V2luZG93LmRvY3VtZW50KS5vcGVuKCksdC53cml0ZShrcygiZG9jdW1lbnQuRj1PYmplY3QiKSksdC5jbG9zZSgpLHQuRik7Zm9yKHZhciByPU9hLmxlbmd0aDtyLS07KWRlbGV0ZSBScy5wcm90b3R5cGVbT2Fbcl1dO3JldHVybiBScygpfTt0YVtfc109ITA7dmFyIHhzPU9iamVjdC5jcmVhdGV8fGZ1bmN0aW9uKHQsZSl7dmFyIHI7cmV0dXJuIG51bGwhPT10PyhFcy5wcm90b3R5cGU9UG8odCkscj1uZXcgRXMsRXMucHJvdG90eXBlPW51bGwscltfc109dCk6cj1ScygpLHZvaWQgMD09PWU/cjp3cyhyLGUpfSxPcz10cygidW5zY29wYWJsZXMiKSxqcz1BcnJheS5wcm90b3R5cGU7bnVsbD09anNbT3NdJiZOby5mKGpzLE9zLHtjb25maWd1cmFibGU6ITAsdmFsdWU6eHMobnVsbCl9KTt2YXIgVHM9ZnVuY3Rpb24odCl7anNbT3NdW3RdPSEwfSxBcz1rYS5pbmNsdWRlcztxYSh7dGFyZ2V0OiJBcnJheSIscHJvdG86ITB9LHtpbmNsdWRlczpmdW5jdGlvbih0KXtyZXR1cm4gQXModGhpcyx0LGFyZ3VtZW50cy5sZW5ndGg+MT9hcmd1bWVudHNbMV06dm9pZCAwKX19KSxUcygiaW5jbHVkZXMiKTt2YXIgTHM9ZnVuY3Rpb24odCxlKXt2YXIgcj1bXVt0XTtyZXR1cm4hIXImJmNvKChmdW5jdGlvbigpe3IuY2FsbChudWxsLGV8fGZ1bmN0aW9uKCl7dGhyb3cgMX0sMSl9KSl9LE1zPWthLmluZGV4T2YsQ3M9W10uaW5kZXhPZixQcz0hIUNzJiYxL1sxXS5pbmRleE9mKDEsLTApPDAsSXM9THMoImluZGV4T2YiKTtxYSh7dGFyZ2V0OiJBcnJheSIscHJvdG86ITAsZm9yY2VkOlBzfHwhSXN9LHtpbmRleE9mOmZ1bmN0aW9uKHQpe3JldHVybiBQcz9Dcy5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fDA6TXModGhpcyx0LGFyZ3VtZW50cy5sZW5ndGg+MT9hcmd1bWVudHNbMV06dm9pZCAwKX19KSxxYSh7dGFyZ2V0OiJBcnJheSIsc3RhdDohMH0se2lzQXJyYXk6emF9KTt2YXIgTnMsQnMsVXMsRHM9e30sRnM9IWNvKChmdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt9cmV0dXJuIHQucHJvdG90eXBlLmNvbnN0cnVjdG9yPW51bGwsT2JqZWN0LmdldFByb3RvdHlwZU9mKG5ldyB0KSE9PXQucHJvdG90eXBlfSkpLHFzPVpvKCJJRV9QUk9UTyIpLHpzPU9iamVjdC5wcm90b3R5cGUsV3M9RnM/T2JqZWN0LmdldFByb3RvdHlwZU9mOmZ1bmN0aW9uKHQpe3JldHVybiB0PVJvKHQpLE9vKHQscXMpP3RbcXNdOiJmdW5jdGlvbiI9PXR5cGVvZiB0LmNvbnN0cnVjdG9yJiZ0IGluc3RhbmNlb2YgdC5jb25zdHJ1Y3Rvcj90LmNvbnN0cnVjdG9yLnByb3RvdHlwZTp0IGluc3RhbmNlb2YgT2JqZWN0P3pzOm51bGx9LFlzPXRzKCJpdGVyYXRvciIpLEdzPSExO1tdLmtleXMmJigibmV4dCJpbihVcz1bXS5rZXlzKCkpPyhCcz1XcyhXcyhVcykpKSE9PU9iamVjdC5wcm90b3R5cGUmJihOcz1Ccyk6R3M9ITApLChudWxsPT1Oc3x8Y28oKGZ1bmN0aW9uKCl7dmFyIHQ9e307cmV0dXJuIE5zW1lzXS5jYWxsKHQpIT09dH0pKSkmJihOcz17fSksT28oTnMsWXMpfHxCbyhOcyxZcywoZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pKTt2YXIgJHM9e0l0ZXJhdG9yUHJvdG90eXBlOk5zLEJVR0dZX1NBRkFSSV9JVEVSQVRPUlM6R3N9LEhzPU5vLmYsVnM9dHMoInRvU3RyaW5nVGFnIiksSnM9ZnVuY3Rpb24odCxlLHIpe3QmJiFPbyh0PXI/dDp0LnByb3RvdHlwZSxWcykmJkhzKHQsVnMse2NvbmZpZ3VyYWJsZTohMCx2YWx1ZTplfSl9LEtzPSRzLkl0ZXJhdG9yUHJvdG90eXBlLFhzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LFFzPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8KCJfX3Byb3RvX18iaW57fT9mdW5jdGlvbigpe3ZhciB0LGU9ITEscj17fTt0cnl7KHQ9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihPYmplY3QucHJvdG90eXBlLCJfX3Byb3RvX18iKS5zZXQpLmNhbGwocixbXSksZT1yIGluc3RhbmNlb2YgQXJyYXl9Y2F0Y2godCl7fXJldHVybiBmdW5jdGlvbihyLG4pe3JldHVybiBQbyhyKSxmdW5jdGlvbih0KXtpZighRW8odCkmJm51bGwhPT10KXRocm93IFR5cGVFcnJvcigiQ2FuJ3Qgc2V0ICIrU3RyaW5nKHQpKyIgYXMgYSBwcm90b3R5cGUiKX0obiksZT90LmNhbGwocixuKTpyLl9fcHJvdG9fXz1uLHJ9fSgpOnZvaWQgMCksWnM9JHMuSXRlcmF0b3JQcm90b3R5cGUsdHU9JHMuQlVHR1lfU0FGQVJJX0lURVJBVE9SUyxldT10cygiaXRlcmF0b3IiKSxydT0ia2V5cyIsbnU9InZhbHVlcyIsaXU9ImVudHJpZXMiLG91PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LGF1PWZ1bmN0aW9uKHQsZSxyLG4saSxvLGEpeyFmdW5jdGlvbih0LGUscil7dmFyIG49ZSsiIEl0ZXJhdG9yIjt0LnByb3RvdHlwZT14cyhLcyx7bmV4dDp2bygxLHIpfSksSnModCxuLCExKSxEc1tuXT1Yc30ocixlLG4pO3ZhciBzLHUsZixjPWZ1bmN0aW9uKHQpe2lmKHQ9PT1pJiZnKXJldHVybiBnO2lmKCF0dSYmdCBpbiBkKXJldHVybiBkW3RdO3N3aXRjaCh0KXtjYXNlIHJ1OmNhc2UgbnU6Y2FzZSBpdTpyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyx0KX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByKHRoaXMpfX0sbD1lKyIgSXRlcmF0b3IiLGg9ITEsZD10LnByb3RvdHlwZSxwPWRbZXVdfHxkWyJAQGl0ZXJhdG9yIl18fGkmJmRbaV0sZz0hdHUmJnB8fGMoaSksdj0iQXJyYXkiPT1lJiZkLmVudHJpZXN8fHA7aWYodiYmKHM9V3Modi5jYWxsKG5ldyB0KSksWnMhPT1PYmplY3QucHJvdG90eXBlJiZzLm5leHQmJihXcyhzKSE9PVpzJiYoUXM/UXMocyxacyk6ImZ1bmN0aW9uIiE9dHlwZW9mIHNbZXVdJiZCbyhzLGV1LG91KSksSnMocyxsLCEwKSkpLGk9PW51JiZwJiZwLm5hbWUhPT1udSYmKGg9ITAsZz1mdW5jdGlvbigpe3JldHVybiBwLmNhbGwodGhpcyl9KSxkW2V1XSE9PWcmJkJvKGQsZXUsZyksRHNbZV09ZyxpKWlmKHU9e3ZhbHVlczpjKG51KSxrZXlzOm8/ZzpjKHJ1KSxlbnRyaWVzOmMoaXUpfSxhKWZvcihmIGluIHUpKHR1fHxofHwhKGYgaW4gZCkpJiZsYShkLGYsdVtmXSk7ZWxzZSBxYSh7dGFyZ2V0OmUscHJvdG86ITAsZm9yY2VkOnR1fHxofSx1KTtyZXR1cm4gdX0sc3U9IkFycmF5IEl0ZXJhdG9yIix1dT1jYS5zZXQsZnU9Y2EuZ2V0dGVyRm9yKHN1KSxjdT1hdShBcnJheSwiQXJyYXkiLChmdW5jdGlvbih0LGUpe3V1KHRoaXMse3R5cGU6c3UsdGFyZ2V0Ol9vKHQpLGluZGV4OjAsa2luZDplfSl9KSwoZnVuY3Rpb24oKXt2YXIgdD1mdSh0aGlzKSxlPXQudGFyZ2V0LHI9dC5raW5kLG49dC5pbmRleCsrO3JldHVybiFlfHxuPj1lLmxlbmd0aD8odC50YXJnZXQ9dm9pZCAwLHt2YWx1ZTp2b2lkIDAsZG9uZTohMH0pOiJrZXlzIj09cj97dmFsdWU6bixkb25lOiExfToidmFsdWVzIj09cj97dmFsdWU6ZVtuXSxkb25lOiExfTp7dmFsdWU6W24sZVtuXV0sZG9uZTohMX19KSwidmFsdWVzIik7RHMuQXJndW1lbnRzPURzLkFycmF5LFRzKCJrZXlzIiksVHMoInZhbHVlcyIpLFRzKCJlbnRyaWVzIik7dmFyIGx1PVtdLmpvaW4saHU9d28hPU9iamVjdCxkdT1Mcygiam9pbiIsIiwiKTtxYSh7dGFyZ2V0OiJBcnJheSIscHJvdG86ITAsZm9yY2VkOmh1fHwhZHV9LHtqb2luOmZ1bmN0aW9uKHQpe3JldHVybiBsdS5jYWxsKF9vKHRoaXMpLHZvaWQgMD09PXQ/IiwiOnQpfX0pO3ZhciBwdT1ncy5tYXAsZ3U9aXMoIm1hcCIpO3FhKHt0YXJnZXQ6IkFycmF5Iixwcm90bzohMCxmb3JjZWQ6IWd1fSx7bWFwOmZ1bmN0aW9uKHQpe3JldHVybiBwdSh0aGlzLHQsYXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTp2b2lkIDApfX0pO3ZhciB2dT1pcygic3BsaWNlIikseXU9TWF0aC5tYXgsYnU9TWF0aC5taW4sbXU9OTAwNzE5OTI1NDc0MDk5MSx3dT0iTWF4aW11bSBhbGxvd2VkIGxlbmd0aCBleGNlZWRlZCI7cWEoe3RhcmdldDoiQXJyYXkiLHByb3RvOiEwLGZvcmNlZDohdnV9LHtzcGxpY2U6ZnVuY3Rpb24odCxlKXt2YXIgcixuLGksbyxhLHMsdT1Sbyh0aGlzKSxmPW1hKHUubGVuZ3RoKSxjPV9hKHQsZiksbD1hcmd1bWVudHMubGVuZ3RoO2lmKDA9PT1sP3I9bj0wOjE9PT1sPyhyPTAsbj1mLWMpOihyPWwtMixuPWJ1KHl1KHlhKGUpLDApLGYtYykpLGYrci1uPm11KXRocm93IFR5cGVFcnJvcih3dSk7Zm9yKGk9cnModSxuKSxvPTA7bzxuO28rKykoYT1jK28paW4gdSYmV2EoaSxvLHVbYV0pO2lmKGkubGVuZ3RoPW4scjxuKXtmb3Iobz1jO288Zi1uO28rKylzPW8rciwoYT1vK24paW4gdT91W3NdPXVbYV06ZGVsZXRlIHVbc107Zm9yKG89ZjtvPmYtbityO28tLSlkZWxldGUgdVtvLTFdfWVsc2UgaWYocj5uKWZvcihvPWYtbjtvPmM7by0tKXM9bytyLTEsKGE9bytuLTEpaW4gdT91W3NdPXVbYV06ZGVsZXRlIHVbc107Zm9yKG89MDtvPHI7bysrKXVbbytjXT1hcmd1bWVudHNbbysyXTtyZXR1cm4gdS5sZW5ndGg9Zi1uK3IsaX19KTt2YXIgU3U9Y28oKGZ1bmN0aW9uKCl7cmV0dXJuIG51bGwhPT1uZXcgRGF0ZShOYU4pLnRvSlNPTigpfHwxIT09RGF0ZS5wcm90b3R5cGUudG9KU09OLmNhbGwoe3RvSVNPU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIDF9fSl9KSk7cWEoe3RhcmdldDoiRGF0ZSIscHJvdG86ITAsZm9yY2VkOlN1fSx7dG9KU09OOmZ1bmN0aW9uKHQpe3ZhciBlPVJvKHRoaXMpLHI9a28oZSk7cmV0dXJuIm51bWJlciIhPXR5cGVvZiByfHxpc0Zpbml0ZShyKT9lLnRvSVNPU3RyaW5nKCk6bnVsbH19KTt2YXIgX3U9RGF0ZS5wcm90b3R5cGUsRXU9IkludmFsaWQgRGF0ZSIsa3U9InRvU3RyaW5nIixSdT1fdS50b1N0cmluZyx4dT1fdS5nZXRUaW1lO25ldyBEYXRlKE5hTikrIiIhPUV1JiZsYShfdSxrdSwoZnVuY3Rpb24oKXt2YXIgdD14dS5jYWxsKHRoaXMpO3JldHVybiB0PT10P1J1LmNhbGwodGhpcyk6RXV9KSk7dmFyIE91PWZ1bmN0aW9uKHQsZSxyKXt2YXIgbixpO3JldHVybiBRcyYmImZ1bmN0aW9uIj09dHlwZW9mKG49ZS5jb25zdHJ1Y3RvcikmJm4hPT1yJiZFbyhpPW4ucHJvdG90eXBlKSYmaSE9PXIucHJvdG90eXBlJiZRcyh0LGkpLHR9LGp1PSJbXHRcblx2XGZcciDCoOGagOKAgOKAgeKAguKAg+KAhOKAheKAhuKAh+KAiOKAieKAiuKAr+KBn+OAgFx1MjAyOFx1MjAyOVx1ZmVmZl0iLFR1PVJlZ0V4cCgiXiIranUranUrIioiKSxBdT1SZWdFeHAoanUranUrIiokIiksTHU9ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciByPVN0cmluZyhTbyhlKSk7cmV0dXJuIDEmdCYmKHI9ci5yZXBsYWNlKFR1LCIiKSksMiZ0JiYocj1yLnJlcGxhY2UoQXUsIiIpKSxyfX0sTXU9e3N0YXJ0Okx1KDEpLGVuZDpMdSgyKSx0cmltOkx1KDMpfSxDdT1UYS5mLFB1PUNvLmYsSXU9Tm8uZixOdT1NdS50cmltLEJ1PSJOdW1iZXIiLFV1PWZvLk51bWJlcixEdT1VdS5wcm90b3R5cGUsRnU9Ym8oeHMoRHUpKT09QnUscXU9ZnVuY3Rpb24odCl7dmFyIGUscixuLGksbyxhLHMsdSxmPWtvKHQsITEpO2lmKCJzdHJpbmciPT10eXBlb2YgZiYmZi5sZW5ndGg+MilpZig0Mz09PShlPShmPU51KGYpKS5jaGFyQ29kZUF0KDApKXx8NDU9PT1lKXtpZig4OD09PShyPWYuY2hhckNvZGVBdCgyKSl8fDEyMD09PXIpcmV0dXJuIE5hTn1lbHNlIGlmKDQ4PT09ZSl7c3dpdGNoKGYuY2hhckNvZGVBdCgxKSl7Y2FzZSA2NjpjYXNlIDk4Om49MixpPTQ5O2JyZWFrO2Nhc2UgNzk6Y2FzZSAxMTE6bj04LGk9NTU7YnJlYWs7ZGVmYXVsdDpyZXR1cm4rZn1mb3IoYT0obz1mLnNsaWNlKDIpKS5sZW5ndGgscz0wO3M8YTtzKyspaWYoKHU9by5jaGFyQ29kZUF0KHMpKTw0OHx8dT5pKXJldHVybiBOYU47cmV0dXJuIHBhcnNlSW50KG8sbil9cmV0dXJuK2Z9O2lmKERhKEJ1LCFVdSgiIDBvMSIpfHwhVXUoIjBiMSIpfHxVdSgiKzB4MSIpKSl7Zm9yKHZhciB6dSxXdT1mdW5jdGlvbih0KXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPDE/MDp0LHI9dGhpcztyZXR1cm4gciBpbnN0YW5jZW9mIFd1JiYoRnU/Y28oKGZ1bmN0aW9uKCl7RHUudmFsdWVPZi5jYWxsKHIpfSkpOmJvKHIpIT1CdSk/T3UobmV3IFV1KHF1KGUpKSxyLFd1KTpxdShlKX0sWXU9bG8/Q3UoVXUpOiJNQVhfVkFMVUUsTUlOX1ZBTFVFLE5hTixORUdBVElWRV9JTkZJTklUWSxQT1NJVElWRV9JTkZJTklUWSxFUFNJTE9OLGlzRmluaXRlLGlzSW50ZWdlcixpc05hTixpc1NhZmVJbnRlZ2VyLE1BWF9TQUZFX0lOVEVHRVIsTUlOX1NBRkVfSU5URUdFUixwYXJzZUZsb2F0LHBhcnNlSW50LGlzSW50ZWdlcixmcm9tU3RyaW5nLHJhbmdlIi5zcGxpdCgiLCIpLEd1PTA7WXUubGVuZ3RoPkd1O0d1KyspT28oVXUsenU9WXVbR3VdKSYmIU9vKFd1LHp1KSYmSXUoV3UsenUsUHUoVXUsenUpKTtXdS5wcm90b3R5cGU9RHUsRHUuY29uc3RydWN0b3I9V3UsbGEoZm8sQnUsV3UpfXZhciAkdT1mby5pc0Zpbml0ZSxIdT1OdW1iZXIuaXNGaW5pdGV8fGZ1bmN0aW9uKHQpe3JldHVybiJudW1iZXIiPT10eXBlb2YgdCYmJHUodCl9O3FhKHt0YXJnZXQ6Ik51bWJlciIsc3RhdDohMH0se2lzRmluaXRlOkh1fSk7dmFyIFZ1PU1hdGguZmxvb3I7cWEoe3RhcmdldDoiTnVtYmVyIixzdGF0OiEwfSx7aXNJbnRlZ2VyOmZ1bmN0aW9uKHQpe3JldHVybiFFbyh0KSYmaXNGaW5pdGUodCkmJlZ1KHQpPT09dH19KTt2YXIgSnU9T2JqZWN0LmFzc2lnbixLdT1PYmplY3QuZGVmaW5lUHJvcGVydHksWHU9IUp1fHxjbygoZnVuY3Rpb24oKXtpZihsbyYmMSE9PUp1KHtiOjF9LEp1KEt1KHt9LCJhIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtLdSh0aGlzLCJiIix7dmFsdWU6MyxlbnVtZXJhYmxlOiExfSl9fSkse2I6Mn0pKS5iKXJldHVybiEwO3ZhciB0PXt9LGU9e30scj1TeW1ib2woKSxuPSJhYmNkZWZnaGlqa2xtbm9wcXJzdCI7cmV0dXJuIHRbcl09NyxuLnNwbGl0KCIiKS5mb3JFYWNoKChmdW5jdGlvbih0KXtlW3RdPXR9KSksNyE9SnUoe30sdClbcl18fG1zKEp1KHt9LGUpKS5qb2luKCIiKSE9bn0pKT9mdW5jdGlvbih0LGUpe2Zvcih2YXIgcj1Sbyh0KSxuPWFyZ3VtZW50cy5sZW5ndGgsaT0xLG89QWEuZixhPWdvLmY7bj5pOylmb3IodmFyIHMsdT13byhhcmd1bWVudHNbaSsrXSksZj1vP21zKHUpLmNvbmNhdChvKHUpKTptcyh1KSxjPWYubGVuZ3RoLGw9MDtjPmw7KXM9ZltsKytdLGxvJiYhYS5jYWxsKHUscyl8fChyW3NdPXVbc10pO3JldHVybiByfTpKdTtxYSh7dGFyZ2V0OiJPYmplY3QiLHN0YXQ6ITAsZm9yY2VkOk9iamVjdC5hc3NpZ24hPT1YdX0se2Fzc2lnbjpYdX0pO3ZhciBRdT1nby5mLFp1PWZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlKXtmb3IodmFyIHIsbj1fbyhlKSxpPW1zKG4pLG89aS5sZW5ndGgsYT0wLHM9W107bz5hOylyPWlbYSsrXSxsbyYmIVF1LmNhbGwobixyKXx8cy5wdXNoKHQ/W3IsbltyXV06bltyXSk7cmV0dXJuIHN9fSx0Zj1bWnUoITApLFp1KCExKV1bMF07cWEoe3RhcmdldDoiT2JqZWN0IixzdGF0OiEwfSx7ZW50cmllczpmdW5jdGlvbih0KXtyZXR1cm4gdGYodCl9fSk7dmFyIGVmPWNvKChmdW5jdGlvbigpe21zKDEpfSkpO3FhKHt0YXJnZXQ6Ik9iamVjdCIsc3RhdDohMCxmb3JjZWQ6ZWZ9LHtrZXlzOmZ1bmN0aW9uKHQpe3JldHVybiBtcyhSbyh0KSl9fSk7dmFyIHJmPXt9O3JmW3RzKCJ0b1N0cmluZ1RhZyIpXT0ieiI7dmFyIG5mPSJbb2JqZWN0IHpdIj09PVN0cmluZyhyZiksb2Y9dHMoInRvU3RyaW5nVGFnIiksYWY9IkFyZ3VtZW50cyI9PWJvKGZ1bmN0aW9uKCl7cmV0dXJuIGFyZ3VtZW50c30oKSksc2Y9bmY/Ym86ZnVuY3Rpb24odCl7dmFyIGUscixuO3JldHVybiB2b2lkIDA9PT10PyJVbmRlZmluZWQiOm51bGw9PT10PyJOdWxsIjoic3RyaW5nIj09dHlwZW9mKHI9ZnVuY3Rpb24odCxlKXt0cnl7cmV0dXJuIHRbZV19Y2F0Y2godCl7fX0oZT1PYmplY3QodCksb2YpKT9yOmFmP2JvKGUpOiJPYmplY3QiPT0obj1ibyhlKSkmJiJmdW5jdGlvbiI9PXR5cGVvZiBlLmNhbGxlZT8iQXJndW1lbnRzIjpufSx1Zj1uZj97fS50b1N0cmluZzpmdW5jdGlvbigpe3JldHVybiJbb2JqZWN0ICIrc2YodGhpcykrIl0ifTtuZnx8bGEoT2JqZWN0LnByb3RvdHlwZSwidG9TdHJpbmciLHVmLHt1bnNhZmU6ITB9KTt2YXIgZmY9Zm8uUHJvbWlzZSxjZj1mdW5jdGlvbih0LGUscil7Zm9yKHZhciBuIGluIGUpbGEodCxuLGVbbl0scik7cmV0dXJuIHR9LGxmPXRzKCJzcGVjaWVzIiksaGY9ZnVuY3Rpb24odCxlLHIpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IFR5cGVFcnJvcigiSW5jb3JyZWN0ICIrKHI/cisiICI6IiIpKyJpbnZvY2F0aW9uIik7cmV0dXJuIHR9LGRmPXRzKCJpdGVyYXRvciIpLHBmPUFycmF5LnByb3RvdHlwZSxnZj10cygiaXRlcmF0b3IiKSx2Zj1mdW5jdGlvbih0KXt2YXIgZT10LnJldHVybjtpZih2b2lkIDAhPT1lKXJldHVybiBQbyhlLmNhbGwodCkpLnZhbHVlfSx5Zj1mdW5jdGlvbih0LGUpe3RoaXMuc3RvcHBlZD10LHRoaXMucmVzdWx0PWV9LGJmPWZ1bmN0aW9uKHQsZSxyKXt2YXIgaSxvLGEscyx1LGYsYyxsLGg9ciYmci50aGF0LGQ9ISghcnx8IXIuQVNfRU5UUklFUykscD0hKCFyfHwhci5JU19JVEVSQVRPUiksZz0hKCFyfHwhci5JTlRFUlJVUFRFRCksdj1ocyhlLGgsMStkK2cpLHk9ZnVuY3Rpb24odCl7cmV0dXJuIGkmJnZmKGkpLG5ldyB5ZighMCx0KX0sYj1mdW5jdGlvbih0KXtyZXR1cm4gZD8oUG8odCksZz92KHRbMF0sdFsxXSx5KTp2KHRbMF0sdFsxXSkpOmc/dih0LHkpOnYodCl9O2lmKHApaT10O2Vsc2V7aWYoImZ1bmN0aW9uIiE9dHlwZW9mKG89ZnVuY3Rpb24odCl7aWYobnVsbCE9dClyZXR1cm4gdFtnZl18fHRbIkBAaXRlcmF0b3IiXXx8RHNbc2YodCldfSh0KSkpdGhyb3cgVHlwZUVycm9yKCJUYXJnZXQgaXMgbm90IGl0ZXJhYmxlIik7aWYodm9pZCAwIT09KGw9bykmJihEcy5BcnJheT09PWx8fHBmW2RmXT09PWwpKXtmb3IoYT0wLHM9bWEodC5sZW5ndGgpO3M+YTthKyspaWYoKHU9Yih0W2FdKSkmJnUgaW5zdGFuY2VvZiB5ZilyZXR1cm4gdTtyZXR1cm4gbmV3IHlmKCExKX1pPW8uY2FsbCh0KX1mb3IoZj1pLm5leHQ7IShjPWYuY2FsbChpKSkuZG9uZTspe3RyeXt1PWIoYy52YWx1ZSl9Y2F0Y2godCl7dGhyb3cgdmYoaSksdH1pZigib2JqZWN0Ij09bih1KSYmdSYmdSBpbnN0YW5jZW9mIHlmKXJldHVybiB1fXJldHVybiBuZXcgeWYoITEpfSxtZj10cygiaXRlcmF0b3IiKSx3Zj0hMTt0cnl7dmFyIFNmPTAsX2Y9e25leHQ6ZnVuY3Rpb24oKXtyZXR1cm57ZG9uZTohIVNmKyt9fSxyZXR1cm46ZnVuY3Rpb24oKXt3Zj0hMH19O19mW21mXT1mdW5jdGlvbigpe3JldHVybiB0aGlzfSxBcnJheS5mcm9tKF9mLChmdW5jdGlvbigpe3Rocm93IDJ9KSl9Y2F0Y2goZSl7fXZhciBFZixrZixSZix4Zj1mdW5jdGlvbih0LGUpe2lmKCFlJiYhd2YpcmV0dXJuITE7dmFyIHI9ITE7dHJ5e3ZhciBuPXt9O25bbWZdPWZ1bmN0aW9uKCl7cmV0dXJue25leHQ6ZnVuY3Rpb24oKXtyZXR1cm57ZG9uZTpyPSEwfX19fSx0KG4pfWNhdGNoKHQpe31yZXR1cm4gcn0sT2Y9dHMoInNwZWNpZXMiKSxqZj0vKD86aXBob25lfGlwb2R8aXBhZCkuKmFwcGxld2Via2l0L2kudGVzdChZYSksVGY9InByb2Nlc3MiPT1ibyhmby5wcm9jZXNzKSxBZj1mby5sb2NhdGlvbixMZj1mby5zZXRJbW1lZGlhdGUsTWY9Zm8uY2xlYXJJbW1lZGlhdGUsQ2Y9Zm8ucHJvY2VzcyxQZj1mby5NZXNzYWdlQ2hhbm5lbCxJZj1mby5EaXNwYXRjaCxOZj0wLEJmPXt9LFVmPSJvbnJlYWR5c3RhdGVjaGFuZ2UiLERmPWZ1bmN0aW9uKHQpe2lmKEJmLmhhc093blByb3BlcnR5KHQpKXt2YXIgZT1CZlt0XTtkZWxldGUgQmZbdF0sZSgpfX0sRmY9ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7RGYodCl9fSxxZj1mdW5jdGlvbih0KXtEZih0LmRhdGEpfSx6Zj1mdW5jdGlvbih0KXtmby5wb3N0TWVzc2FnZSh0KyIiLEFmLnByb3RvY29sKyIvLyIrQWYuaG9zdCl9O0xmJiZNZnx8KExmPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxyPTE7YXJndW1lbnRzLmxlbmd0aD5yOyllLnB1c2goYXJndW1lbnRzW3IrK10pO3JldHVybiBCZlsrK05mXT1mdW5jdGlvbigpeygiZnVuY3Rpb24iPT10eXBlb2YgdD90OkZ1bmN0aW9uKHQpKS5hcHBseSh2b2lkIDAsZSl9LEVmKE5mKSxOZn0sTWY9ZnVuY3Rpb24odCl7ZGVsZXRlIEJmW3RdfSxUZj9FZj1mdW5jdGlvbih0KXtDZi5uZXh0VGljayhGZih0KSl9OklmJiZJZi5ub3c/RWY9ZnVuY3Rpb24odCl7SWYubm93KEZmKHQpKX06UGYmJiFqZj8oUmY9KGtmPW5ldyBQZikucG9ydDIsa2YucG9ydDEub25tZXNzYWdlPXFmLEVmPWhzKFJmLnBvc3RNZXNzYWdlLFJmLDEpKTpmby5hZGRFdmVudExpc3RlbmVyJiYiZnVuY3Rpb24iPT10eXBlb2YgcG9zdE1lc3NhZ2UmJiFmby5pbXBvcnRTY3JpcHRzJiZBZiYmImZpbGU6IiE9PUFmLnByb3RvY29sJiYhY28oemYpPyhFZj16Zixmby5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIixxZiwhMSkpOkVmPVVmIGluIEFvKCJzY3JpcHQiKT9mdW5jdGlvbih0KXtTcy5hcHBlbmRDaGlsZChBbygic2NyaXB0IikpLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe1NzLnJlbW92ZUNoaWxkKHRoaXMpLERmKHQpfX06ZnVuY3Rpb24odCl7c2V0VGltZW91dChGZih0KSwwKX0pO3ZhciBXZixZZixHZiwkZixIZixWZixKZixLZixYZj17c2V0OkxmLGNsZWFyOk1mfSxRZj0vd2ViMHMoPyEuKmNocm9tZSkvaS50ZXN0KFlhKSxaZj1Dby5mLHRjPVhmLnNldCxlYz1mby5NdXRhdGlvbk9ic2VydmVyfHxmby5XZWJLaXRNdXRhdGlvbk9ic2VydmVyLHJjPWZvLmRvY3VtZW50LG5jPWZvLnByb2Nlc3MsaWM9Zm8uUHJvbWlzZSxvYz1aZihmbywicXVldWVNaWNyb3Rhc2siKSxhYz1vYyYmb2MudmFsdWU7YWN8fChXZj1mdW5jdGlvbigpe3ZhciB0LGU7Zm9yKFRmJiYodD1uYy5kb21haW4pJiZ0LmV4aXQoKTtZZjspe2U9WWYuZm4sWWY9WWYubmV4dDt0cnl7ZSgpfWNhdGNoKHQpe3Rocm93IFlmPyRmKCk6R2Y9dm9pZCAwLHR9fUdmPXZvaWQgMCx0JiZ0LmVudGVyKCl9LGpmfHxUZnx8UWZ8fCFlY3x8IXJjP2ljJiZpYy5yZXNvbHZlPygoSmY9aWMucmVzb2x2ZSh2b2lkIDApKS5jb25zdHJ1Y3Rvcj1pYyxLZj1KZi50aGVuLCRmPWZ1bmN0aW9uKCl7S2YuY2FsbChKZixXZil9KTokZj1UZj9mdW5jdGlvbigpe25jLm5leHRUaWNrKFdmKX06ZnVuY3Rpb24oKXt0Yy5jYWxsKGZvLFdmKX06KEhmPSEwLFZmPXJjLmNyZWF0ZVRleHROb2RlKCIiKSxuZXcgZWMoV2YpLm9ic2VydmUoVmYse2NoYXJhY3RlckRhdGE6ITB9KSwkZj1mdW5jdGlvbigpe1ZmLmRhdGE9SGY9IUhmfSkpO3ZhciBzYyx1YyxmYyxjYyxsYz1hY3x8ZnVuY3Rpb24odCl7dmFyIGU9e2ZuOnQsbmV4dDp2b2lkIDB9O0dmJiYoR2YubmV4dD1lKSxZZnx8KFlmPWUsJGYoKSksR2Y9ZX0saGM9ZnVuY3Rpb24odCl7dmFyIGUscjt0aGlzLnByb21pc2U9bmV3IHQoKGZ1bmN0aW9uKHQsbil7aWYodm9pZCAwIT09ZXx8dm9pZCAwIT09cil0aHJvdyBUeXBlRXJyb3IoIkJhZCBQcm9taXNlIGNvbnN0cnVjdG9yIik7ZT10LHI9bn0pKSx0aGlzLnJlc29sdmU9bHMoZSksdGhpcy5yZWplY3Q9bHMocil9LGRjPXtmOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgaGModCl9fSxwYz1mdW5jdGlvbih0KXt0cnl7cmV0dXJue2Vycm9yOiExLHZhbHVlOnQoKX19Y2F0Y2godCl7cmV0dXJue2Vycm9yOiEwLHZhbHVlOnR9fX0sZ2M9Im9iamVjdCI9PSgidW5kZWZpbmVkIj09dHlwZW9mIHdpbmRvdz8idW5kZWZpbmVkIjpuKHdpbmRvdykpLHZjPVhmLnNldCx5Yz10cygic3BlY2llcyIpLGJjPSJQcm9taXNlIixtYz1jYS5nZXQsd2M9Y2Euc2V0LFNjPWNhLmdldHRlckZvcihiYyksX2M9ZmYmJmZmLnByb3RvdHlwZSxFYz1mZixrYz1fYyxSYz1mby5UeXBlRXJyb3IseGM9Zm8uZG9jdW1lbnQsT2M9Zm8ucHJvY2VzcyxqYz1kYy5mLFRjPWpjLEFjPSEhKHhjJiZ4Yy5jcmVhdGVFdmVudCYmZm8uZGlzcGF0Y2hFdmVudCksTGM9ImZ1bmN0aW9uIj09dHlwZW9mIFByb21pc2VSZWplY3Rpb25FdmVudCxNYz0idW5oYW5kbGVkcmVqZWN0aW9uIixDYz0hMSxQYz1EYShiYywoZnVuY3Rpb24oKXt2YXIgdD1HbyhFYykhPT1TdHJpbmcoRWMpO2lmKCF0JiY2Nj09PVZhKXJldHVybiEwO2lmKFZhPj01MSYmL25hdGl2ZSBjb2RlLy50ZXN0KEVjKSlyZXR1cm4hMTt2YXIgZT1uZXcgRWMoKGZ1bmN0aW9uKHQpe3QoMSl9KSkscj1mdW5jdGlvbih0KXt0KChmdW5jdGlvbigpe30pLChmdW5jdGlvbigpe30pKX07cmV0dXJuKGUuY29uc3RydWN0b3I9e30pW3ljXT1yLCEoQ2M9ZS50aGVuKChmdW5jdGlvbigpe30pKWluc3RhbmNlb2Ygcil8fCF0JiZnYyYmIUxjfSkpLEljPVBjfHwheGYoKGZ1bmN0aW9uKHQpe0VjLmFsbCh0KS5jYXRjaCgoZnVuY3Rpb24oKXt9KSl9KSksTmM9ZnVuY3Rpb24odCl7dmFyIGU7cmV0dXJuISghRW8odCl8fCJmdW5jdGlvbiIhPXR5cGVvZihlPXQudGhlbikpJiZlfSxCYz1mdW5jdGlvbih0LGUpe2lmKCF0Lm5vdGlmaWVkKXt0Lm5vdGlmaWVkPSEwO3ZhciByPXQucmVhY3Rpb25zO2xjKChmdW5jdGlvbigpe2Zvcih2YXIgbj10LnZhbHVlLGk9MT09dC5zdGF0ZSxvPTA7ci5sZW5ndGg+bzspe3ZhciBhLHMsdSxmPXJbbysrXSxjPWk/Zi5vazpmLmZhaWwsbD1mLnJlc29sdmUsaD1mLnJlamVjdCxkPWYuZG9tYWluO3RyeXtjPyhpfHwoMj09PXQucmVqZWN0aW9uJiZxYyh0KSx0LnJlamVjdGlvbj0xKSwhMD09PWM/YT1uOihkJiZkLmVudGVyKCksYT1jKG4pLGQmJihkLmV4aXQoKSx1PSEwKSksYT09PWYucHJvbWlzZT9oKFJjKCJQcm9taXNlLWNoYWluIGN5Y2xlIikpOihzPU5jKGEpKT9zLmNhbGwoYSxsLGgpOmwoYSkpOmgobil9Y2F0Y2godCl7ZCYmIXUmJmQuZXhpdCgpLGgodCl9fXQucmVhY3Rpb25zPVtdLHQubm90aWZpZWQ9ITEsZSYmIXQucmVqZWN0aW9uJiZEYyh0KX0pKX19LFVjPWZ1bmN0aW9uKHQsZSxyKXt2YXIgbixpO0FjPygobj14Yy5jcmVhdGVFdmVudCgiRXZlbnQiKSkucHJvbWlzZT1lLG4ucmVhc29uPXIsbi5pbml0RXZlbnQodCwhMSwhMCksZm8uZGlzcGF0Y2hFdmVudChuKSk6bj17cHJvbWlzZTplLHJlYXNvbjpyfSwhTGMmJihpPWZvWyJvbiIrdF0pP2kobik6dD09PU1jJiZmdW5jdGlvbih0LGUpe3ZhciByPWZvLmNvbnNvbGU7ciYmci5lcnJvciYmKDE9PT1hcmd1bWVudHMubGVuZ3RoP3IuZXJyb3IodCk6ci5lcnJvcih0LGUpKX0oIlVuaGFuZGxlZCBwcm9taXNlIHJlamVjdGlvbiIscil9LERjPWZ1bmN0aW9uKHQpe3ZjLmNhbGwoZm8sKGZ1bmN0aW9uKCl7dmFyIGUscj10LmZhY2FkZSxuPXQudmFsdWU7aWYoRmModCkmJihlPXBjKChmdW5jdGlvbigpe1RmP09jLmVtaXQoInVuaGFuZGxlZFJlamVjdGlvbiIsbixyKTpVYyhNYyxyLG4pfSkpLHQucmVqZWN0aW9uPVRmfHxGYyh0KT8yOjEsZS5lcnJvcikpdGhyb3cgZS52YWx1ZX0pKX0sRmM9ZnVuY3Rpb24odCl7cmV0dXJuIDEhPT10LnJlamVjdGlvbiYmIXQucGFyZW50fSxxYz1mdW5jdGlvbih0KXt2Yy5jYWxsKGZvLChmdW5jdGlvbigpe3ZhciBlPXQuZmFjYWRlO1RmP09jLmVtaXQoInJlamVjdGlvbkhhbmRsZWQiLGUpOlVjKCJyZWplY3Rpb25oYW5kbGVkIixlLHQudmFsdWUpfSkpfSx6Yz1mdW5jdGlvbih0LGUscil7cmV0dXJuIGZ1bmN0aW9uKG4pe3QoZSxuLHIpfX0sV2M9ZnVuY3Rpb24odCxlLHIpe3QuZG9uZXx8KHQuZG9uZT0hMCxyJiYodD1yKSx0LnZhbHVlPWUsdC5zdGF0ZT0yLEJjKHQsITApKX0sWWM9ZnVuY3Rpb24gdChlLHIsbil7aWYoIWUuZG9uZSl7ZS5kb25lPSEwLG4mJihlPW4pO3RyeXtpZihlLmZhY2FkZT09PXIpdGhyb3cgUmMoIlByb21pc2UgY2FuJ3QgYmUgcmVzb2x2ZWQgaXRzZWxmIik7dmFyIGk9TmMocik7aT9sYygoZnVuY3Rpb24oKXt2YXIgbj17ZG9uZTohMX07dHJ5e2kuY2FsbChyLHpjKHQsbixlKSx6YyhXYyxuLGUpKX1jYXRjaCh0KXtXYyhuLHQsZSl9fSkpOihlLnZhbHVlPXIsZS5zdGF0ZT0xLEJjKGUsITEpKX1jYXRjaCh0KXtXYyh7ZG9uZTohMX0sdCxlKX19fTtpZihQYyYmKGtjPShFYz1mdW5jdGlvbih0KXtoZih0aGlzLEVjLGJjKSxscyh0KSxzYy5jYWxsKHRoaXMpO3ZhciBlPW1jKHRoaXMpO3RyeXt0KHpjKFljLGUpLHpjKFdjLGUpKX1jYXRjaCh0KXtXYyhlLHQpfX0pLnByb3RvdHlwZSwoc2M9ZnVuY3Rpb24odCl7d2ModGhpcyx7dHlwZTpiYyxkb25lOiExLG5vdGlmaWVkOiExLHBhcmVudDohMSxyZWFjdGlvbnM6W10scmVqZWN0aW9uOiExLHN0YXRlOjAsdmFsdWU6dm9pZCAwfSl9KS5wcm90b3R5cGU9Y2Yoa2Mse3RoZW46ZnVuY3Rpb24odCxlKXt2YXIgcj1TYyh0aGlzKSxuPWpjKGZ1bmN0aW9uKHQsZSl7dmFyIHIsbj1Qbyh0KS5jb25zdHJ1Y3RvcjtyZXR1cm4gdm9pZCAwPT09bnx8bnVsbD09KHI9UG8obilbT2ZdKT9lOmxzKHIpfSh0aGlzLEVjKSk7cmV0dXJuIG4ub2s9ImZ1bmN0aW9uIiE9dHlwZW9mIHR8fHQsbi5mYWlsPSJmdW5jdGlvbiI9PXR5cGVvZiBlJiZlLG4uZG9tYWluPVRmP09jLmRvbWFpbjp2b2lkIDAsci5wYXJlbnQ9ITAsci5yZWFjdGlvbnMucHVzaChuKSwwIT1yLnN0YXRlJiZCYyhyLCExKSxuLnByb21pc2V9LGNhdGNoOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRoZW4odm9pZCAwLHQpfX0pLHVjPWZ1bmN0aW9uKCl7dmFyIHQ9bmV3IHNjLGU9bWModCk7dGhpcy5wcm9taXNlPXQsdGhpcy5yZXNvbHZlPXpjKFljLGUpLHRoaXMucmVqZWN0PXpjKFdjLGUpfSxkYy5mPWpjPWZ1bmN0aW9uKHQpe3JldHVybiB0PT09RWN8fHQ9PT1mYz9uZXcgdWModCk6VGModCl9LCJmdW5jdGlvbiI9PXR5cGVvZiBmZiYmX2MhPT1PYmplY3QucHJvdG90eXBlKSl7Y2M9X2MudGhlbixDY3x8KGxhKF9jLCJ0aGVuIiwoZnVuY3Rpb24odCxlKXt2YXIgcj10aGlzO3JldHVybiBuZXcgRWMoKGZ1bmN0aW9uKHQsZSl7Y2MuY2FsbChyLHQsZSl9KSkudGhlbih0LGUpfSkse3Vuc2FmZTohMH0pLGxhKF9jLCJjYXRjaCIsa2MuY2F0Y2gse3Vuc2FmZTohMH0pKTt0cnl7ZGVsZXRlIF9jLmNvbnN0cnVjdG9yfWNhdGNoKGUpe31RcyYmUXMoX2Msa2MpfXFhKHtnbG9iYWw6ITAsd3JhcDohMCxmb3JjZWQ6UGN9LHtQcm9taXNlOkVjfSksSnMoRWMsYmMsITEpLGZ1bmN0aW9uKHQpe3ZhciBlPXBhKHQpLHI9Tm8uZjtsbyYmZSYmIWVbbGZdJiZyKGUsbGYse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc319KX0oYmMpLGZjPXBhKGJjKSxxYSh7dGFyZ2V0OmJjLHN0YXQ6ITAsZm9yY2VkOlBjfSx7cmVqZWN0OmZ1bmN0aW9uKHQpe3ZhciBlPWpjKHRoaXMpO3JldHVybiBlLnJlamVjdC5jYWxsKHZvaWQgMCx0KSxlLnByb21pc2V9fSkscWEoe3RhcmdldDpiYyxzdGF0OiEwLGZvcmNlZDpQY30se3Jlc29sdmU6ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7aWYoUG8odCksRW8oZSkmJmUuY29uc3RydWN0b3I9PT10KXJldHVybiBlO3ZhciByPWRjLmYodCk7cmV0dXJuKDAsci5yZXNvbHZlKShlKSxyLnByb21pc2V9KHRoaXMsdCl9fSkscWEoe3RhcmdldDpiYyxzdGF0OiEwLGZvcmNlZDpJY30se2FsbDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLHI9amMoZSksbj1yLnJlc29sdmUsaT1yLnJlamVjdCxvPXBjKChmdW5jdGlvbigpe3ZhciByPWxzKGUucmVzb2x2ZSksbz1bXSxhPTAscz0xO2JmKHQsKGZ1bmN0aW9uKHQpe3ZhciB1PWErKyxmPSExO28ucHVzaCh2b2lkIDApLHMrKyxyLmNhbGwoZSx0KS50aGVuKChmdW5jdGlvbih0KXtmfHwoZj0hMCxvW3VdPXQsLS1zfHxuKG8pKX0pLGkpfSkpLC0tc3x8bihvKX0pKTtyZXR1cm4gby5lcnJvciYmaShvLnZhbHVlKSxyLnByb21pc2V9LHJhY2U6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxyPWpjKGUpLG49ci5yZWplY3QsaT1wYygoZnVuY3Rpb24oKXt2YXIgaT1scyhlLnJlc29sdmUpO2JmKHQsKGZ1bmN0aW9uKHQpe2kuY2FsbChlLHQpLnRoZW4oci5yZXNvbHZlLG4pfSkpfSkpO3JldHVybiBpLmVycm9yJiZuKGkudmFsdWUpLHIucHJvbWlzZX19KTt2YXIgR2M9ZnVuY3Rpb24oKXt2YXIgdD1Qbyh0aGlzKSxlPSIiO3JldHVybiB0Lmdsb2JhbCYmKGUrPSJnIiksdC5pZ25vcmVDYXNlJiYoZSs9ImkiKSx0Lm11bHRpbGluZSYmKGUrPSJtIiksdC5kb3RBbGwmJihlKz0icyIpLHQudW5pY29kZSYmKGUrPSJ1IiksdC5zdGlja3kmJihlKz0ieSIpLGV9O2Z1bmN0aW9uICRjKHQsZSl7cmV0dXJuIFJlZ0V4cCh0LGUpfXZhciBIYyxWYyxKYz17VU5TVVBQT1JURURfWTpjbygoZnVuY3Rpb24oKXt2YXIgdD0kYygiYSIsInkiKTtyZXR1cm4gdC5sYXN0SW5kZXg9MixudWxsIT10LmV4ZWMoImFiY2QiKX0pKSxCUk9LRU5fQ0FSRVQ6Y28oKGZ1bmN0aW9uKCl7dmFyIHQ9JGMoIl5yIiwiZ3kiKTtyZXR1cm4gdC5sYXN0SW5kZXg9MixudWxsIT10LmV4ZWMoInN0ciIpfSkpfSxLYz1SZWdFeHAucHJvdG90eXBlLmV4ZWMsWGM9Vm8oIm5hdGl2ZS1zdHJpbmctcmVwbGFjZSIsU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlKSxRYz1LYyxaYz0oSGM9L2EvLFZjPS9iKi9nLEtjLmNhbGwoSGMsImEiKSxLYy5jYWxsKFZjLCJhIiksMCE9PUhjLmxhc3RJbmRleHx8MCE9PVZjLmxhc3RJbmRleCksdGw9SmMuVU5TVVBQT1JURURfWXx8SmMuQlJPS0VOX0NBUkVULGVsPXZvaWQgMCE9PS8oKT8/Ly5leGVjKCIiKVsxXTsoWmN8fGVsfHx0bCkmJihRYz1mdW5jdGlvbih0KXt2YXIgZSxyLG4saSxvPXRoaXMsYT10bCYmby5zdGlja3kscz1HYy5jYWxsKG8pLHU9by5zb3VyY2UsZj0wLGM9dDtyZXR1cm4gYSYmKC0xPT09KHM9cy5yZXBsYWNlKCJ5IiwiIikpLmluZGV4T2YoImciKSYmKHMrPSJnIiksYz1TdHJpbmcodCkuc2xpY2Uoby5sYXN0SW5kZXgpLG8ubGFzdEluZGV4PjAmJighby5tdWx0aWxpbmV8fG8ubXVsdGlsaW5lJiYiXG4iIT09dFtvLmxhc3RJbmRleC0xXSkmJih1PSIoPzogIit1KyIpIixjPSIgIitjLGYrKykscj1uZXcgUmVnRXhwKCJeKD86Iit1KyIpIixzKSksZWwmJihyPW5ldyBSZWdFeHAoIl4iK3UrIiQoPyFcXHMpIixzKSksWmMmJihlPW8ubGFzdEluZGV4KSxuPUtjLmNhbGwoYT9yOm8sYyksYT9uPyhuLmlucHV0PW4uaW5wdXQuc2xpY2UoZiksblswXT1uWzBdLnNsaWNlKGYpLG4uaW5kZXg9by5sYXN0SW5kZXgsby5sYXN0SW5kZXgrPW5bMF0ubGVuZ3RoKTpvLmxhc3RJbmRleD0wOlpjJiZuJiYoby5sYXN0SW5kZXg9by5nbG9iYWw/bi5pbmRleCtuWzBdLmxlbmd0aDplKSxlbCYmbiYmbi5sZW5ndGg+MSYmWGMuY2FsbChuWzBdLHIsKGZ1bmN0aW9uKCl7Zm9yKGk9MTtpPGFyZ3VtZW50cy5sZW5ndGgtMjtpKyspdm9pZCAwPT09YXJndW1lbnRzW2ldJiYobltpXT12b2lkIDApfSkpLG59KTt2YXIgcmw9UWM7cWEoe3RhcmdldDoiUmVnRXhwIixwcm90bzohMCxmb3JjZWQ6Ly4vLmV4ZWMhPT1ybH0se2V4ZWM6cmx9KTt2YXIgbmw9InRvU3RyaW5nIixpbD1SZWdFeHAucHJvdG90eXBlLG9sPWlsLnRvU3RyaW5nLGFsPWNvKChmdW5jdGlvbigpe3JldHVybiIvYS9iIiE9b2wuY2FsbCh7c291cmNlOiJhIixmbGFnczoiYiJ9KX0pKSxzbD1vbC5uYW1lIT1ubDsoYWx8fHNsKSYmbGEoUmVnRXhwLnByb3RvdHlwZSxubCwoZnVuY3Rpb24oKXt2YXIgdD1Qbyh0aGlzKSxlPVN0cmluZyh0LnNvdXJjZSkscj10LmZsYWdzO3JldHVybiIvIitlKyIvIitTdHJpbmcodm9pZCAwPT09ciYmdCBpbnN0YW5jZW9mIFJlZ0V4cCYmISgiZmxhZ3MiaW4gaWwpP0djLmNhbGwodCk6cil9KSx7dW5zYWZlOiEwfSk7dmFyIHVsPXRzKCJtYXRjaCIpLGZsPWZ1bmN0aW9uKHQpe2lmKGZ1bmN0aW9uKHQpe3ZhciBlO3JldHVybiBFbyh0KSYmKHZvaWQgMCE9PShlPXRbdWxdKT8hIWU6IlJlZ0V4cCI9PWJvKHQpKX0odCkpdGhyb3cgVHlwZUVycm9yKCJUaGUgbWV0aG9kIGRvZXNuJ3QgYWNjZXB0IHJlZ3VsYXIgZXhwcmVzc2lvbnMiKTtyZXR1cm4gdH0sY2w9dHMoIm1hdGNoIik7cWEoe3RhcmdldDoiU3RyaW5nIixwcm90bzohMCxmb3JjZWQ6IWZ1bmN0aW9uKHQpe3ZhciBlPS8uLzt0cnl7Ii8uLyJbdF0oZSl9Y2F0Y2gocil7dHJ5e3JldHVybiBlW2NsXT0hMSwiLy4vIlt0XShlKX1jYXRjaCh0KXt9fXJldHVybiExfSgiaW5jbHVkZXMiKX0se2luY2x1ZGVzOmZ1bmN0aW9uKHQpe3JldHVybiEhflN0cmluZyhTbyh0aGlzKSkuaW5kZXhPZihmbCh0KSxhcmd1bWVudHMubGVuZ3RoPjE/YXJndW1lbnRzWzFdOnZvaWQgMCl9fSk7dmFyIGxsPWZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlLHIpe3ZhciBuLGksbz1TdHJpbmcoU28oZSkpLGE9eWEocikscz1vLmxlbmd0aDtyZXR1cm4gYTwwfHxhPj1zP3Q/IiI6dm9pZCAwOihuPW8uY2hhckNvZGVBdChhKSk8NTUyOTZ8fG4+NTYzMTl8fGErMT09PXN8fChpPW8uY2hhckNvZGVBdChhKzEpKTw1NjMyMHx8aT41NzM0Mz90P28uY2hhckF0KGEpOm46dD9vLnNsaWNlKGEsYSsyKTppLTU2MzIwKyhuLTU1Mjk2PDwxMCkrNjU1MzZ9fSxobD17Y29kZUF0OmxsKCExKSxjaGFyQXQ6bGwoITApfSxkbD1obC5jaGFyQXQscGw9IlN0cmluZyBJdGVyYXRvciIsZ2w9Y2Euc2V0LHZsPWNhLmdldHRlckZvcihwbCk7YXUoU3RyaW5nLCJTdHJpbmciLChmdW5jdGlvbih0KXtnbCh0aGlzLHt0eXBlOnBsLHN0cmluZzpTdHJpbmcodCksaW5kZXg6MH0pfSksKGZ1bmN0aW9uKCl7dmFyIHQsZT12bCh0aGlzKSxyPWUuc3RyaW5nLG49ZS5pbmRleDtyZXR1cm4gbj49ci5sZW5ndGg/e3ZhbHVlOnZvaWQgMCxkb25lOiEwfToodD1kbChyLG4pLGUuaW5kZXgrPXQubGVuZ3RoLHt2YWx1ZTp0LGRvbmU6ITF9KX0pKTt2YXIgeWw9ZnVuY3Rpb24odCl7dmFyIGU9U3RyaW5nKFNvKHRoaXMpKSxyPSIiLG49eWEodCk7aWYobjwwfHxuPT0xLzApdGhyb3cgUmFuZ2VFcnJvcigiV3JvbmcgbnVtYmVyIG9mIHJlcGV0aXRpb25zIik7Zm9yKDtuPjA7KG4+Pj49MSkmJihlKz1lKSkxJm4mJihyKz1lKTtyZXR1cm4gcn0sYmw9TWF0aC5jZWlsLG1sPWZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlLHIsbil7dmFyIGksbyxhPVN0cmluZyhTbyhlKSkscz1hLmxlbmd0aCx1PXZvaWQgMD09PW4/IiAiOlN0cmluZyhuKSxmPW1hKHIpO3JldHVybiBmPD1zfHwiIj09dT9hOigobz15bC5jYWxsKHUsYmwoKGk9Zi1zKS91Lmxlbmd0aCkpKS5sZW5ndGg+aSYmKG89by5zbGljZSgwLGkpKSx0P2ErbzpvK2EpfX0sd2w9e3N0YXJ0Om1sKCExKSxlbmQ6bWwoITApfSxTbD0vVmVyc2lvblwvMTAoPzpcLlxkKyl7MSwyfSg/OiBbXHcuL10rKT8oPzogTW9iaWxlXC9cdyspPyBTYWZhcmlcLy8udGVzdChZYSksX2w9d2wuc3RhcnQ7cWEoe3RhcmdldDoiU3RyaW5nIixwcm90bzohMCxmb3JjZWQ6U2x9LHtwYWRTdGFydDpmdW5jdGlvbih0KXtyZXR1cm4gX2wodGhpcyx0LGFyZ3VtZW50cy5sZW5ndGg+MT9hcmd1bWVudHNbMV06dm9pZCAwKX19KSxxYSh7dGFyZ2V0OiJTdHJpbmciLHByb3RvOiEwfSx7cmVwZWF0OnlsfSk7dmFyIEVsPXRzKCJzcGVjaWVzIiksa2w9UmVnRXhwLnByb3RvdHlwZSxSbD0hY28oKGZ1bmN0aW9uKCl7dmFyIHQ9Ly4vO3JldHVybiB0LmV4ZWM9ZnVuY3Rpb24oKXt2YXIgdD1bXTtyZXR1cm4gdC5ncm91cHM9e2E6IjcifSx0fSwiNyIhPT0iIi5yZXBsYWNlKHQsIiQ8YT4iKX0pKSx4bD0iJDAiPT09ImEiLnJlcGxhY2UoLy4vLCIkMCIpLE9sPXRzKCJyZXBsYWNlIiksamw9ISEvLi9bT2xdJiYiIj09PS8uL1tPbF0oImEiLCIkMCIpLFRsPSFjbygoZnVuY3Rpb24oKXt2YXIgdD0vKD86KS8sZT10LmV4ZWM7dC5leGVjPWZ1bmN0aW9uKCl7cmV0dXJuIGUuYXBwbHkodGhpcyxhcmd1bWVudHMpfTt2YXIgcj0iYWIiLnNwbGl0KHQpO3JldHVybiAyIT09ci5sZW5ndGh8fCJhIiE9PXJbMF18fCJiIiE9PXJbMV19KSksQWw9aGwuY2hhckF0LExsPWZ1bmN0aW9uKHQsZSxyKXtyZXR1cm4gZSsocj9BbCh0LGUpLmxlbmd0aDoxKX0sTWw9TWF0aC5mbG9vcixDbD0iIi5yZXBsYWNlLFBsPS9cJChbJCYnYF18XGR7MSwyfXw8W14+XSo+KS9nLElsPS9cJChbJCYnYF18XGR7MSwyfSkvZyxObD1mdW5jdGlvbih0LGUscixuLGksbyl7dmFyIGE9cit0Lmxlbmd0aCxzPW4ubGVuZ3RoLHU9SWw7cmV0dXJuIHZvaWQgMCE9PWkmJihpPVJvKGkpLHU9UGwpLENsLmNhbGwobyx1LChmdW5jdGlvbihvLHUpe3ZhciBmO3N3aXRjaCh1LmNoYXJBdCgwKSl7Y2FzZSIkIjpyZXR1cm4iJCI7Y2FzZSImIjpyZXR1cm4gdDtjYXNlImAiOnJldHVybiBlLnNsaWNlKDAscik7Y2FzZSInIjpyZXR1cm4gZS5zbGljZShhKTtjYXNlIjwiOmY9aVt1LnNsaWNlKDEsLTEpXTticmVhaztkZWZhdWx0OnZhciBjPSt1O2lmKDA9PT1jKXJldHVybiBvO2lmKGM+cyl7dmFyIGw9TWwoYy8xMCk7cmV0dXJuIDA9PT1sP286bDw9cz92b2lkIDA9PT1uW2wtMV0/dS5jaGFyQXQoMSk6bltsLTFdK3UuY2hhckF0KDEpOm99Zj1uW2MtMV19cmV0dXJuIHZvaWQgMD09PWY/IiI6Zn0pKX0sQmw9ZnVuY3Rpb24odCxlKXt2YXIgcj10LmV4ZWM7aWYoImZ1bmN0aW9uIj09dHlwZW9mIHIpe3ZhciBpPXIuY2FsbCh0LGUpO2lmKCJvYmplY3QiIT09bihpKSl0aHJvdyBUeXBlRXJyb3IoIlJlZ0V4cCBleGVjIG1ldGhvZCByZXR1cm5lZCBzb21ldGhpbmcgb3RoZXIgdGhhbiBhbiBPYmplY3Qgb3IgbnVsbCIpO3JldHVybiBpfWlmKCJSZWdFeHAiIT09Ym8odCkpdGhyb3cgVHlwZUVycm9yKCJSZWdFeHAjZXhlYyBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyIik7cmV0dXJuIHJsLmNhbGwodCxlKX0sVWw9TWF0aC5tYXgsRGw9TWF0aC5taW47IWZ1bmN0aW9uKHQsZSxyLG4pe3ZhciBpPXRzKHQpLG89IWNvKChmdW5jdGlvbigpe3ZhciBlPXt9O3JldHVybiBlW2ldPWZ1bmN0aW9uKCl7cmV0dXJuIDd9LDchPSIiW3RdKGUpfSkpLGE9byYmIWNvKChmdW5jdGlvbigpe3ZhciBlPSExLHI9L2EvO3JldHVybiJzcGxpdCI9PT10JiYoKHI9e30pLmNvbnN0cnVjdG9yPXt9LHIuY29uc3RydWN0b3JbRWxdPWZ1bmN0aW9uKCl7cmV0dXJuIHJ9LHIuZmxhZ3M9IiIscltpXT0vLi9baV0pLHIuZXhlYz1mdW5jdGlvbigpe3JldHVybiBlPSEwLG51bGx9LHJbaV0oIiIpLCFlfSkpO2lmKCFvfHwhYXx8InJlcGxhY2UiPT09dCYmKCFSbHx8IXhsfHxqbCl8fCJzcGxpdCI9PT10JiYhVGwpe3ZhciBzPS8uL1tpXSx1PXIoaSwiIlt0XSwoZnVuY3Rpb24odCxlLHIsbixpKXt2YXIgYT1lLmV4ZWM7cmV0dXJuIGE9PT1ybHx8YT09PWtsLmV4ZWM/byYmIWk/e2RvbmU6ITAsdmFsdWU6cy5jYWxsKGUscixuKX06e2RvbmU6ITAsdmFsdWU6dC5jYWxsKHIsZSxuKX06e2RvbmU6ITF9fSkse1JFUExBQ0VfS0VFUFNfJDA6eGwsUkVHRVhQX1JFUExBQ0VfU1VCU1RJVFVURVNfVU5ERUZJTkVEX0NBUFRVUkU6amx9KSxmPXVbMF0sYz11WzFdO2xhKFN0cmluZy5wcm90b3R5cGUsdCxmKSxsYShrbCxpLDI9PWU/ZnVuY3Rpb24odCxlKXtyZXR1cm4gYy5jYWxsKHQsdGhpcyxlKX06ZnVuY3Rpb24odCl7cmV0dXJuIGMuY2FsbCh0LHRoaXMpfSl9biYmQm8oa2xbaV0sInNoYW0iLCEwKX0oInJlcGxhY2UiLDIsKGZ1bmN0aW9uKHQsZSxyLG4pe3ZhciBpPW4uUkVHRVhQX1JFUExBQ0VfU1VCU1RJVFVURVNfVU5ERUZJTkVEX0NBUFRVUkUsbz1uLlJFUExBQ0VfS0VFUFNfJDAsYT1pPyIkIjoiJDAiO3JldHVybltmdW5jdGlvbihyLG4pe3ZhciBpPVNvKHRoaXMpLG89bnVsbD09cj92b2lkIDA6clt0XTtyZXR1cm4gdm9pZCAwIT09bz9vLmNhbGwocixpLG4pOmUuY2FsbChTdHJpbmcoaSkscixuKX0sZnVuY3Rpb24odCxuKXtpZighaSYmb3x8InN0cmluZyI9PXR5cGVvZiBuJiYtMT09PW4uaW5kZXhPZihhKSl7dmFyIHM9cihlLHQsdGhpcyxuKTtpZihzLmRvbmUpcmV0dXJuIHMudmFsdWV9dmFyIHU9UG8odCksZj1TdHJpbmcodGhpcyksYz0iZnVuY3Rpb24iPT10eXBlb2YgbjtjfHwobj1TdHJpbmcobikpO3ZhciBsPXUuZ2xvYmFsO2lmKGwpe3ZhciBoPXUudW5pY29kZTt1Lmxhc3RJbmRleD0wfWZvcih2YXIgZD1bXTs7KXt2YXIgcD1CbCh1LGYpO2lmKG51bGw9PT1wKWJyZWFrO2lmKGQucHVzaChwKSwhbClicmVhazsiIj09PVN0cmluZyhwWzBdKSYmKHUubGFzdEluZGV4PUxsKGYsbWEodS5sYXN0SW5kZXgpLGgpKX1mb3IodmFyIGcsdj0iIix5PTAsYj0wO2I8ZC5sZW5ndGg7YisrKXtwPWRbYl07Zm9yKHZhciBtPVN0cmluZyhwWzBdKSx3PVVsKERsKHlhKHAuaW5kZXgpLGYubGVuZ3RoKSwwKSxTPVtdLF89MTtfPHAubGVuZ3RoO18rKylTLnB1c2godm9pZCAwPT09KGc9cFtfXSk/ZzpTdHJpbmcoZykpO3ZhciBFPXAuZ3JvdXBzO2lmKGMpe3ZhciBrPVttXS5jb25jYXQoUyx3LGYpO3ZvaWQgMCE9PUUmJmsucHVzaChFKTt2YXIgUj1TdHJpbmcobi5hcHBseSh2b2lkIDAsaykpfWVsc2UgUj1ObChtLGYsdyxTLEUsbik7dz49eSYmKHYrPWYuc2xpY2UoeSx3KStSLHk9dyttLmxlbmd0aCl9cmV0dXJuIHYrZi5zbGljZSh5KX1dfSkpO3ZhciBGbD0hY28oKGZ1bmN0aW9uKCl7cmV0dXJuIE9iamVjdC5pc0V4dGVuc2libGUoT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKHt9KSl9KSkscWw9YSgoZnVuY3Rpb24odCl7dmFyIGU9Tm8uZixyPVhvKCJtZXRhIiksaT0wLG89T2JqZWN0LmlzRXh0ZW5zaWJsZXx8ZnVuY3Rpb24oKXtyZXR1cm4hMH0sYT1mdW5jdGlvbih0KXtlKHQscix7dmFsdWU6e29iamVjdElEOiJPIisgKytpLHdlYWtEYXRhOnt9fX0pfSxzPXQuZXhwb3J0cz17UkVRVUlSRUQ6ITEsZmFzdEtleTpmdW5jdGlvbih0LGUpe2lmKCFFbyh0KSlyZXR1cm4ic3ltYm9sIj09bih0KT90Oigic3RyaW5nIj09dHlwZW9mIHQ/IlMiOiJQIikrdDtpZighT28odCxyKSl7aWYoIW8odCkpcmV0dXJuIkYiO2lmKCFlKXJldHVybiJFIjthKHQpfXJldHVybiB0W3JdLm9iamVjdElEfSxnZXRXZWFrRGF0YTpmdW5jdGlvbih0LGUpe2lmKCFPbyh0LHIpKXtpZighbyh0KSlyZXR1cm4hMDtpZighZSlyZXR1cm4hMTthKHQpfXJldHVybiB0W3JdLndlYWtEYXRhfSxvbkZyZWV6ZTpmdW5jdGlvbih0KXtyZXR1cm4gRmwmJnMuUkVRVUlSRUQmJm8odCkmJiFPbyh0LHIpJiZhKHQpLHR9fTt0YVtyXT0hMH0pKSx6bD1mdW5jdGlvbih0LGUscil7dmFyIG49LTEhPT10LmluZGV4T2YoIk1hcCIpLGk9LTEhPT10LmluZGV4T2YoIldlYWsiKSxvPW4/InNldCI6ImFkZCIsYT1mb1t0XSxzPWEmJmEucHJvdG90eXBlLHU9YSxmPXt9LGM9ZnVuY3Rpb24odCl7dmFyIGU9c1t0XTtsYShzLHQsImFkZCI9PXQ/ZnVuY3Rpb24odCl7cmV0dXJuIGUuY2FsbCh0aGlzLDA9PT10PzA6dCksdGhpc306ImRlbGV0ZSI9PXQ/ZnVuY3Rpb24odCl7cmV0dXJuIShpJiYhRW8odCkpJiZlLmNhbGwodGhpcywwPT09dD8wOnQpfToiZ2V0Ij09dD9mdW5jdGlvbih0KXtyZXR1cm4gaSYmIUVvKHQpP3ZvaWQgMDplLmNhbGwodGhpcywwPT09dD8wOnQpfToiaGFzIj09dD9mdW5jdGlvbih0KXtyZXR1cm4hKGkmJiFFbyh0KSkmJmUuY2FsbCh0aGlzLDA9PT10PzA6dCl9OmZ1bmN0aW9uKHQscil7cmV0dXJuIGUuY2FsbCh0aGlzLDA9PT10PzA6dCxyKSx0aGlzfSl9O2lmKERhKHQsImZ1bmN0aW9uIiE9dHlwZW9mIGF8fCEoaXx8cy5mb3JFYWNoJiYhY28oKGZ1bmN0aW9uKCl7KG5ldyBhKS5lbnRyaWVzKCkubmV4dCgpfSkpKSkpdT1yLmdldENvbnN0cnVjdG9yKGUsdCxuLG8pLHFsLlJFUVVJUkVEPSEwO2Vsc2UgaWYoRGEodCwhMCkpe3ZhciBsPW5ldyB1LGg9bFtvXShpP3t9Oi0wLDEpIT1sLGQ9Y28oKGZ1bmN0aW9uKCl7bC5oYXMoMSl9KSkscD14ZigoZnVuY3Rpb24odCl7bmV3IGEodCl9KSksZz0haSYmY28oKGZ1bmN0aW9uKCl7Zm9yKHZhciB0PW5ldyBhLGU9NTtlLS07KXRbb10oZSxlKTtyZXR1cm4hdC5oYXMoLTApfSkpO3B8fCgodT1lKChmdW5jdGlvbihlLHIpe2hmKGUsdSx0KTt2YXIgaT1PdShuZXcgYSxlLHUpO3JldHVybiBudWxsIT1yJiZiZihyLGlbb10se3RoYXQ6aSxBU19FTlRSSUVTOm59KSxpfSkpKS5wcm90b3R5cGU9cyxzLmNvbnN0cnVjdG9yPXUpLChkfHxnKSYmKGMoImRlbGV0ZSIpLGMoImhhcyIpLG4mJmMoImdldCIpKSwoZ3x8aCkmJmMobyksaSYmcy5jbGVhciYmZGVsZXRlIHMuY2xlYXJ9cmV0dXJuIGZbdF09dSxxYSh7Z2xvYmFsOiEwLGZvcmNlZDp1IT1hfSxmKSxKcyh1LHQpLGl8fHIuc2V0U3Ryb25nKHUsdCxuKSx1fSxXbD1xbC5nZXRXZWFrRGF0YSxZbD1jYS5zZXQsR2w9Y2EuZ2V0dGVyRm9yLCRsPWdzLmZpbmQsSGw9Z3MuZmluZEluZGV4LFZsPTAsSmw9ZnVuY3Rpb24odCl7cmV0dXJuIHQuZnJvemVufHwodC5mcm96ZW49bmV3IEtsKX0sS2w9ZnVuY3Rpb24oKXt0aGlzLmVudHJpZXM9W119LFhsPWZ1bmN0aW9uKHQsZSl7cmV0dXJuICRsKHQuZW50cmllcywoZnVuY3Rpb24odCl7cmV0dXJuIHRbMF09PT1lfSkpfTtLbC5wcm90b3R5cGU9e2dldDpmdW5jdGlvbih0KXt2YXIgZT1YbCh0aGlzLHQpO2lmKGUpcmV0dXJuIGVbMV19LGhhczpmdW5jdGlvbih0KXtyZXR1cm4hIVhsKHRoaXMsdCl9LHNldDpmdW5jdGlvbih0LGUpe3ZhciByPVhsKHRoaXMsdCk7cj9yWzFdPWU6dGhpcy5lbnRyaWVzLnB1c2goW3QsZV0pfSxkZWxldGU6ZnVuY3Rpb24odCl7dmFyIGU9SGwodGhpcy5lbnRyaWVzLChmdW5jdGlvbihlKXtyZXR1cm4gZVswXT09PXR9KSk7cmV0dXJufmUmJnRoaXMuZW50cmllcy5zcGxpY2UoZSwxKSwhIX5lfX07dmFyIFFsPXtnZXRDb25zdHJ1Y3RvcjpmdW5jdGlvbih0LGUscixuKXt2YXIgaT10KChmdW5jdGlvbih0LG8pe2hmKHQsaSxlKSxZbCh0LHt0eXBlOmUsaWQ6VmwrKyxmcm96ZW46dm9pZCAwfSksbnVsbCE9byYmYmYobyx0W25dLHt0aGF0OnQsQVNfRU5UUklFUzpyfSl9KSksbz1HbChlKSxhPWZ1bmN0aW9uKHQsZSxyKXt2YXIgbj1vKHQpLGk9V2woUG8oZSksITApO3JldHVybiEwPT09aT9KbChuKS5zZXQoZSxyKTppW24uaWRdPXIsdH07cmV0dXJuIGNmKGkucHJvdG90eXBlLHtkZWxldGU6ZnVuY3Rpb24odCl7dmFyIGU9byh0aGlzKTtpZighRW8odCkpcmV0dXJuITE7dmFyIHI9V2wodCk7cmV0dXJuITA9PT1yP0psKGUpLmRlbGV0ZSh0KTpyJiZPbyhyLGUuaWQpJiZkZWxldGUgcltlLmlkXX0saGFzOmZ1bmN0aW9uKHQpe3ZhciBlPW8odGhpcyk7aWYoIUVvKHQpKXJldHVybiExO3ZhciByPVdsKHQpO3JldHVybiEwPT09cj9KbChlKS5oYXModCk6ciYmT28ocixlLmlkKX19KSxjZihpLnByb3RvdHlwZSxyP3tnZXQ6ZnVuY3Rpb24odCl7dmFyIGU9byh0aGlzKTtpZihFbyh0KSl7dmFyIHI9V2wodCk7cmV0dXJuITA9PT1yP0psKGUpLmdldCh0KTpyP3JbZS5pZF06dm9pZCAwfX0sc2V0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGEodGhpcyx0LGUpfX06e2FkZDpmdW5jdGlvbih0KXtyZXR1cm4gYSh0aGlzLHQsITApfX0pLGl9fTthKChmdW5jdGlvbih0KXt2YXIgZSxyPWNhLmVuZm9yY2Usbj0hZm8uQWN0aXZlWE9iamVjdCYmIkFjdGl2ZVhPYmplY3QiaW4gZm8saT1PYmplY3QuaXNFeHRlbnNpYmxlLG89ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHQodGhpcyxhcmd1bWVudHMubGVuZ3RoP2FyZ3VtZW50c1swXTp2b2lkIDApfX0sYT10LmV4cG9ydHM9emwoIldlYWtNYXAiLG8sUWwpO2lmKEhvJiZuKXtlPVFsLmdldENvbnN0cnVjdG9yKG8sIldlYWtNYXAiLCEwKSxxbC5SRVFVSVJFRD0hMDt2YXIgcz1hLnByb3RvdHlwZSx1PXMuZGVsZXRlLGY9cy5oYXMsYz1zLmdldCxsPXMuc2V0O2NmKHMse2RlbGV0ZTpmdW5jdGlvbih0KXtpZihFbyh0KSYmIWkodCkpe3ZhciBuPXIodGhpcyk7cmV0dXJuIG4uZnJvemVufHwobi5mcm96ZW49bmV3IGUpLHUuY2FsbCh0aGlzLHQpfHxuLmZyb3plbi5kZWxldGUodCl9cmV0dXJuIHUuY2FsbCh0aGlzLHQpfSxoYXM6ZnVuY3Rpb24odCl7aWYoRW8odCkmJiFpKHQpKXt2YXIgbj1yKHRoaXMpO3JldHVybiBuLmZyb3plbnx8KG4uZnJvemVuPW5ldyBlKSxmLmNhbGwodGhpcyx0KXx8bi5mcm96ZW4uaGFzKHQpfXJldHVybiBmLmNhbGwodGhpcyx0KX0sZ2V0OmZ1bmN0aW9uKHQpe2lmKEVvKHQpJiYhaSh0KSl7dmFyIG49cih0aGlzKTtyZXR1cm4gbi5mcm96ZW58fChuLmZyb3plbj1uZXcgZSksZi5jYWxsKHRoaXMsdCk/Yy5jYWxsKHRoaXMsdCk6bi5mcm96ZW4uZ2V0KHQpfXJldHVybiBjLmNhbGwodGhpcyx0KX0sc2V0OmZ1bmN0aW9uKHQsbil7aWYoRW8odCkmJiFpKHQpKXt2YXIgbz1yKHRoaXMpO28uZnJvemVufHwoby5mcm96ZW49bmV3IGUpLGYuY2FsbCh0aGlzLHQpP2wuY2FsbCh0aGlzLHQsbik6by5mcm96ZW4uc2V0KHQsbil9ZWxzZSBsLmNhbGwodGhpcyx0LG4pO3JldHVybiB0aGlzfX0pfX0pKSx6bCgiV2Vha1NldCIsKGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0KHRoaXMsYXJndW1lbnRzLmxlbmd0aD9hcmd1bWVudHNbMF06dm9pZCAwKX19KSxRbCk7dmFyIFpsPXtDU1NSdWxlTGlzdDowLENTU1N0eWxlRGVjbGFyYXRpb246MCxDU1NWYWx1ZUxpc3Q6MCxDbGllbnRSZWN0TGlzdDowLERPTVJlY3RMaXN0OjAsRE9NU3RyaW5nTGlzdDowLERPTVRva2VuTGlzdDoxLERhdGFUcmFuc2Zlckl0ZW1MaXN0OjAsRmlsZUxpc3Q6MCxIVE1MQWxsQ29sbGVjdGlvbjowLEhUTUxDb2xsZWN0aW9uOjAsSFRNTEZvcm1FbGVtZW50OjAsSFRNTFNlbGVjdEVsZW1lbnQ6MCxNZWRpYUxpc3Q6MCxNaW1lVHlwZUFycmF5OjAsTmFtZWROb2RlTWFwOjAsTm9kZUxpc3Q6MSxQYWludFJlcXVlc3RMaXN0OjAsUGx1Z2luOjAsUGx1Z2luQXJyYXk6MCxTVkdMZW5ndGhMaXN0OjAsU1ZHTnVtYmVyTGlzdDowLFNWR1BhdGhTZWdMaXN0OjAsU1ZHUG9pbnRMaXN0OjAsU1ZHU3RyaW5nTGlzdDowLFNWR1RyYW5zZm9ybUxpc3Q6MCxTb3VyY2VCdWZmZXJMaXN0OjAsU3R5bGVTaGVldExpc3Q6MCxUZXh0VHJhY2tDdWVMaXN0OjAsVGV4dFRyYWNrTGlzdDowLFRvdWNoTGlzdDowfSx0aD10cygiaXRlcmF0b3IiKSxlaD10cygidG9TdHJpbmdUYWciKSxyaD1jdS52YWx1ZXM7Zm9yKHZhciBuaCBpbiBabCl7dmFyIGloPWZvW25oXSxvaD1paCYmaWgucHJvdG90eXBlO2lmKG9oKXtpZihvaFt0aF0hPT1yaCl0cnl7Qm8ob2gsdGgscmgpfWNhdGNoKGUpe29oW3RoXT1yaH1pZihvaFtlaF18fEJvKG9oLGVoLG5oKSxabFtuaF0pZm9yKHZhciBhaCBpbiBjdSlpZihvaFthaF0hPT1jdVthaF0pdHJ5e0JvKG9oLGFoLGN1W2FoXSl9Y2F0Y2goZSl7b2hbYWhdPWN1W2FoXX19fXZhciBzaD0hZm8uc2V0SW1tZWRpYXRlfHwhZm8uY2xlYXJJbW1lZGlhdGU7cWEoe2dsb2JhbDohMCxiaW5kOiEwLGVudW1lcmFibGU6ITAsZm9yY2VkOnNofSx7c2V0SW1tZWRpYXRlOlhmLnNldCxjbGVhckltbWVkaWF0ZTpYZi5jbGVhcn0pLHFhKHt0YXJnZXQ6IlVSTCIscHJvdG86ITAsZW51bWVyYWJsZTohMH0se3RvSlNPTjpmdW5jdGlvbigpe3JldHVybiBVUkwucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodGhpcyl9fSk7dmFyIHVoPW8oaGkpLGZoPWEoKGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxyLGksbyxhLHMsdSxmLGMsbCxoLGQscCxnLHYseSxiLG0sdyxTLF8sRSxrLFIseCxPLGosVCxBLEwsTSl7ZnVuY3Rpb24gQyh0KXtyZXR1cm4oQz0iZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiYic3ltYm9sIj09PW4oU3ltYm9sLml0ZXJhdG9yKT9mdW5jdGlvbih0KXtyZXR1cm4gbih0KX06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJiJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wmJnQuY29uc3RydWN0b3I9PT1TeW1ib2wmJnQhPT1TeW1ib2wucHJvdG90eXBlPyJzeW1ib2wiOm4odCl9KSh0KX1mdW5jdGlvbiBQKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIil9ZnVuY3Rpb24gSSh0LGUpe2Zvcih2YXIgcj0wO3I8ZS5sZW5ndGg7cisrKXt2YXIgbj1lW3JdO24uZW51bWVyYWJsZT1uLmVudW1lcmFibGV8fCExLG4uY29uZmlndXJhYmxlPSEwLCJ2YWx1ZSJpbiBuJiYobi53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsbi5rZXksbil9fWZ1bmN0aW9uIE4odCxlLHIpe3JldHVybiBlJiZJKHQucHJvdG90eXBlLGUpLHImJkkodCxyKSx0fWZ1bmN0aW9uIEIodCxlKXtpZigiZnVuY3Rpb24iIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcigiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24iKTt0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUmJmUucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6dCx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksZSYmRCh0LGUpfWZ1bmN0aW9uIFUodCl7cmV0dXJuKFU9T2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5nZXRQcm90b3R5cGVPZjpmdW5jdGlvbih0KXtyZXR1cm4gdC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KX0pKHQpfWZ1bmN0aW9uIEQodCxlKXtyZXR1cm4oRD1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuX19wcm90b19fPWUsdH0pKHQsZSl9ZnVuY3Rpb24gRih0KXtpZih2b2lkIDA9PT10KXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7cmV0dXJuIHR9ZnVuY3Rpb24gcSh0LGUpe3JldHVybiFlfHwib2JqZWN0IiE9PW4oZSkmJiJmdW5jdGlvbiIhPXR5cGVvZiBlP0YodCk6ZX1mdW5jdGlvbiB6KHQsZSl7cmV0dXJuIFcodCl8fFkodCxlKXx8RygpfWZ1bmN0aW9uIFcodCl7aWYoQXJyYXkuaXNBcnJheSh0KSlyZXR1cm4gdH1mdW5jdGlvbiBZKHQsZSl7aWYoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdCh0KXx8IltvYmplY3QgQXJndW1lbnRzXSI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpe3ZhciByPVtdLG49ITAsaT0hMSxvPXZvaWQgMDt0cnl7Zm9yKHZhciBhLHM9dFtTeW1ib2wuaXRlcmF0b3JdKCk7IShuPShhPXMubmV4dCgpKS5kb25lKSYmKHIucHVzaChhLnZhbHVlKSwhZXx8ci5sZW5ndGghPT1lKTtuPSEwKTt9Y2F0Y2godCl7aT0hMCxvPXR9ZmluYWxseXt0cnl7bnx8bnVsbD09cy5yZXR1cm58fHMucmV0dXJuKCl9ZmluYWxseXtpZihpKXRocm93IG99fXJldHVybiByfX1mdW5jdGlvbiBHKCl7dGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZSIpfXZhciAkLEg9L1tcXCJcdTAwMDAtXHUwMDFmXHUwMDdmLVx1MDA5Zlx1MDBhZFx1MDYwMC1cdTA2MDRcdTA3MGZcdTE3YjRcdTE3YjVcdTIwMGMtXHUyMDBmXHUyMDI4LVx1MjAyZlx1MjA2MC1cdTIwNmZcdWZlZmZcdWZmZjAtXHVmZmZmXS9nLFY9eyJcYiI6IlxcYiIsIlx0IjoiXFx0IiwiXG4iOiJcXG4iLCJcZiI6IlxcZiIsIlxyIjoiXFxyIiwnIic6J1xcIicsIlxcIjoiXFxcXCJ9O2Z1bmN0aW9uIEoodCl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIHQucmVhZCYmImZ1bmN0aW9uIj09dHlwZW9mIHQucGF1c2UmJiJmdW5jdGlvbiI9PXR5cGVvZiB0LnJlc3VtZSYmImZ1bmN0aW9uIj09dHlwZW9mIHQucGlwZSYmImZ1bmN0aW9uIj09dHlwZW9mIHQub25jZSYmImZ1bmN0aW9uIj09dHlwZW9mIHQucmVtb3ZlTGlzdGVuZXJ9ZnVuY3Rpb24gSyh0KXtyZXR1cm4gdD8iZnVuY3Rpb24iPT10eXBlb2YgdC50aGVuPyQuUHJvbWlzZTpKKHQpP3QuX3JlYWRhYmxlU3RhdGUub2JqZWN0TW9kZT8kLlJlYWRhYmxlT2JqZWN0OiQuUmVhZGFibGVTdHJpbmc6QXJyYXkuaXNBcnJheSh0KT8kLkFycmF5OiJvYmplY3QiPT09Qyh0KXx8dCBpbnN0YW5jZW9mIE9iamVjdD8kLk9iamVjdDokLlByaW1pdGl2ZTokLlByaW1pdGl2ZX0hZnVuY3Rpb24odCl7dFt0LkFycmF5PTBdPSJBcnJheSIsdFt0Lk9iamVjdD0xXT0iT2JqZWN0Iix0W3QuUmVhZGFibGVTdHJpbmc9Ml09IlJlYWRhYmxlU3RyaW5nIix0W3QuUmVhZGFibGVPYmplY3Q9M109IlJlYWRhYmxlT2JqZWN0Iix0W3QuUHJpbWl0aXZlPTRdPSJQcmltaXRpdmUiLHRbdC5Qcm9taXNlPTVdPSJQcm9taXNlIn0oJHx8KCQ9e30pKTt2YXIgWD1bXTtYWyQuQXJyYXldPSJbIixYWyQuT2JqZWN0XT0ieyIsWFskLlJlYWRhYmxlU3RyaW5nXT0nIicsWFskLlJlYWRhYmxlT2JqZWN0XT0iWyI7dmFyIFE9W107UVskLkFycmF5XT0iXSIsUVskLk9iamVjdF09In0iLFFbJC5SZWFkYWJsZVN0cmluZ109JyInLFFbJC5SZWFkYWJsZU9iamVjdF09Il0iO2Zvcih2YXIgWj1bXSx0dD0wLGV0PU9iamVjdC5lbnRyaWVzKCQpO3R0PGV0Lmxlbmd0aDt0dCsrKXt2YXIgcnQ9eihldFt0dF0sMiksbnQ9cnRbMF0saXQ9cnRbMV07Im51bWJlciI9PXR5cGVvZiBpdCYmKFpbaXRdPSJwcm9jZXNzIi5jb25jYXQobnQpKX1mdW5jdGlvbiBvdCh0KXtyZXR1cm4gdC5yZXBsYWNlKEgsKGZ1bmN0aW9uKHQpe3ZhciBlPVZbdF07cmV0dXJuInN0cmluZyI9PXR5cGVvZiBlP2U6IlxcdSIuY29uY2F0KHQuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikucGFkU3RhcnQoNCwiMCIpKX0pKX1mdW5jdGlvbiBhdCh0KXtyZXR1cm4nIicuY29uY2F0KG90KHQpLCciJyl9ZnVuY3Rpb24gc3QodCxlKXt2YXIgcj10LnJlYWQoZSk7cmV0dXJuIG51bGw9PT1yP25ldyBQcm9taXNlKChmdW5jdGlvbihlLHIpe3ZhciBuPWZ1bmN0aW9uKCl7cmV0dXJuIGUobnVsbCl9O3Qub25jZSgiZW5kIixuKSx0Lm9uY2UoImVycm9yIixyKSx0Lm9uY2UoInJlYWRhYmxlIiwoZnVuY3Rpb24oKXt0LnJlbW92ZUxpc3RlbmVyKCJlbmQiLG4pLHQucmVtb3ZlTGlzdGVuZXIoImVycm9yIixyKSxlKHQucmVhZCgpKX0pKX0pKTpQcm9taXNlLnJlc29sdmUocil9ZnVuY3Rpb24gdXQodCl7cmV0dXJuIHQudGhlbigoZnVuY3Rpb24odCl7cmV0dXJuIEsodCk9PT0kLlByb21pc2U/dXQodCk6dH0pKX1yZXR1cm4gZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0LHIsbil7dmFyIGksbz1hcmd1bWVudHMubGVuZ3RoPjMmJnZvaWQgMCE9PWFyZ3VtZW50c1szXSYmYXJndW1lbnRzWzNdO1AodGhpcyxlKSwoaT1xKHRoaXMsVShlKS5jYWxsKHRoaXMpKSkuY3ljbGU9byxpLnN0YWNrPVtdLGkuZGVwdGg9MCxpLnB1c2hDYWxsZWQ9ITEsaS5lbmQ9ITEsaS5pc1JlYWRpbmc9ITEsaS5yZWFkTW9yZT0hMTt2YXIgYT1DKG4pO3JldHVybiJzdHJpbmciIT09YSYmIm51bWJlciIhPT1hfHwoaS5nYXA9TnVtYmVyLmlzRmluaXRlKG4pPyIgIi5yZXBlYXQobik6biksT2JqZWN0LmFzc2lnbihGKGkpLHt2aXNpdGVkOm8/bmV3IFdlYWtNYXA6bmV3IFdlYWtTZXQscmVwbGFjZXJGdW5jdGlvbjpyIGluc3RhbmNlb2YgRnVuY3Rpb24mJnIscmVwbGFjZXJBcnJheTpBcnJheS5pc0FycmF5KHIpJiZyfSksciBpbnN0YW5jZW9mIEZ1bmN0aW9uJiYoaS5yZXBsYWNlckZ1bmN0aW9uPXIpLEFycmF5LmlzQXJyYXkocikmJihpLnJlcGxhY2VyQXJyYXk9ciksaS5hZGRUb1N0YWNrKHQpLGl9cmV0dXJuIEIoZSx0KSxOKGUsW3trZXk6ImN5Y2xlciIsdmFsdWU6ZnVuY3Rpb24odCxlKXt2YXIgcj10aGlzLnZpc2l0ZWQuZ2V0KGUpO2lmKHIpcmV0dXJueyRyZWY6cn07dmFyIG49dGhpcy5wYXRoKCk7cmV0dXJuIHZvaWQgMCE9PXQmJm4ucHVzaCh0KSxuPW4ubWFwKChmdW5jdGlvbih0KXtyZXR1cm4iWyIuY29uY2F0KE51bWJlci5pc0ludGVnZXIodCk/dDphdCh0KSwiXSIpfSkpLHRoaXMudmlzaXRlZC5zZXQoZSxuLmxlbmd0aD8iJCIuY29uY2F0KG4uam9pbigiIikpOiIkIiksZX19LHtrZXk6ImFkZFRvU3RhY2siLHZhbHVlOmZ1bmN0aW9uKHQsZSxyLG4pe3ZhciBpLG8sYT10aGlzLHM9dDt0aGlzLnJlcGxhY2VyRnVuY3Rpb24mJihzPXRoaXMucmVwbGFjZXJGdW5jdGlvbihlfHxyLHMsdGhpcykpLHMmJnMudG9KU09OIGluc3RhbmNlb2YgRnVuY3Rpb24mJihzPXMudG9KU09OKCkpLChzIGluc3RhbmNlb2YgRnVuY3Rpb258fCJzeW1ib2wiPT09Qyh0KSkmJihzPXZvaWQgMCksdm9pZCAwIT09ZSYmdGhpcy5yZXBsYWNlckFycmF5JiYodGhpcy5yZXBsYWNlckFycmF5LmluY2x1ZGVzKGUpfHwocz12b2lkIDApKTt2YXIgdT1LKHMpO2lmKChuJiZuLnR5cGU9PT0kLkFycmF5fHx2b2lkIDAhPT1zKSYmdSE9PSQuUHJvbWlzZSYmKG4mJiFuLmZpcnN0JiZ0aGlzLl9wdXNoKCIsIiksbiYmKG4uZmlyc3Q9ITEpKSx2b2lkIDAhPT1zJiZ1IT09JC5Qcm9taXNlJiZlJiYodGhpcy5nYXA/dGhpcy5fcHVzaCgiXG4iLmNvbmNhdCh0aGlzLmdhcC5yZXBlYXQodGhpcy5kZXB0aCksJyInKS5jb25jYXQob3QoZSksJyI6ICcpKTp0aGlzLl9wdXNoKCciJy5jb25jYXQob3QoZSksJyI6JykpKSx1IT09JC5QcmltaXRpdmUpaWYodGhpcy5jeWNsZSl1PUsocz10aGlzLmN5Y2xlcihlfHxyLHMpKTtlbHNle2lmKHRoaXMudmlzaXRlZC5oYXMocykpdGhyb3cgT2JqZWN0LmFzc2lnbihuZXcgRXJyb3IoIkNvbnZlcnRpbmcgY2lyY3VsYXIgc3RydWN0dXJlIHRvIEpTT04iKSx7cmVhbFZhbHVlOnMsa2V5OmV8fHJ9KTt0aGlzLnZpc2l0ZWQuYWRkKHMpfSFlJiZyPi0xJiZ0aGlzLmRlcHRoJiZ0aGlzLmdhcCYmdGhpcy5fcHVzaCgiXG4iLmNvbmNhdCh0aGlzLmdhcC5yZXBlYXQodGhpcy5kZXB0aCkpKTt2YXIgZj1YW3VdO2YmJnRoaXMuX3B1c2goZik7dmFyIGM9e2tleTplLGluZGV4OnIsdHlwZTp1LHBhcmVudDpuLHZhbHVlOnMsZmlyc3Q6ITB9O3JldHVybiB1PT09JC5PYmplY3Q/KHRoaXMuZGVwdGgrPTEsYy51bnJlYWQ9T2JqZWN0LmtleXMocyksYy5pc0VtcHR5PSFjLnVucmVhZC5sZW5ndGgpOnU9PT0kLkFycmF5Pyh0aGlzLmRlcHRoKz0xLGMudW5yZWFkPXMubGVuZ3RoLGMuYXJyYXlMZW5ndGg9Yy51bnJlYWQsYy5pc0VtcHR5PSFjLnVucmVhZCk6dSE9PSQuUmVhZGFibGVTdHJpbmcmJnUhPT0kLlJlYWRhYmxlT2JqZWN0fHwodGhpcy5kZXB0aCs9MSxzLnJlYWRhYmxlRW5kZWR8fChudWxsPT09KGk9cy5fcmVhZGFibGVTdGF0ZSl8fHZvaWQgMD09PWk/dm9pZCAwOmkuZW5kRW1pdHRlZCk/dGhpcy5lbWl0KCJlcnJvciIsbmV3IEVycm9yKCJSZWFkYWJsZSBTdHJlYW0gaGFzIGVuZGVkIGJlZm9yZSBpdCB3YXMgc2VyaWFsaXplZC4gQWxsIHN0cmVhbSBkYXRhIGhhdmUgYmVlbiBsb3N0IikscyxlfHxyKToocy5yZWFkYWJsZUZsb3dpbmd8fChudWxsPT09KG89cy5fcmVhZGFibGVTdGF0ZSl8fHZvaWQgMD09PW8/dm9pZCAwOm8uZmxvd2luZykpJiYocy5wYXVzZSgpLHRoaXMuZW1pdCgiZXJyb3IiLG5ldyBFcnJvcigiUmVhZGFibGUgU3RyZWFtIGlzIGluIGZsb3dpbmcgbW9kZSwgZGF0YSBtYXkgaGF2ZSBiZWVuIGxvc3QuIFRyeWluZyB0byBwYXVzZSBzdHJlYW0uIikscyxlfHxyKSksYy5yZWFkQ291bnQ9MCxzLm9uY2UoImVuZCIsKGZ1bmN0aW9uKCl7Yy5lbmQ9ITAsYS5fX3JlYWQoKX0pKSxzLm9uY2UoImVycm9yIiwoZnVuY3Rpb24odCl7YS5lcnJvcj0hMCxhLmVtaXQoImVycm9yIix0KX0pKSksdGhpcy5zdGFjay51bnNoaWZ0KGMpLGN9fSx7a2V5OiJyZW1vdmVGcm9tU3RhY2siLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXQudHlwZSxyPWU9PT0kLk9iamVjdHx8ZT09PSQuQXJyYXl8fGU9PT0kLlJlYWRhYmxlU3RyaW5nfHxlPT09JC5SZWFkYWJsZU9iamVjdDtlIT09JC5QcmltaXRpdmUmJih0aGlzLmN5Y2xlfHx0aGlzLnZpc2l0ZWQuZGVsZXRlKHQudmFsdWUpLHImJih0aGlzLmRlcHRoLT0xKSk7dmFyIG49UVtlXTtyJiYhdC5pc0VtcHR5JiZ0aGlzLmdhcCYmdGhpcy5fcHVzaCgiXG4iLmNvbmNhdCh0aGlzLmdhcC5yZXBlYXQodGhpcy5kZXB0aCkpKSxuJiZ0aGlzLl9wdXNoKG4pO3ZhciBpPXRoaXMuc3RhY2suaW5kZXhPZih0KTt0aGlzLnN0YWNrLnNwbGljZShpLDEpfX0se2tleToiX3B1c2giLHZhbHVlOmZ1bmN0aW9uKHQpe3RoaXMucHVzaENhbGxlZD0hMCx0aGlzLnB1c2godCl9fSx7a2V5OiJwcm9jZXNzUmVhZGFibGVPYmplY3QiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dmFyIHI9dGhpcztpZighdC5lbmQpcmV0dXJuIHN0KHQudmFsdWUsZSkudGhlbigoZnVuY3Rpb24oZSl7bnVsbCE9PWUmJih0LmZpcnN0fHxyLl9wdXNoKCIsIiksdC5maXJzdD0hMSxyLmFkZFRvU3RhY2soZSx2b2lkIDAsdC5yZWFkQ291bnQpLHQucmVhZENvdW50Kz0xKX0pKTt0aGlzLnJlbW92ZUZyb21TdGFjayh0KX19LHtrZXk6InByb2Nlc3NPYmplY3QiLHZhbHVlOmZ1bmN0aW9uKHQpe2lmKHQudW5yZWFkLmxlbmd0aCl7dmFyIGU9dC51bnJlYWQuc2hpZnQoKSxyPXQudmFsdWVbZV07dGhpcy5hZGRUb1N0YWNrKHIsZSx2b2lkIDAsdCl9ZWxzZSB0aGlzLnJlbW92ZUZyb21TdGFjayh0KX19LHtrZXk6InByb2Nlc3NBcnJheSIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dC51bnJlYWQ7aWYoZSl7dmFyIHI9dC5hcnJheUxlbmd0aC1lLG49dC52YWx1ZVtyXTt0LnVucmVhZC09MSx0aGlzLmFkZFRvU3RhY2sobix2b2lkIDAscix0KX1lbHNlIHRoaXMucmVtb3ZlRnJvbVN0YWNrKHQpfX0se2tleToicHJvY2Vzc1ByaW1pdGl2ZSIsdmFsdWU6ZnVuY3Rpb24odCl7aWYodm9pZCAwIT09dC52YWx1ZSl7dmFyIGUscj1DKHQudmFsdWUpO3N3aXRjaChyKXtjYXNlInN0cmluZyI6ZT1hdCh0LnZhbHVlKTticmVhaztjYXNlIm51bWJlciI6ZT1OdW1iZXIuaXNGaW5pdGUodC52YWx1ZSk/U3RyaW5nKHQudmFsdWUpOiJudWxsIjticmVhaztjYXNlImJvb2xlYW4iOmU9U3RyaW5nKHQudmFsdWUpO2JyZWFrO2Nhc2Uib2JqZWN0IjppZighdC52YWx1ZSl7ZT0ibnVsbCI7YnJlYWt9ZGVmYXVsdDp0aHJvdyBPYmplY3QuYXNzaWduKG5ldyBFcnJvcignVW5rbm93biB0eXBlICInLmNvbmNhdChyLCciLiBQbGVhc2UgZmlsZSBhbiBpc3N1ZSEnKSkse3ZhbHVlOnQudmFsdWV9KX10aGlzLl9wdXNoKGUpfWVsc2UhdGhpcy5zdGFja1sxXXx8dGhpcy5zdGFja1sxXS50eXBlIT09JC5BcnJheSYmdGhpcy5zdGFja1sxXS50eXBlIT09JC5SZWFkYWJsZU9iamVjdD90LmFkZFNlcGFyYXRvckFmdGVyRW5kPSExOnRoaXMuX3B1c2goIm51bGwiKTt0aGlzLnJlbW92ZUZyb21TdGFjayh0KX19LHtrZXk6InByb2Nlc3NSZWFkYWJsZVN0cmluZyIsdmFsdWU6ZnVuY3Rpb24odCxlKXt2YXIgcj10aGlzO2lmKCF0LmVuZClyZXR1cm4gc3QodC52YWx1ZSxlKS50aGVuKChmdW5jdGlvbih0KXt0JiZyLl9wdXNoKG90KHQudG9TdHJpbmcoKSkpfSkpO3RoaXMucmVtb3ZlRnJvbVN0YWNrKHQpfX0se2tleToicHJvY2Vzc1Byb21pc2UiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIHV0KHQudmFsdWUpLnRoZW4oKGZ1bmN0aW9uKHIpe2UucmVtb3ZlRnJvbVN0YWNrKHQpLGUuYWRkVG9TdGFjayhyLHQua2V5LHQuaW5kZXgsdC5wYXJlbnQpfSkpfX0se2tleToicHJvY2Vzc1N0YWNrVG9wSXRlbSIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGUscj10aGlzLG49dGhpcy5zdGFja1swXTtpZighbnx8dGhpcy5lcnJvcilyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7dHJ5e2U9dGhpc1taW24udHlwZV1dKG4sdCl9Y2F0Y2godCl7cmV0dXJuIFByb21pc2UucmVqZWN0KHQpfXJldHVybiBQcm9taXNlLnJlc29sdmUoZSkudGhlbigoZnVuY3Rpb24oKXswPT09ci5zdGFjay5sZW5ndGgmJihyLmVuZD0hMCxyLl9wdXNoKG51bGwpKX0pKX19LHtrZXk6Il9fcmVhZCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztpZighdGhpcy5pc1JlYWRpbmcmJiF0aGlzLmVycm9yKXJldHVybiB0aGlzLmlzUmVhZGluZz0hMCx0aGlzLnJlYWRNb3JlPSExLHRoaXMucHJvY2Vzc1N0YWNrVG9wSXRlbSh0KS50aGVuKChmdW5jdGlvbigpe2UuZW5kfHxlLmVycm9yfHwhZS5yZWFkTW9yZSYmZS5wdXNoQ2FsbGVkP2UuaXNSZWFkaW5nPSExOnNldEltbWVkaWF0ZSgoZnVuY3Rpb24oKXtlLmlzUmVhZGluZz0hMSxlLl9fcmVhZCgpfSkpfSkpLmNhdGNoKChmdW5jdGlvbih0KXtlLmVycm9yPSEwLGUuZW1pdCgiZXJyb3IiLHQpfSkpO3RoaXMucmVhZE1vcmU9ITB9fSx7a2V5OiJfcmVhZCIsdmFsdWU6ZnVuY3Rpb24odCl7dGhpcy5wdXNoQ2FsbGVkPSExLHRoaXMuX19yZWFkKHQpfX0se2tleToicGF0aCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zdGFjay5tYXAoKGZ1bmN0aW9uKHQpe3ZhciBlPXQua2V5LHI9dC5pbmRleDtyZXR1cm4gZXx8cn0pKS5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiB0fHx0Pi0xfSkpLnJldmVyc2UoKX19XSksZX0oTS5SZWFkYWJsZSl9KDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsdWgpfSkpLGNoPUFycmF5LmlzQXJyYXksbGg9Im9iamVjdCI9PW4oaSkmJmkmJmkuT2JqZWN0PT09T2JqZWN0JiZpLGhoPSJvYmplY3QiPT0oInVuZGVmaW5lZCI9PXR5cGVvZiBzZWxmPyJ1bmRlZmluZWQiOm4oc2VsZikpJiZzZWxmJiZzZWxmLk9iamVjdD09PU9iamVjdCYmc2VsZixkaD1saHx8aGh8fEZ1bmN0aW9uKCJyZXR1cm4gdGhpcyIpKCkscGg9ZGguU3ltYm9sLGdoPU9iamVjdC5wcm90b3R5cGUsdmg9Z2guaGFzT3duUHJvcGVydHkseWg9Z2gudG9TdHJpbmcsYmg9cGg/cGgudG9TdHJpbmdUYWc6dm9pZCAwLG1oPWZ1bmN0aW9uKHQpe3ZhciBlPXZoLmNhbGwodCxiaCkscj10W2JoXTt0cnl7dFtiaF09dm9pZCAwO3ZhciBuPSEwfWNhdGNoKHQpe312YXIgaT15aC5jYWxsKHQpO3JldHVybiBuJiYoZT90W2JoXT1yOmRlbGV0ZSB0W2JoXSksaX0sd2g9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyxTaD1mdW5jdGlvbih0KXtyZXR1cm4gd2guY2FsbCh0KX0sX2g9cGg/cGgudG9TdHJpbmdUYWc6dm9pZCAwLEVoPWZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT10P3ZvaWQgMD09PXQ/IltvYmplY3QgVW5kZWZpbmVkXSI6IltvYmplY3QgTnVsbF0iOl9oJiZfaCBpbiBPYmplY3QodCk/bWgodCk6U2godCl9LGtoPWZ1bmN0aW9uKHQpe3JldHVybiBudWxsIT10JiYib2JqZWN0Ij09bih0KX0sUmg9ZnVuY3Rpb24odCl7cmV0dXJuInN5bWJvbCI9PW4odCl8fGtoKHQpJiYiW29iamVjdCBTeW1ib2xdIj09RWgodCl9LHhoPS9cLnxcWyg/OlteW1xdXSp8KFsiJ10pKD86KD8hXDEpW15cXF18XFwuKSo/XDEpXF0vLE9oPS9eXHcqJC8samg9ZnVuY3Rpb24odCxlKXtpZihjaCh0KSlyZXR1cm4hMTt2YXIgcj1uKHQpO3JldHVybiEoIm51bWJlciIhPXImJiJzeW1ib2wiIT1yJiYiYm9vbGVhbiIhPXImJm51bGwhPXQmJiFSaCh0KSl8fE9oLnRlc3QodCl8fCF4aC50ZXN0KHQpfHxudWxsIT1lJiZ0IGluIE9iamVjdChlKX0sVGg9ZnVuY3Rpb24odCl7dmFyIGU9bih0KTtyZXR1cm4gbnVsbCE9dCYmKCJvYmplY3QiPT1lfHwiZnVuY3Rpb24iPT1lKX0sQWg9ZnVuY3Rpb24odCl7aWYoIVRoKHQpKXJldHVybiExO3ZhciBlPUVoKHQpO3JldHVybiJbb2JqZWN0IEZ1bmN0aW9uXSI9PWV8fCJbb2JqZWN0IEdlbmVyYXRvckZ1bmN0aW9uXSI9PWV8fCJbb2JqZWN0IEFzeW5jRnVuY3Rpb25dIj09ZXx8IltvYmplY3QgUHJveHldIj09ZX0sTGg9ZGhbIl9fY29yZS1qc19zaGFyZWRfXyJdLE1oPWZ1bmN0aW9uKCl7dmFyIHQ9L1teLl0rJC8uZXhlYyhMaCYmTGgua2V5cyYmTGgua2V5cy5JRV9QUk9UT3x8IiIpO3JldHVybiB0PyJTeW1ib2woc3JjKV8xLiIrdDoiIn0oKSxDaD1mdW5jdGlvbih0KXtyZXR1cm4hIU1oJiZNaCBpbiB0fSxQaD1GdW5jdGlvbi5wcm90b3R5cGUudG9TdHJpbmcsSWg9ZnVuY3Rpb24odCl7aWYobnVsbCE9dCl7dHJ5e3JldHVybiBQaC5jYWxsKHQpfWNhdGNoKHQpe310cnl7cmV0dXJuIHQrIiJ9Y2F0Y2godCl7fX1yZXR1cm4iIn0sTmg9L15cW29iamVjdCAuKz9Db25zdHJ1Y3RvclxdJC8sQmg9RnVuY3Rpb24ucHJvdG90eXBlLFVoPU9iamVjdC5wcm90b3R5cGUsRGg9QmgudG9TdHJpbmcsRmg9VWguaGFzT3duUHJvcGVydHkscWg9UmVnRXhwKCJeIitEaC5jYWxsKEZoKS5yZXBsYWNlKC9bXFxeJC4qKz8oKVtcXXt9fF0vZywiXFwkJiIpLnJlcGxhY2UoL2hhc093blByb3BlcnR5fChmdW5jdGlvbikuKj8oPz1cXFwoKXwgZm9yIC4rPyg/PVxcXF0pL2csIiQxLio/IikrIiQiKSx6aD1mdW5jdGlvbih0KXtyZXR1cm4hKCFUaCh0KXx8Q2godCkpJiYoQWgodCk/cWg6TmgpLnRlc3QoSWgodCkpfSxXaD1mdW5jdGlvbih0LGUpe3JldHVybiBudWxsPT10P3ZvaWQgMDp0W2VdfSxZaD1mdW5jdGlvbih0LGUpe3ZhciByPVdoKHQsZSk7cmV0dXJuIHpoKHIpP3I6dm9pZCAwfSxHaD1ZaChPYmplY3QsImNyZWF0ZSIpLCRoPWZ1bmN0aW9uKCl7dGhpcy5fX2RhdGFfXz1HaD9HaChudWxsKTp7fSx0aGlzLnNpemU9MH0sSGg9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5oYXModCkmJmRlbGV0ZSB0aGlzLl9fZGF0YV9fW3RdO3JldHVybiB0aGlzLnNpemUtPWU/MTowLGV9LFZoPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksSmg9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fX2RhdGFfXztpZihHaCl7dmFyIHI9ZVt0XTtyZXR1cm4iX19sb2Rhc2hfaGFzaF91bmRlZmluZWRfXyI9PT1yP3ZvaWQgMDpyfXJldHVybiBWaC5jYWxsKGUsdCk/ZVt0XTp2b2lkIDB9LEtoPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksWGg9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fX2RhdGFfXztyZXR1cm4gR2g/dm9pZCAwIT09ZVt0XTpLaC5jYWxsKGUsdCl9LFFoPWZ1bmN0aW9uKHQsZSl7dmFyIHI9dGhpcy5fX2RhdGFfXztyZXR1cm4gdGhpcy5zaXplKz10aGlzLmhhcyh0KT8wOjEsclt0XT1HaCYmdm9pZCAwPT09ZT8iX19sb2Rhc2hfaGFzaF91bmRlZmluZWRfXyI6ZSx0aGlzfTtmdW5jdGlvbiBaaCh0KXt2YXIgZT0tMSxyPW51bGw9PXQ/MDp0Lmxlbmd0aDtmb3IodGhpcy5jbGVhcigpOysrZTxyOyl7dmFyIG49dFtlXTt0aGlzLnNldChuWzBdLG5bMV0pfX1aaC5wcm90b3R5cGUuY2xlYXI9JGgsWmgucHJvdG90eXBlLmRlbGV0ZT1IaCxaaC5wcm90b3R5cGUuZ2V0PUpoLFpoLnByb3RvdHlwZS5oYXM9WGgsWmgucHJvdG90eXBlLnNldD1RaDt2YXIgdGQ9WmgsZWQ9ZnVuY3Rpb24oKXt0aGlzLl9fZGF0YV9fPVtdLHRoaXMuc2l6ZT0wfSxyZD1mdW5jdGlvbih0LGUpe3JldHVybiB0PT09ZXx8dCE9dCYmZSE9ZX0sbmQ9ZnVuY3Rpb24odCxlKXtmb3IodmFyIHI9dC5sZW5ndGg7ci0tOylpZihyZCh0W3JdWzBdLGUpKXJldHVybiByO3JldHVybi0xfSxpZD1BcnJheS5wcm90b3R5cGUuc3BsaWNlLG9kPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX19kYXRhX18scj1uZChlLHQpO3JldHVybiEocjwwfHwocj09ZS5sZW5ndGgtMT9lLnBvcCgpOmlkLmNhbGwoZSxyLDEpLC0tdGhpcy5zaXplLDApKX0sYWQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fX2RhdGFfXyxyPW5kKGUsdCk7cmV0dXJuIHI8MD92b2lkIDA6ZVtyXVsxXX0sc2Q9ZnVuY3Rpb24odCl7cmV0dXJuIG5kKHRoaXMuX19kYXRhX18sdCk+LTF9LHVkPWZ1bmN0aW9uKHQsZSl7dmFyIHI9dGhpcy5fX2RhdGFfXyxuPW5kKHIsdCk7cmV0dXJuIG48MD8oKyt0aGlzLnNpemUsci5wdXNoKFt0LGVdKSk6cltuXVsxXT1lLHRoaXN9O2Z1bmN0aW9uIGZkKHQpe3ZhciBlPS0xLHI9bnVsbD09dD8wOnQubGVuZ3RoO2Zvcih0aGlzLmNsZWFyKCk7KytlPHI7KXt2YXIgbj10W2VdO3RoaXMuc2V0KG5bMF0sblsxXSl9fWZkLnByb3RvdHlwZS5jbGVhcj1lZCxmZC5wcm90b3R5cGUuZGVsZXRlPW9kLGZkLnByb3RvdHlwZS5nZXQ9YWQsZmQucHJvdG90eXBlLmhhcz1zZCxmZC5wcm90b3R5cGUuc2V0PXVkO3ZhciBjZD1mZCxsZD1ZaChkaCwiTWFwIiksaGQ9ZnVuY3Rpb24oKXt0aGlzLnNpemU9MCx0aGlzLl9fZGF0YV9fPXtoYXNoOm5ldyB0ZCxtYXA6bmV3KGxkfHxjZCksc3RyaW5nOm5ldyB0ZH19LGRkPWZ1bmN0aW9uKHQpe3ZhciBlPW4odCk7cmV0dXJuInN0cmluZyI9PWV8fCJudW1iZXIiPT1lfHwic3ltYm9sIj09ZXx8ImJvb2xlYW4iPT1lPyJfX3Byb3RvX18iIT09dDpudWxsPT09dH0scGQ9ZnVuY3Rpb24odCxlKXt2YXIgcj10Ll9fZGF0YV9fO3JldHVybiBkZChlKT9yWyJzdHJpbmciPT10eXBlb2YgZT8ic3RyaW5nIjoiaGFzaCJdOnIubWFwfSxnZD1mdW5jdGlvbih0KXt2YXIgZT1wZCh0aGlzLHQpLmRlbGV0ZSh0KTtyZXR1cm4gdGhpcy5zaXplLT1lPzE6MCxlfSx2ZD1mdW5jdGlvbih0KXtyZXR1cm4gcGQodGhpcyx0KS5nZXQodCl9LHlkPWZ1bmN0aW9uKHQpe3JldHVybiBwZCh0aGlzLHQpLmhhcyh0KX0sYmQ9ZnVuY3Rpb24odCxlKXt2YXIgcj1wZCh0aGlzLHQpLG49ci5zaXplO3JldHVybiByLnNldCh0LGUpLHRoaXMuc2l6ZSs9ci5zaXplPT1uPzA6MSx0aGlzfTtmdW5jdGlvbiBtZCh0KXt2YXIgZT0tMSxyPW51bGw9PXQ/MDp0Lmxlbmd0aDtmb3IodGhpcy5jbGVhcigpOysrZTxyOyl7dmFyIG49dFtlXTt0aGlzLnNldChuWzBdLG5bMV0pfX1tZC5wcm90b3R5cGUuY2xlYXI9aGQsbWQucHJvdG90eXBlLmRlbGV0ZT1nZCxtZC5wcm90b3R5cGUuZ2V0PXZkLG1kLnByb3RvdHlwZS5oYXM9eWQsbWQucHJvdG90eXBlLnNldD1iZDt2YXIgd2Q9bWQ7ZnVuY3Rpb24gU2QodCxlKXtpZigiZnVuY3Rpb24iIT10eXBlb2YgdHx8bnVsbCE9ZSYmImZ1bmN0aW9uIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcigiRXhwZWN0ZWQgYSBmdW5jdGlvbiIpO3ZhciByPWZ1bmN0aW9uIHIoKXt2YXIgbj1hcmd1bWVudHMsaT1lP2UuYXBwbHkodGhpcyxuKTpuWzBdLG89ci5jYWNoZTtpZihvLmhhcyhpKSlyZXR1cm4gby5nZXQoaSk7dmFyIGE9dC5hcHBseSh0aGlzLG4pO3JldHVybiByLmNhY2hlPW8uc2V0KGksYSl8fG8sYX07cmV0dXJuIHIuY2FjaGU9bmV3KFNkLkNhY2hlfHx3ZCkscn1TZC5DYWNoZT13ZDt2YXIgX2Q9U2QsRWQ9L1teLltcXV0rfFxbKD86KC0/XGQrKD86XC5cZCspPyl8KFsiJ10pKCg/Oig/IVwyKVteXFxdfFxcLikqPylcMilcXXwoPz0oPzpcLnxcW1xdKSg/OlwufFxbXF18JCkpL2csa2Q9L1xcKFxcKT8vZyxSZD1mdW5jdGlvbih0KXt2YXIgZT1fZCh0LChmdW5jdGlvbih0KXtyZXR1cm4gNTAwPT09ci5zaXplJiZyLmNsZWFyKCksdH0pKSxyPWUuY2FjaGU7cmV0dXJuIGV9KChmdW5jdGlvbih0KXt2YXIgZT1bXTtyZXR1cm4gNDY9PT10LmNoYXJDb2RlQXQoMCkmJmUucHVzaCgiIiksdC5yZXBsYWNlKEVkLChmdW5jdGlvbih0LHIsbixpKXtlLnB1c2gobj9pLnJlcGxhY2Uoa2QsIiQxIik6cnx8dCl9KSksZX0pKSx4ZD1mdW5jdGlvbih0LGUpe2Zvcih2YXIgcj0tMSxuPW51bGw9PXQ/MDp0Lmxlbmd0aCxpPUFycmF5KG4pOysrcjxuOylpW3JdPWUodFtyXSxyLHQpO3JldHVybiBpfSxPZD1waD9waC5wcm90b3R5cGU6dm9pZCAwLGpkPU9kP09kLnRvU3RyaW5nOnZvaWQgMCxUZD1mdW5jdGlvbiB0KGUpe2lmKCJzdHJpbmciPT10eXBlb2YgZSlyZXR1cm4gZTtpZihjaChlKSlyZXR1cm4geGQoZSx0KSsiIjtpZihSaChlKSlyZXR1cm4gamQ/amQuY2FsbChlKToiIjt2YXIgcj1lKyIiO3JldHVybiIwIj09ciYmMS9lPT0tMS8wPyItMCI6cn0sQWQ9ZnVuY3Rpb24odCl7cmV0dXJuIG51bGw9PXQ/IiI6VGQodCl9LExkPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGNoKHQpP3Q6amgodCxlKT9bdF06UmQoQWQodCkpfSxNZD1mdW5jdGlvbih0KXtpZigic3RyaW5nIj09dHlwZW9mIHR8fFJoKHQpKXJldHVybiB0O3ZhciBlPXQrIiI7cmV0dXJuIjAiPT1lJiYxL3Q9PS0xLzA/Ii0wIjplfSxDZD1mdW5jdGlvbih0LGUpe2Zvcih2YXIgcj0wLG49KGU9TGQoZSx0KSkubGVuZ3RoO251bGwhPXQmJnI8bjspdD10W01kKGVbcisrXSldO3JldHVybiByJiZyPT1uP3Q6dm9pZCAwfSxQZD1mdW5jdGlvbih0LGUscil7dmFyIG49bnVsbD09dD92b2lkIDA6Q2QodCxlKTtyZXR1cm4gdm9pZCAwPT09bj9yOm59O2Z1bmN0aW9uIElkKHQpe3JldHVybiEoIWZ1bmN0aW9uKHQpe3JldHVybiJbb2JqZWN0IFN0cmluZ10iPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfSh0KXx8IiI9PT10KX1mdW5jdGlvbiBOZCgpe3ZhciB0LGUscj1uZXcgUHJvbWlzZSgoZnVuY3Rpb24oKXt0PWFyZ3VtZW50c1swXSxlPWFyZ3VtZW50c1sxXX0pKTtyZXR1cm4gci5yZXNvbHZlPXQsci5yZWplY3Q9ZSxyfXJldHVybntwYXJzZTpmdW5jdGlvbih0KXt2YXIgZT17fTtpZighSWQodCkpcmV0dXJuIFByb21pc2UucmVqZWN0KCJzdHIgaXMgbm90IHN0cmluZyIpO3ZhciByPSJfX3N5c3RlbV9fIixuPSd7IicuY29uY2F0KHIsJyI6JykuY29uY2F0KHQsIn0iKSxpPU5kKCksbz1TbihuKSxhPXNvLnBhcnNlKCIkKiIpO3JldHVybiBhLm9uKCJkYXRhIiwoZnVuY3Rpb24odCl7ZVt0LmtleV09dC52YWx1ZX0pKSxhLm9uKCJlbmQiLChmdW5jdGlvbigpe3ZhciB0PVBkKGUscik7aS5yZXNvbHZlKHQpfSkpLGEub24oImVycm9yIiwoZnVuY3Rpb24odCl7aS5yZWplY3QodCl9KSksby5waXBlKGEpLGl9LHN0cmluZ2lmeTpmdW5jdGlvbih0KXt2YXIgZT0iIjtpZighZnVuY3Rpb24odCl7cmV0dXJuIltvYmplY3QgT2JqZWN0XSI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCl9KHQpJiYhZnVuY3Rpb24odCl7cmV0dXJuIltvYmplY3QgQXJyYXldIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KX0odCkpcmV0dXJuIFByb21pc2UucmVqZWN0KCJkYXRhIGlzIG5vdCBvYmplY3Qgb3IgYXJyYXkiKTt2YXIgcj1OZCgpLG49bmV3IGZoKHQsbnVsbCxudWxsLCExKTtyZXR1cm4gbi5vbigiZGF0YSIsKGZ1bmN0aW9uKHQpe2UrPXR9KSksbi5vbigiZW5kIiwoZnVuY3Rpb24oKXtyLnJlc29sdmUoZSl9KSksbi5vbigiZXJyb3IiLChmdW5jdGlvbih0KXtyLnJlamVjdCh0KX0pKSxyfX19KCl9KHI9e2V4cG9ydHM6e319LHIuZXhwb3J0cyksci5leHBvcnRzKSk7bGV0IGdXZWJXb3JrZXI1X09ialN0cmVhbT17c3RyaW5naWZ5Om4uc3RyaW5naWZ5LHBhcnNlOm4ucGFyc2V9OwoKbGV0IGluc3RhbmNlID0gbnVsbApmdW5jdGlvbiBpbml0KGlucHV0KXsKCiAgICAvL2luaXQKICAgIGxldCByID0gZ1dlYldvcmtlcjVfT2JqU3RyZWFtKC4uLmlucHV0KQoKICAgIC8vb24KICAgIAoKICAgIC8vc2F2ZQogICAgaW5zdGFuY2UgPSByCgp9CgpmdW5jdGlvbiBzZW5kTWVzc2FnZShkYXRhKSB7CiAgICBzZWxmLnBvc3RNZXNzYWdlKGRhdGEpCn0KCmFzeW5jIGZ1bmN0aW9uIHJ1bihkYXRhKSB7CiAgICAvLyBjb25zb2xlLmxvZygnaW5uZXIgd29ya2VyIHJ1bicsZGF0YSkKCiAgICAvL21vZGUKICAgIGxldCBtb2RlID0gZGF0YS5tb2RlCgogICAgLy9jaGVjawogICAgaWYobW9kZSAhPT0gJ2luaXQnICYmIG1vZGUgIT09ICdjYWxsJyl7CiAgICAgICAgcmV0dXJuCiAgICB9CgogICAgLy9pbml0CiAgICBpZihtb2RlID09PSAnaW5pdCcpewogICAgICAgIAogICAgICAgIHRyeXsKCiAgICAgICAgICAgIC8vdHlwZQogICAgICAgICAgICBsZXQgdHlwZSA9IGRhdGEudHlwZQoKICAgICAgICAgICAgLy9pbnB1dAogICAgICAgICAgICBsZXQgaW5wdXQgPSBkYXRhLmlucHV0CiAgICAKICAgICAgICAgICAgLy9pbnN0YW5jZQogICAgICAgICAgICBpZih0eXBlID09PSAnZnVuY3Rpb24nKXsKICAgICAgICAgICAgICAgIGluaXQoLi4uaW5wdXQpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSBpZih0eXBlID09PSAnb2JqZWN0Jyl7CiAgICAgICAgICAgICAgICBpbnN0YW5jZSA9IGdXZWJXb3JrZXI1X09ialN0cmVhbQogICAgICAgICAgICB9CgogICAgICAgIH0KICAgICAgICBjYXRjaChlcnIpewogICAgICAgIAogICAgICAgICAgICAvL3NlbmRNZXNzYWdlCiAgICAgICAgICAgIGxldCByZXMgPSB7CiAgICAgICAgICAgICAgICBtb2RlOiAnZW1pdCcsCiAgICAgICAgICAgICAgICBldk5hbWU6ICdlcnJvcicsCiAgICAgICAgICAgICAgICBtc2c6IGVyciwKICAgICAgICAgICAgfQogICAgICAgICAgICBzZW5kTWVzc2FnZShyZXMpCgogICAgICAgIH0KICAgICAgICAgICAgCiAgICB9CgogICAgLy9jaGVjawogICAgaWYobW9kZSA9PT0gJ2NhbGwnKXsKICAgICAgICBsZXQgc3RhdGUgPSAnJwogICAgICAgIGxldCBtc2cgPSBudWxsCgogICAgICAgIHRyeXsKCiAgICAgICAgICAgIC8vZnVuCiAgICAgICAgICAgIGxldCBmdW4gPSBpbnN0YW5jZVtkYXRhLmZ1bl0KCiAgICAgICAgICAgIC8vaW5wdXQKICAgICAgICAgICAgbGV0IGlucHV0ID0gZGF0YS5pbnB1dAoKICAgICAgICAgICAgLy9leGVjCiAgICAgICAgICAgIGF3YWl0IGZ1biguLi5pbnB1dCkKICAgICAgICAgICAgICAgIC50aGVuKChzdWMpID0+IHsKICAgICAgICAgICAgICAgICAgICBzdGF0ZT0nc3VjY2VzcycKICAgICAgICAgICAgICAgICAgICBtc2c9c3VjCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHsKICAgICAgICAgICAgICAgICAgICBzdGF0ZT0nZXJyb3InCiAgICAgICAgICAgICAgICAgICAgbXNnPWVycgogICAgICAgICAgICAgICAgfSkKCiAgICAgICAgfQogICAgICAgIGNhdGNoKGVycil7CiAgICAgICAgICAgIHN0YXRlID0gJ2Vycm9yJwogICAgICAgICAgICBtc2cgPSBlcnIKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgLy9zZW5kTWVzc2FnZQogICAgICAgIGxldCByZXMgPSB7CiAgICAgICAgICAgIG1vZGU6ICdyZXR1cm4nLAogICAgICAgICAgICBpZDogZGF0YS5pZCwKICAgICAgICAgICAgZnVuOiBkYXRhLmZ1biwKICAgICAgICAgICAgc3RhdGUsCiAgICAgICAgICAgIG1zZywKICAgICAgICB9CiAgICAgICAgc2VuZE1lc3NhZ2UocmVzKQoKICAgIH0KCn0KCnNlbGYub25tZXNzYWdlID0gZnVuY3Rpb24gKGUpIHsKICAgIC8vIGNvbnNvbGUubG9nKCdpbm5lciB3b3JrZXIgcmVjdjonLCBlLmRhdGEpCgogICAgLy9kYXRhUmVjdgogICAgbGV0IGRhdGFSZWN2ID0gZS5kYXRhCgogICAgLy9ydW4KICAgIHJ1bihkYXRhUmVjdikKCn0KICAgIAo=");function V(){function l(l){var Z,m=window.URL||window.webkitURL;try{return Z=new Blob([l]),new Worker(m.createObjectURL(Z))}catch(l){console.log(l)}}var Z=l(p);if(null===Z)return console.log("invalid webworker"),null;function m(){Z.terminate(),Z=void 0}var d=W();function b(){var l={mode:"init",type:"object",input:Array.prototype.slice.call(arguments)};Z.postMessage(l)}function c(){var l=i(),m=y(),b={mode:"call",id:m,fun:"stringify",input:Array.prototype.slice.call(arguments)};return Z.postMessage(b),d.once(m,(function(Z){"success"===Z.state?l.resolve(Z.msg):l.reject(Z.msg)})),l}function G(){var l=i(),m=y(),b={mode:"call",id:m,fun:"parse",input:Array.prototype.slice.call(arguments)};return Z.postMessage(b),d.once(m,(function(Z){"success"===Z.state?l.resolve(Z.msg):l.reject(Z.msg)})),l}return Z.onmessage=function(l){var Z=l.data,m=Z.mode;"emit"!==m&&"return"!==m||("emit"===m&&d.emit(Z.evName,Z.msg),"return"===m&&d.emit(Z.id,Z))},b(Array.prototype.slice.call(arguments)),d.stringify=c,d.parse=G,d.terminate=m,d}var u,h,I=null,Y={stringify:(h=d(G.mark((function l(){var m,d,b,c=arguments;return G.wrap((function(l){for(;;)switch(l.prev=l.next){case 0:return m=Array.prototype.slice.call(c),d=V(),l.next=4,d.stringify.apply(d,Z(m)).finally((function(){d.terminate()}));case 4:return b=l.sent,l.abrupt("return",b);case 6:case"end":return l.stop()}}),l)}))),function(){return h.apply(this,arguments)}),parse:(u=d(G.mark((function l(){var m,d,b,c=arguments;return G.wrap((function(l){for(;;)switch(l.prev=l.next){case 0:return m=Array.prototype.slice.call(c),d=V(),l.next=4,d.parse.apply(d,Z(m)).finally((function(){d.terminate()}));case 4:return b=l.sent,l.abrupt("return",b);case 6:case"end":return l.stop()}}),l)}))),function(){return u.apply(this,arguments)})};for(var K in I=W(),Y){var a=Y[K];I[K]=a}return I}));
